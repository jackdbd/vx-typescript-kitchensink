{"version":3,"sources":["components/App/logo.svg","components/AxisDemo/index.tsx","components/GradientsDemo/index.tsx","components/HeatmapsDemo/index.tsx","components/LinesDemo/index.tsx","components/PatternsDemo/index.tsx","components/PolygonsDemo/index.tsx","components/App/index.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","data","genDateValue","x","d","date","y","value","numTicksForHeight","height","numTicksForWidth","width","AxisDemo","props","margin","xMax","left","right","yMax","top","bottom","scaleTimeOptions","domain","extent","range","xScale","scaleTime","linearScaleOptions","Math","max","apply","Object","toConsumableArray","map","nice","yScale","scaleLinear","react_default","a","createElement","vx_gradient_es","id","vertical","fromOpacity","toOpacity","fill","rx","vx_grid_es","stroke","numTicksRows","numTicksColumns","vx_group_es","vx_shape_es","y0","y1","strokeWidth","curve","curveBasis","vx_axis_es","scale","hideZero","numTicks","label","labelProps","fontFamily","fontSize","textAnchor","tickStroke","tickLabelProps","index","dx","dy","tickComponent","_ref","formattedValue","tickProps","objectWithoutProperties","axis","axisCenter","axisToPoint","axisFromPoint","className","ticks","tick","i","tickX","to","tickY","tickLength","key","concat","from","transform","AxisDemoResponsive","withParentSize","parentWidth","AxisDemo_AxisDemo","GradientsDemo","h","w","r","genBins","dataBins","arguments","length","undefined","bins","count","colorMax","bucketSizeMax","circleColorScale","rectColorScale","opacityScale","HeatmapsDemo","separation","size","binWidth","radius","values","min","vx_heatmap_es","colorScale","gap","heatmap","heatmapColumn","cell","row","column","cx","cy","color","fillOpacity","opacity","onClick","event","alert","JSON","stringify","objectSpread","bin","binHeight","series","Array","reduce","rec","LinesDemo","_ref2","slicedToArray","scaleLinearOptions","rangeRound","dd","curveMonotoneX","LinesDemoResponsive","LinesDemo_LinesDemo","PatternsDemo","pWidth","pHeight","vx_pattern_es","orientation","complement","polygons","rotate","sides","scaleBand","padding","PolygonsDemo","polygon","Div","styled","div","_templateObject","RotatingLogo","img","_templateObject3","keyframes","_templateObject2","Header","header","_templateObject4","Grid","_templateObject5","gridGap","App","_this$props","this","src","logo","alt","vx_responsive_es","components_GradientsDemo","components_PatternsDemo","components_PolygonsDemo","components_HeatmapsDemo","React","Component","defaultProps","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.010c0639.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { AxisBottom, AxisLeft, AxisRight, RenderProps } from \"@vx/axis\";\nimport { curveBasis } from \"@vx/curve\";\nimport { GradientOrangeRed } from \"@vx/gradient\";\nimport { Grid } from \"@vx/grid\";\nimport { Group } from \"@vx/group\";\nimport { DateValueDatum, genDateValue } from \"@vx/mock-data\";\nimport { withParentSize, WithParentSizeProps } from \"@vx/responsive\";\nimport { Accessor, scaleLinear, scaleTime } from \"@vx/scale\";\nimport { Area, Line, LinePath } from \"@vx/shape\";\nimport { extent } from \"d3-array\";\nimport React from \"react\";\n// import { Text } from \"@vx/text\";\nimport { IMargin } from \"../../interfaces\";\n\nconst data = genDateValue(20);\nconst x: Accessor<DateValueDatum, Date> = (d: DateValueDatum) => d.date;\nconst y: Accessor<DateValueDatum, number> = (d: DateValueDatum) => d.value;\n\nfunction numTicksForHeight(height: number) {\n  if (height <= 300) {\n    return 3;\n  }\n  if (300 < height && height <= 600) {\n    return 5;\n  }\n  return 10;\n}\n\nfunction numTicksForWidth(width: number) {\n  if (width <= 300) {\n    return 2;\n  }\n  if (300 < width && width <= 400) {\n    return 5;\n  }\n  return 10;\n}\n\nexport interface IProps {\n  width: number;\n  height: number;\n  margin: IMargin;\n}\n\nconst AxisDemo = (props: IProps) => {\n  const { width, height, margin } = props;\n\n  const xMax = width - margin.left - margin.right;\n  const yMax = height - margin.top - margin.bottom;\n\n  const scaleTimeOptions = {\n    domain: extent(data, x) as [Date, Date],\n    range: [0, xMax],\n  };\n  const xScale = scaleTime(scaleTimeOptions);\n\n  const linearScaleOptions = {\n    domain: [0, Math.max(...data.map(y))],\n    nice: true,\n    range: [yMax, 0],\n  };\n  const yScale = scaleLinear(linearScaleOptions);\n\n  // const tickComponent = (props: TickOptions) => {\n  //   console.log(\"tickComponent\", tickComponent, \"props\", props)\n  //   const {formattedValue, ...tickProps} = props\n  //   return (<span>{formattedValue}</span>)\n  //   // return (<text x={tickProps.x} y={tickProps.y}>{formattedValue}</text>)\n  // }\n\n  return (\n    <svg width={width} height={height}>\n      <GradientOrangeRed\n        id=\"linear\"\n        vertical={false}\n        fromOpacity={0.8}\n        toOpacity={0.3}\n      />\n      <rect x={0} y={0} width={width} height={height} fill=\"#f4419f\" rx={14} />\n      <Grid\n        top={margin.top}\n        left={margin.left}\n        xScale={xScale}\n        yScale={yScale}\n        stroke=\"rgba(142, 32, 95, 0.9)\"\n        width={xMax}\n        height={yMax}\n        numTicksRows={numTicksForHeight(height)}\n        numTicksColumns={numTicksForWidth(width)}\n      />\n      <Group top={margin.top} left={margin.left}>\n        <Area\n          data={data}\n          x={(d: DateValueDatum) => xScale(x(d))}\n          y0={(d: DateValueDatum) => yScale.range()[0]}\n          y1={(d: DateValueDatum) => yScale(y(d))}\n          stroke={\"transparent\"}\n          strokeWidth={2}\n          fill={\"url(#linear)\"}\n          curve={curveBasis}\n        />\n        <LinePath\n          data={data}\n          x={(d: DateValueDatum) => xScale(x(d))}\n          y={(d: DateValueDatum) => yScale(y(d))}\n          stroke={\"url('#linear')\"}\n          strokeWidth={2}\n          curve={curveBasis}\n        />\n      </Group>\n      <Group left={margin.left}>\n        <AxisLeft\n          top={margin.top}\n          left={0}\n          scale={yScale}\n          hideZero\n          numTicks={numTicksForHeight(height)}\n          label=\"Axis Left Label\"\n          labelProps={{\n            fill: \"#8e205f\",\n            fontFamily: \"Arial\",\n            fontSize: 12,\n            textAnchor: \"middle\",\n          }}\n          stroke=\"#1b1a1e\"\n          tickStroke=\"#8e205f\"\n          tickLabelProps={(value: any, index: number) => ({\n            dx: \"-0.25em\",\n            dy: \"0.25em\",\n            fill: \"#8e205f\",\n            fontFamily: \"Arial\",\n            fontSize: 10,\n            textAnchor: \"end\",\n          })}\n          tickComponent={({ formattedValue, ...tickProps }) => (\n            <text {...tickProps}>{formattedValue}</text>\n          )}\n        />\n        <AxisRight\n          top={margin.top}\n          left={xMax}\n          scale={yScale}\n          hideZero\n          numTicks={numTicksForHeight(height)}\n          label=\"Axis Right Label\"\n          labelProps={{\n            fill: \"#8e205f\",\n            fontFamily: \"Arial\",\n            fontSize: 12,\n            textAnchor: \"middle\",\n          }}\n          stroke=\"#1b1a1e\"\n          tickStroke=\"#8e205f\"\n          tickLabelProps={(value, index) => ({\n            dx: \"0.25em\",\n            dy: \"0.25em\",\n            fill: \"#8e205f\",\n            fontFamily: \"Arial\",\n            fontSize: 10,\n            textAnchor: \"start\",\n          })}\n        />\n        <AxisBottom\n          top={height - margin.bottom}\n          left={0}\n          scale={xScale}\n          numTicks={numTicksForWidth(width)}\n          label=\"Time\"\n        >\n          {(axis: RenderProps) => {\n            const tickLabelSize = 10;\n            const tickRotate = 45;\n            const tickColor = \"#8e205f\";\n            const axisCenter = (axis.axisToPoint.x - axis.axisFromPoint.x) / 2;\n            return (\n              <g className=\"my-custom-bottom-axis\">\n                {axis.ticks.map((tick: any, i: number) => {\n                  const tickX = tick.to.x;\n                  const tickY = tick.to.y + tickLabelSize + axis.tickLength;\n                  return (\n                    <Group\n                      key={`vx-tick-${tick.value}-${i}`}\n                      className={\"vx-axis-tick\"}\n                    >\n                      <Line from={tick.from} to={tick.to} stroke={tickColor} />\n                      <text\n                        transform={`translate(${tickX}, ${tickY}) rotate(${tickRotate})`}\n                        fontSize={tickLabelSize}\n                        textAnchor=\"middle\"\n                        fill={tickColor}\n                      >\n                        {tick.formattedValue}\n                      </text>\n                    </Group>\n                  );\n                })}\n                <text\n                  textAnchor=\"middle\"\n                  transform={`translate(${axisCenter}, 50)`}\n                  fontSize=\"8\"\n                >\n                  {axis.label}\n                </text>\n              </g>\n            );\n          }}\n        </AxisBottom>\n      </Group>\n    </svg>\n  );\n};\n\ninterface IAxisDemoResponsiveProps extends WithParentSizeProps {\n  margin: IMargin;\n}\n\nconst AxisDemoResponsive = withParentSize((props: IAxisDemoResponsiveProps) => {\n  const { margin, parentWidth } = props;\n  // TODO: parentHeight causes a resize every time\n  return <AxisDemo height={400} width={parentWidth} margin={margin} />;\n});\n\nexport { AxisDemo, AxisDemoResponsive };\n\nexport default AxisDemo;\n","import {\n  GradientDarkgreenGreen,\n  GradientLightgreenGreen,\n  GradientOrangeRed,\n  GradientPinkBlue,\n  GradientPinkRed,\n  GradientPurpleOrange,\n  GradientPurpleRed,\n  GradientSteelPurple,\n  GradientTealBlue,\n  RadialGradient,\n} from \"@vx/gradient\";\nimport { Bar } from \"@vx/shape\";\nimport React from \"react\";\n\ninterface IProps {\n  height: number;\n  width: number;\n}\n\nconst GradientsDemo = (props: IProps) => {\n  const { height, width } = props;\n  const h = (height - 50) / 2;\n  const w = width / 4;\n  return (\n    <svg height={height} width={width}>\n      <GradientDarkgreenGreen id=\"DarkgreenGreen\" />\n      <GradientLightgreenGreen id=\"LightgreenGreen\" />\n      <GradientOrangeRed id=\"OrangeRed\" />\n      <GradientPinkBlue id=\"PinkBlue\" />\n      <GradientPinkRed id=\"PinkRed\" vertical={false} />\n      <GradientPurpleOrange id=\"PurpleOrange\" vertical={false} />\n      <GradientPurpleRed id=\"PurpleRed\" vertical={false} />\n      <RadialGradient from=\"#55bdd5\" to=\"#4f3681\" id=\"Radial\" r={\"80%\"} />\n      <GradientSteelPurple id=\"SteelPurple\" vertical={false} />\n      <GradientTealBlue id=\"TealBlue\" vertical={false} />\n      <Bar\n        x={0}\n        y={0}\n        width={w}\n        height={h}\n        fill={`url(#LightgreenGreen)`}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n        rx={14}\n      />\n      <Bar\n        x={w}\n        y={0}\n        width={w}\n        height={h}\n        fill={`url(#OrangeRed)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n      <Bar\n        x={w * 2}\n        y={0}\n        width={w}\n        height={h}\n        fill={`url(#PinkBlue)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n      <Bar\n        x={w * 3}\n        y={0}\n        width={w}\n        height={h}\n        fill={`url(#DarkgreenGreen)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n      <Bar\n        x={0}\n        y={h}\n        width={w}\n        height={h}\n        fill={`url(#PinkRed)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n      <Bar\n        x={w}\n        y={h}\n        width={w}\n        height={h}\n        fill={`url(#TealBlue)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n      <Bar\n        x={w * 2}\n        y={h}\n        width={w}\n        height={h}\n        fill={`url(#PurpleOrange)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n      <Bar\n        x={w * 3}\n        y={h}\n        width={w}\n        height={h}\n        fill={`url(#Radial)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n    </svg>\n  );\n};\n\nexport default GradientsDemo;\n","import { Group } from \"@vx/group\";\nimport { HeatmapCircle, HeatmapRect } from \"@vx/heatmap\";\nimport { Bin, genBins } from \"@vx/mock-data\";\nimport { scaleLinear } from \"@vx/scale\";\nimport React from \"react\";\nimport { clearLine } from \"readline\";\nimport { IMargin } from \"../../interfaces\";\n\nconst hot1 = \"#77312f\";\nconst hot2 = \"#f33d15\";\nconst cool1 = \"#122549\";\nconst cool2 = \"#b4fbde\";\nconst bg = \"#28272c\";\n\nconst data = genBins(16, 16);\n\ninterface IHeatmapBinDatum {\n  bin: number;\n  bins: number[];\n}\n\ninterface IHeatmapCell {\n  bin: Bin;\n  color: string;\n  column: number;\n  count: number;\n  cx: number;\n  cy: number;\n  datum: IHeatmapBinDatum;\n  gap: number;\n  height: number;\n  opacity: number;\n  r: number;\n  radius: number;\n  row: number;\n  width: number;\n  x: number;\n  y: number;\n}\n\ntype IHeatmapColumn = IHeatmapCell[];\n\n// utils\nconst max = (dataBins: Bin[], value = (d: any) => d) =>\n  Math.max(...dataBins.map(value));\nconst min = (values: number[], value = (d: any) => d) =>\n  Math.min(...values.map(value));\n\n// accessors\nconst bins = (d: any) => d.bins;\nconst count = (d: any) => d.count;\n\nconst colorMax = max(data, (d: any) => max(bins(d), count));\nconst bucketSizeMax = max(data, (d: any) => bins(d).length);\n\n// scales\nconst xScale = scaleLinear({\n  domain: [0, data.length],\n});\nconst yScale = scaleLinear({\n  domain: [0, bucketSizeMax],\n});\nconst circleColorScale = scaleLinear({\n  domain: [0, colorMax],\n  range: [hot1, hot2],\n});\nconst rectColorScale = scaleLinear({\n  domain: [0, colorMax],\n  range: [cool1, cool2],\n});\nconst opacityScale = scaleLinear({\n  domain: [0, colorMax],\n  range: [0.1, 1],\n});\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  separation: number;\n  width: number;\n}\n\nconst HeatmapsDemo = (props: IProps) => {\n  const { height, margin, separation, width } = props;\n  // bounds\n  let size = width;\n  if (size > margin.left + margin.right) {\n    size = width - margin.left - margin.right - separation;\n  }\n\n  const xMax = size / 2;\n  const yMax = height - margin.bottom - margin.top;\n\n  const binWidth = xMax / data.length;\n  const binHeight = yMax / bucketSizeMax;\n  const radius = min([binWidth, binHeight]) / 2;\n\n  xScale.range([0, xMax]);\n  yScale.range([yMax, 0]);\n\n  return (\n    <svg width={width} height={height}>\n      <rect x={0} y={0} width={width} height={height} rx={14} fill={bg} />\n      <Group top={margin.top} left={margin.left}>\n        <HeatmapCircle\n          data={data}\n          xScale={xScale}\n          yScale={yScale}\n          colorScale={circleColorScale}\n          opacityScale={opacityScale}\n          radius={radius}\n          gap={2}\n        >\n          {(heatmap: IHeatmapCell[][]) => {\n            return heatmap.map((heatmapColumn: IHeatmapColumn) => {\n              return heatmapColumn.map((cell: IHeatmapCell) => {\n                return (\n                  <circle\n                    key={`heatmap-circle-${cell.row}-${cell.column}`}\n                    className=\"vx-heatmap-circle\"\n                    cx={cell.cx}\n                    cy={cell.cy}\n                    r={cell.r > 0 ? cell.r : 0}\n                    fill={cell.color}\n                    fillOpacity={cell.opacity}\n                    onClick={(event: React.MouseEvent) => {\n                      const { row, column } = cell;\n                      alert(JSON.stringify({ row, column, ...cell.bin }));\n                    }}\n                  />\n                );\n              });\n            });\n          }}\n        </HeatmapCircle>\n      </Group>\n      <Group top={margin.top} left={xMax + margin.left + separation}>\n        <HeatmapRect\n          data={data}\n          xScale={xScale}\n          yScale={yScale}\n          colorScale={rectColorScale}\n          opacityScale={opacityScale}\n          binWidth={binWidth}\n          binHeight={binWidth}\n          gap={2}\n        >\n          {(heatmap: IHeatmapCell[][]) => {\n            return heatmap.map((heatmapColumn: IHeatmapColumn) => {\n              return heatmapColumn.map((cell: IHeatmapCell) => {\n                return (\n                  <rect\n                    key={`heatmap-rect-${cell.row}-${cell.column}`}\n                    className=\"vx-heatmap-rect\"\n                    width={cell.width > 0 ? cell.width : 0}\n                    height={cell.height > 0 ? cell.height : 0}\n                    x={cell.x}\n                    y={cell.y}\n                    fill={cell.color}\n                    fillOpacity={cell.opacity}\n                    onClick={(event: React.MouseEvent) => {\n                      const { row, column } = cell;\n                      alert(JSON.stringify({ row, column, ...cell.bin }));\n                    }}\n                  />\n                );\n              });\n            });\n          }}\n        </HeatmapRect>\n      </Group>\n    </svg>\n  );\n};\n\nexport default HeatmapsDemo;\n","import { curveMonotoneX } from \"@vx/curve\";\nimport { GridRows } from \"@vx/grid\";\nimport { Group } from \"@vx/group\";\nimport { DateValueDatum, genDateValue } from \"@vx/mock-data\";\nimport { withParentSize, WithParentSizeProps } from \"@vx/responsive\";\nimport { Accessor, scaleLinear, scaleTime } from \"@vx/scale\";\nimport { LinePath } from \"@vx/shape\";\nimport { extent, max } from \"d3-array\";\nimport React from \"react\";\nimport { IMargin } from \"../../interfaces\";\n\nfunction genLines(num: number) {\n  return new Array(num).fill(1).map(() => {\n    return genDateValue(25);\n  });\n}\n\nconst series = genLines(12);\nconst data = series.reduce((rec, d) => {\n  return rec.concat(d);\n}, []);\n\nconst x: Accessor<DateValueDatum, Date> = (d: DateValueDatum) => d.date;\nconst y: Accessor<DateValueDatum, number> = (d: DateValueDatum) => d.value;\n\ninterface IProps {\n  width: number;\n  height: number;\n  margin: IMargin;\n}\n\nconst LinesDemo = (props: IProps) => {\n  const { height, width, margin } = props;\n  const xMax = width;\n  const yMax = height / 8;\n\n  const [minDate, maxDate] = extent(data, x) as [Date, Date];\n  const scaleTimeOptions = {\n    domain: [minDate, maxDate],\n    range: [0, xMax],\n  };\n  const xScale = scaleTime(scaleTimeOptions);\n\n  const maxValue = max(data, y) as number;\n  const scaleLinearOptions = {\n    domain: [0, maxValue],\n    range: [yMax, 0],\n    rangeRound: [1, 2],\n  };\n  const yScale = scaleLinear(scaleLinearOptions);\n\n  return (\n    <svg width={width} height={height}>\n      <rect x={0} y={0} width={width} height={height} fill=\"#242424\" rx={14} />\n      <GridRows\n        top={margin.top}\n        left={margin.left}\n        scale={xScale}\n        stroke=\"rgba(142, 32, 95, 0.9)\"\n        width={xMax}\n      />\n      {xMax > 8 &&\n        series.map((d, i) => {\n          return (\n            <Group key={`lines-${i}`} top={(i * yMax) / 2}>\n              <LinePath\n                data={d}\n                x={(dd: any) => xScale(x(dd))}\n                y={(dd: any) => yScale(y(dd))}\n                stroke={\"#ffffff\"}\n                strokeWidth={1}\n                curve={i % 2 === 0 ? curveMonotoneX : undefined}\n              />\n            </Group>\n          );\n        })}\n    </svg>\n  );\n};\n\ninterface ILinesDemoResponsiveProps extends WithParentSizeProps {\n  margin: IMargin;\n}\n\nconst LinesDemoResponsive = withParentSize(\n  (props: ILinesDemoResponsiveProps) => {\n    const { margin, parentWidth } = props;\n    // TODO: parentHeight causes a resize every time\n    return <LinesDemo height={400} width={parentWidth} margin={margin} />;\n  }\n);\n\nexport { LinesDemo, LinesDemoResponsive };\n\nexport default LinesDemo;\n","import { PatternCircles, PatternLines, PatternWaves } from \"@vx/pattern\";\nimport { Bar } from \"@vx/shape\";\nimport React from \"react\";\n\ninterface IProps {\n  height: number;\n  width: number;\n}\n\nconst PatternsDemo = (props: IProps) => {\n  const { height, width } = props;\n  const xMax = width;\n  const yMax = height - 80;\n  const pWidth = xMax / 4;\n  const pHeight = yMax / 2;\n  return (\n    <svg width={width} height={height}>\n      <PatternLines\n        id=\"vLines\"\n        height={6}\n        width={6}\n        stroke=\"black\"\n        strokeWidth={1}\n      />\n      <PatternLines\n        id=\"hLines\"\n        height={6}\n        width={6}\n        stroke=\"black\"\n        strokeWidth={1}\n        orientation={[\"horizontal\"]}\n      />\n      <PatternLines\n        id=\"dLines\"\n        height={6}\n        width={6}\n        stroke=\"black\"\n        strokeWidth={1}\n        orientation={[\"diagonal\"]}\n      />\n      <PatternLines\n        id=\"dhLines\"\n        height={6}\n        width={6}\n        stroke=\"black\"\n        strokeWidth={1}\n        orientation={[\"vertical\", \"horizontal\"]}\n      />\n      <PatternCircles id=\"Circles\" height={6} width={6} fill=\"black\" />\n      <PatternCircles\n        id=\"cCircles\"\n        height={10}\n        width={10}\n        fill=\"black\"\n        complement\n      />\n      <PatternWaves\n        id=\"Waves\"\n        height={6}\n        width={6}\n        fill=\"transparent\"\n        stroke=\"black\"\n        strokeWidth={1}\n        complement\n      />\n      <PatternWaves\n        id=\"bWaves\"\n        height={12}\n        width={12}\n        fill=\"transparent\"\n        stroke=\"black\"\n        strokeWidth={1}\n        complement\n      />\n      <Bar\n        fill={`url(#vLines)`}\n        height={pHeight}\n        width={pWidth}\n        x={0}\n        y={0}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#hLines)`}\n        height={pHeight}\n        width={pWidth}\n        x={pWidth}\n        y={0}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#dLines)`}\n        height={pHeight}\n        width={pWidth}\n        x={pWidth * 2}\n        y={0}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#dhLines)`}\n        height={pHeight}\n        width={pWidth}\n        x={pWidth * 3}\n        y={0}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#Circles)`}\n        height={pHeight}\n        width={pWidth}\n        x={0}\n        y={pHeight}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#cCircles)`}\n        height={pHeight}\n        width={pWidth}\n        x={pWidth}\n        y={pHeight}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#Waves)`}\n        height={pHeight}\n        width={pWidth}\n        x={pWidth * 2}\n        y={pHeight}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#bWaves)`}\n        height={pHeight}\n        width={pWidth}\n        x={pWidth * 3}\n        y={pHeight}\n        rx={14}\n      />\n    </svg>\n  );\n};\n\nexport default PatternsDemo;\n","import { GradientPinkRed } from \"@vx/gradient\";\nimport { Group } from \"@vx/group\";\nimport { scaleBand } from \"@vx/scale\";\nimport { Polygon } from \"@vx/shape\";\nimport React from \"react\";\n\ninterface IProps {\n  height: number;\n  width: number;\n}\n\ninterface IPolygon {\n  fill: string;\n  rotate: number;\n  sides: number;\n}\n\nconst polygons: IPolygon[] = [\n  {\n    fill: \"rgb(174, 238, 248)\",\n    rotate: 90,\n    sides: 3,\n  },\n  {\n    fill: \"rgb(229, 253, 61)\",\n    rotate: 45,\n    sides: 4,\n  },\n  {\n    fill: \"rgb(229, 130, 255)\",\n    rotate: 0,\n    sides: 6,\n  },\n  {\n    fill: \"url(#polygon-pink)\",\n    rotate: 0,\n    sides: 8,\n  },\n];\n\nconst yScale = scaleBand({\n  domain: polygons.map((p: IPolygon, i: number) => i),\n  padding: 20,\n});\n\nconst PolygonsDemo = (props: IProps) => {\n  const { height, width } = props;\n  return (\n    <svg width={width} height={height}>\n      <rect width={width} height={height} fill=\"#7f82e3\" rx={14} />\n      <GradientPinkRed id=\"polygon-pink\" />\n      {polygons.map((polygon, i) => (\n        <Group key={`polygon-${i}`} top={yScale(i)} left={width / 2}>\n          <Polygon\n            sides={polygon.sides}\n            size={30}\n            fill={polygon.fill}\n            rotate={polygon.rotate}\n          />\n        </Group>\n      ))}\n    </svg>\n  );\n};\n\nexport default PolygonsDemo;\n","import { ParentProps, ParentSize } from \"@vx/responsive\";\nimport React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport AxisDemo, { AxisDemoResponsive } from \"../AxisDemo\";\nimport GradientsDemo from \"../GradientsDemo\";\nimport HeatmapsDemo from \"../HeatmapsDemo\";\nimport LinesDemo, { LinesDemoResponsive } from \"../LinesDemo\";\nimport PatternsDemo from \"../PatternsDemo\";\nimport PolygonsDemo from \"../PolygonsDemo\";\nimport logo from \"./logo.svg\";\n\nconst Div = styled.div`\n  text-align: center;\n`;\n\nconst rotate = () => keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst RotatingLogo = styled.img`\n  animation: ${rotate()} infinite 20s linear;\n  height: 40vmin;\n`;\n\nconst Header = styled.header`\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n`;\n\n/*\n  CSS Grid auto-fit for responsiveness: https://gridbyexample.com/examples/example37/\n  Common CSS breakpoints:\n  https://stackoverflow.com/questions/6370690/media-queries-how-to-target-desktop-tablet-and-mobile#7354648\n*/\ninterface IGridProps {\n  gridGap: number;\n}\nconst Grid = styled.div`\n  background-color: #282c34;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(600px, 1fr));\n  grid-gap: ${(props: IGridProps) => `${props.gridGap}` + \"rem\"};\n`;\n\ninterface IMargin {\n  bottom: number;\n  left: number;\n  right: number;\n  top: number;\n}\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n}\n\nclass App extends React.Component<IProps> {\n  public static defaultProps: Partial<IProps> = {\n    height: 400,\n    margin: {\n      bottom: 10,\n      left: 10,\n      right: 10,\n      top: 10,\n    },\n  };\n  public render() {\n    const { height, margin } = this.props;\n    return (\n      <Div>\n        <Header>\n          <h1>vx-kitchensink</h1>\n          <RotatingLogo src={logo} alt=\"logo\" />\n        </Header>\n        <Grid gridGap={2}>\n          <AxisDemoResponsive margin={margin} />\n          <LinesDemoResponsive margin={margin} />\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <GradientsDemo height={height} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <PatternsDemo height={height} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <PolygonsDemo height={height} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <HeatmapsDemo\n                  height={height}\n                  margin={margin}\n                  separation={20}\n                  width={width}\n                />\n              );\n            }}\n          </ParentSize>\n        </Grid>\n      </Div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}