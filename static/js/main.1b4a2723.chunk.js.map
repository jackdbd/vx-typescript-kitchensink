{"version":3,"sources":["components/App/logo.svg","components/AreaDemo/index.tsx","components/AxisDemo/index.tsx","components/BarGroupDemo/index.tsx","components/BarGroupHorizontalDemo/index.tsx","components/BarStackDemo/index.tsx","components/BarStackHorizontalDemo/index.tsx","components/ChordDemo/index.tsx","components/CurveDemo/index.tsx","components/DendrogramsDemo/index.tsx","components/DotsDemo/index.tsx","components/DragDemo/index.tsx","components/GeoDemo/index.tsx","components/GlyphDemo/index.tsx","components/GradientsDemo/index.tsx","components/HeatmapsDemo/index.tsx","components/LegendDemo/index.tsx","components/LineRadialDemo/index.tsx","components/LinesDemo/index.tsx","components/LinkTypesDemo/index.tsx","components/NetworkDemo/index.tsx","components/PackDemo/index.tsx","components/RadarDemo/index.tsx","components/PatternsDemo/index.tsx","components/PieDemo/index.tsx","components/PolygonsDemo/index.tsx","components/StatsDemo/index.tsx","components/TextDemo/index.tsx","components/ThresholdDemo/index.tsx","components/TreemapDemo/index.tsx","components/TreesDemo/index.tsx","components/VoronoiDemo/index.tsx","components/ZoomDemo/index.tsx","components/App/index.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","stock","appleStock","slice","formatDate","timeFormat","xStock","d","Date","date","timeDomain","extent","map","yStock","close","maxClose","max","bisectDate","bisector","left","AreaDemo","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this$props","props","width","height","margin","ruler","xMax","right","yMax","top","bottom","xScale","scaleTime","domain","range","yScale","scaleLinear","nice","react_default","a","createElement","x","y","fill","rx","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","vx_grid_es","lineStyle","pointerEvents","scale","strokeDasharray","stroke","vx_shape_es","curve","curveMonotoneX","data","strokeWidth","onMouseLeave","onMouseMove","onTouchMove","onTouchStart","from","to","style","cx","cy","r","fillOpacity","strokeOpacity","React","Component","AreaDemoWithTooltip","withTooltip","showTooltip","tooltipData","tooltipLeft","tooltipTop","AreaDemo_AreaDemo","assign","event","options","xAccessor","localPoint","x0","invert","index","d0","d1","handleTooltip","vx_tooltip_es","backgroundColor","color","concat","transform","genDateValue","yAccessor","yMaxValue","numTicksForHeight","numTicksForWidth","AxisDemo","scaleTimeOptions","linearScaleOptions","vx_gradient_es","vertical","fromOpacity","toOpacity","numTicksRows","numTicksColumns","vx_group_es","y0","curveBasis","vx_axis_es","hideZero","numTicks","label","labelProps","fontFamily","fontSize","textAnchor","tickStroke","tickLabelProps","dx","dy","tickComponent","_ref","formattedValue","tickProps","objectWithoutProperties","axis","axisCenter","axisToPoint","axisFromPoint","className","ticks","tick","i","tickX","tickY","tickLength","AxisDemoResponsive","withParentSize","parentWidth","AxisDemo_AxisDemo","green","cityTemperature","keys","filter","parseDate","timeParse","format","dateString","x0Accessor","x0Scale","scaleBand","padding","x1Scale","yDomain","Math","toConsumableArray","colorScale","scaleOrdinal","BarGroupDemo","_this","call","handleClick","bind","assertThisInitialized","renderBar","renderBarGroup","_this2","rangeRound","bandwidth","barGroups","tickFormat","hideAxisLine","tickLabelPropsFunction","dataset","target","alert","JSON","stringify","bar","data-value","data-key","onClick","barGroup","bars","keyGroup","arr","fn","y0Accessor","y0Scale","y1Scale","BarGroupHorizontalDemo","Container","styled","div","_templateObject","Div","_templateObject2","purple3","totals","reduce","prev","current","t","dailyTotal","k","parseInt","BarStackDemo","renderStackLayer","xOffset","layers","tickLabelFunction","vx_legend_es","direction","labelMargin","iLayer","data-index-bar","data-index-layer","layer","BarStackHorizontalDemo_templateObject","BarStackHorizontalDemo_templateObject2","BarStackHorizontalDemo","BarStackHorizontalDemo_Container","hideTicks","BarStackHorizontalDemo_Div","currentTarget","indexBar","indexLayer","matrix","descending","b","NaN","ChordDemo","outerRadius","min","innerRadius","vx_chord_es","padAngle","sortSubgroups","chords","groups","group","chord","radius","dateAccessor","valueAccessor","scaleLinearOptions","curves","func","curveBundle","curveLinear","curveMonotoneY","curveNatural","curveStep","CurveDemo","c","citrus","white","merlinsbeard","bg","cluster","name","children","Node","node","isRoot","depth","isParent","RootNode","DendrogramsDemo","hierarchy","vx_hierarchy_es","root","size","clusterNode","links","renderLink","descendants","renderDescendant","link","console","warn","tooltipTimeout","DotsDemo_templateObject","points","genRandomNormalPoints","_","DotsDemo","onMouseEnter","clamp","point","DotsDemoWithTooltip","hideTooltip","tooltipOpen","DotsDemo_DotsDemo","clearTimeout","_localPoint","setTimeout","DotsDemo_Div","colors","genItems","num","Array","random","round","genCircles","DragDemo","genItemsOptions","state","items","nextProps","setState","touchAction","vx_drag_es","onDragStart","raise","dragStart","dragEnd","dragMove","isDragging","onMouseDown","onMouseUp","onTouchEnd","topology","world","topojson","objects","units","features","f","geometry","coordinates","length","scaleQuantize","GeoDemo","centerX","centerY","vx_geo_es","translate","mercator","graticule","g","path","feature","properties","GlyphDemo","vx_glyph_es","GradientsDemo","h","w","genBins","dataBins","undefined","bins","count","colorMax","bucketSizeMax","circleColorScale","rectColorScale","opacityScale","HeatmapsDemo","separation","binWidth","values","vx_heatmap_es","gap","heatmap","heatmapColumn","cell","row","column","opacity","objectSpread","bin","binHeight","oneDecimalFormat","sizeScale","sizeColorScale","quantileScale","linearScale","thresholdScale","scaleThreshold","ordinalColorScale","ordinalColor2Scale","shapeScale","LegendDemos","LegendDemo","title","labels","datum","text","align","labelFormat","reverse","toUpperCase","display","flexDirection","shape","shapeProps","isValidElement","cloneElement","closeAccessor","xDomain","PI","scaleLog","angle","firstPoint","lastPoint","LineRadialDemo","curveBasisOpen","strokeLinecap","isNaN","series","rec","LinesDemo","_ref2","slicedToArray","dd","LinesDemoResponsive","LinesDemo_LinesDemo","LinkTypesDemo","layout","linkType","orientation","stepPercent","onSelectLayoutChange","onSelectOrientationChange","onSelectLinkTypeChange","onInputChange","renderDescendants","origin","sizeWidth","sizeHeight","_this$state","innerWidth","innerHeight","stopEventPropagation","onChange","disabled","type","step","isExpanded","parent","dataNode","LinkComponent","_this$state2","LinkRadialStep","LinkRadialCurve","LinkRadialLine","LinkRadial","LinkVerticalStep","LinkVerticalCurve","LinkVerticalLine","LinkVertical","LinkHorizontalStep","LinkHorizontalCurve","LinkHorizontalLine","LinkHorizontal","percent","linkData","_this3","_this$state3","_pointRadial","pointRadial","_pointRadial2","radialX","forceUpdate","stopPropagation","nodes","graph","source","NetworkDemo","vx_network_es","exoplanets","exoplanetsData","distance","pack","colorsDomain","PackDemo","allData","sum","sort","packNode","circles","renderCircle","circle","PatternsDemo","pWidth","pHeight","vx_pattern_es","complement","letters","letterFrequency","browsers","browserUsage","usage","usageAccessor","frequencyAccessor","frequency","PieDemo","pieValue","cornerRadius","pie","arcs","arc","_pie$path$centroid","centroid","_pie$path$centroid2","centroidX","centroidY","startAngle","hasSpaceForLabel","endAngle","pieSortValues","_pie$path$centroid3","_pie$path$centroid4","letter","polygons","rotate","sides","PolygonsDemo","polygon","pumpkin","silver","ANG","webs","zeroPoint","Point","radiusScale","RadarDemo","sin","cos","genPoints","polygonPoints","dataBis","accessor","genPolygonPoints","polygonPointsString","stringifyPoint","join","genPolygonPointsString","ringLines","renderRing","renderLine","renderPoint","genStats","s","boxPlot","minAccessor","maxAccessor","medianAccessor","median","firstQuartileAccessor","firstQuartile","thirdQuartileAccessor","thirdQuartile","outliersAccessor","outliers","StatsDemo","_d$boxPlot","flat","minYValue","maxYValue","boxWidth","constrainedWidth","vx_stats_es","binData","valueScale","medianProps","TextDemo","vx_text_es","verticalAnchor","nyAccessor","sfAccessor","minima","maxima","tempMin","tempMax","ThresholdDemo","vx_threshold_es","aboveAreaProps","belowAreaProps","clipAboveTo","clipBelowTo","shakespeare","stratify","parentId","TreemapDemo","renderNode","tile","treemapSquarify","treemap","data-depth","blue","plum","lightpurple","treeNode","TreesDemo_RootNode","ParentNode","TreesDemo","tree","TreesDemo_Node","toString","VoronoiDemo","_React$PureComponent","svg","handleMouseLeave","handleMouseMove","getUpdatedState","voronoiOptions","voronoiDiagram","voronoi","neighbors","Map","selected","ref","vx_clip_path_es","clipPath","hasNeighbors","get","vx_voronoi_es","_getCoordsFromEvent","getCoordsFromEvent","closest","find","cells","halfedges","forEach","edge","edges","set","PureComponent","initialTransform","scaleX","scaleY","skewX","skewY","translateX","translateY","ZoomDemo","showMiniMap","toggleMiniMap","gen","genPhyllotaxis","phyllotaxis","vx_zoom_es","scaleXMax","scaleXMin","scaleYMax","scaleYMin","transformMatrix","zoom","position","cursor","Fragment","interpolateRainbow","onWheel","handleWheel","onDoubleClick","toStringInvert","center","reset","clear","prevState","App_templateObject","RotatingLogo","img","_templateObject3","keyframes","App_templateObject2","Header","header","_templateObject4","Grid","_templateObject5","gridGap","App","App_Div","src","logo","alt","vx_responsive_es","GradientsDemo_GradientsDemo","PatternsDemo_PatternsDemo","PolygonsDemo_PolygonsDemo","HeatmapsDemo_HeatmapsDemo","TextDemo_TextDemo","LegendDemo_LegendDemos","GlyphDemo_GlyphDemo","GeoDemo_GeoDemo","ThresholdDemo_ThresholdDemo","DragDemo_DragDemo","VoronoiDemo_VoronoiDemo","CurveDemo_CurveDemo","ZoomDemo_ZoomDemo","LineRadialDemo_LineRadialDemo","PieDemo_PieDemo","BarGroupDemo_BarGroupDemo","BarGroupHorizontalDemo_BarGroupHorizontalDemo","BarStackDemo_BarStackDemo","BarStackHorizontalDemo_BarStackHorizontalDemo","TreemapDemo_TreemapDemo","TreesDemo_TreesDemo","DendrogramsDemo_DendrogramsDemo","PackDemo_PackDemo","LinkTypesDemo_LinkTypesDemo","RadarDemo_RadarDemo","ChordDemo_ChordDemo","NetworkDemo_NetworkDemo","StatsDemo_StatsDemo","defaultProps","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.1b4a2723.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { curveMonotoneX } from \"@vx/curve\";\nimport { localPoint } from \"@vx/event\";\nimport { GridColumns, GridRows } from \"@vx/grid\";\nimport { appleStock, AppleStockDatum } from \"@vx/mock-data\";\nimport { Accessor, scaleLinear, scaleTime } from \"@vx/scale\";\nimport { AreaClosed, Bar, Line } from \"@vx/shape\";\nimport { IWithTooltipProps, Tooltip, withTooltip } from \"@vx/tooltip\";\nimport { bisector, extent, max, min } from \"d3-array\";\nimport { timeFormat } from \"d3-time-format\";\nimport React from \"react\";\n\nimport { IMargin } from \"../../interfaces\";\n\nconst stock = appleStock.slice(800);\nconst formatDate = timeFormat(\"%b %d, '%y\");\n\nconst xStock: Accessor<AppleStockDatum, Date> = (d) => new Date(d.date);\nconst timeDomain = extent(appleStock.map(xStock)) as [Date, Date];\n\nconst yStock: Accessor<AppleStockDatum, number> = (d) => d.close;\nconst maxClose = max(appleStock.map(yStock)) as number;\n\nconst bisectDate = bisector<AppleStockDatum, Date>((d) => new Date(d.date)).left;\n\ninterface IRuler {\n  left: number;\n  top: number;\n}\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  onMouseLeave?: (event: MouseEvent) => void;\n  onMouseMove?: (event: MouseEvent) => void;\n  onTouchMove?: EventListener;\n  onTouchStart?: EventListener;\n  ruler?: IRuler;\n  width: number;\n}\n\nexport class AreaDemo extends React.Component<IProps> {\n  public render() {\n    const { width, height, margin, ruler } = this.props;\n    if (width < 10) {\n      return null;\n    }\n\n    const xMax = width - margin.left - margin.right;\n    const yMax = height - margin.top - margin.bottom;\n\n    const xScale = scaleTime({\n      domain: timeDomain,\n      range: [0, xMax],\n    });\n\n    const yScale = scaleLinear({\n      domain: [0, maxClose + yMax / 3],\n      nice: true,\n      range: [yMax, 0],\n    });\n\n    return (\n      <svg width={width} height={height}>\n        <rect\n          x={0}\n          y={0}\n          width={width}\n          height={height}\n          fill=\"#32deaa\"\n          rx={14}\n        />\n        <defs>\n          <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n            <stop offset=\"0%\" stopColor=\"#FFFFFF\" stopOpacity={1} />\n            <stop offset=\"100%\" stopColor=\"#FFFFFF\" stopOpacity={0.2} />\n          </linearGradient>\n        </defs>\n        <GridRows\n          lineStyle={{ pointerEvents: \"none\" }}\n          scale={yScale}\n          width={xMax}\n          strokeDasharray=\"2,2\"\n          stroke=\"rgba(255,255,255,0.3)\"\n        />\n        <GridColumns\n          lineStyle={{ pointerEvents: \"none\" }}\n          scale={xScale}\n          height={yMax}\n          strokeDasharray=\"2,2\"\n          stroke=\"rgba(255,255,255,0.3)\"\n        />\n        <AreaClosed\n          curve={curveMonotoneX}\n          data={stock}\n          fill={\"url(#gradient)\"}\n          stroke={\"url(#gradient)\"}\n          strokeWidth={1}\n          x={(d: AppleStockDatum) => xScale(xStock(d))}\n          y={(d: AppleStockDatum) => yScale(yStock(d))}\n          yScale={yScale}\n        />\n        <Bar\n          x={0}\n          y={0}\n          width={width}\n          height={height}\n          fill=\"transparent\"\n          rx={14}\n          data={stock}\n          onMouseLeave={this.props.onMouseLeave}\n          onMouseMove={this.props.onMouseMove}\n          onTouchMove={this.props.onTouchMove}\n          onTouchStart={this.props.onTouchStart}\n        />\n        {ruler && (\n          <g>\n            <Line\n              from={{ x: ruler.left, y: 0 }}\n              to={{ x: ruler.left, y: yMax }}\n              stroke=\"rgba(92, 119, 235, 1.000)\"\n              strokeWidth={2}\n              style={{ pointerEvents: \"none\" }}\n              strokeDasharray=\"2,2\"\n            />\n            <circle\n              cx={ruler.left}\n              cy={ruler.top + 1}\n              r={4}\n              fill=\"black\"\n              fillOpacity={0.1}\n              stroke=\"black\"\n              strokeOpacity={0.1}\n              strokeWidth={2}\n              style={{ pointerEvents: \"none\" }}\n            />\n            <circle\n              cx={ruler.left}\n              cy={ruler.top}\n              r={4}\n              fill=\"rgba(92, 119, 235, 1.000)\"\n              stroke=\"white\"\n              strokeWidth={2}\n              style={{ pointerEvents: \"none\" }}\n            />\n          </g>\n        )}\n      </svg>\n    );\n  }\n}\n\ntype IAreaDemoWithTooltipProps = IProps & IWithTooltipProps;\n\n// TODO: improve types\nfunction handleTooltip(options: any) {\n  const { data, event, xAccessor, xScale, yScale, showTooltip } = options;\n  const { x } = localPoint(event);\n  const x0 = xScale.invert(x);\n  const index = bisectDate(data, x0, 1);\n  const d0 = data[index - 1];\n  const d1 = data[index];\n  let d = d0;\n  if (d1 && d1.date) {\n    d = x0 - xAccessor(d0) > xAccessor(d1) - x0 ? d1 : d0;\n  }\n  showTooltip({\n    tooltipData: d,\n    tooltipLeft: x,\n    tooltipTop: yScale(d.close),\n  });\n}\n\nexport const AreaDemoWithTooltip = withTooltip(\n  (props: IAreaDemoWithTooltipProps) => {\n    const { margin, height, showTooltip, tooltipData, width } = props;\n    // at first tooltipLeft and tooltipTop are undefined\n    const tooltipLeft = props.tooltipLeft || 0;\n    const tooltipTop = props.tooltipTop || 0;\n\n    const xMax = width - margin.left - margin.right;\n    const yMax = height - margin.top - margin.bottom;\n\n    const xScale = scaleTime({\n      domain: timeDomain,\n      range: [0, xMax],\n    });\n    const yScale = scaleLinear({\n      domain: [0, maxClose + yMax / 3],\n      nice: true,\n      range: [yMax, 0],\n    });\n\n    const onMouseMove = (event: MouseEvent) => {\n      handleTooltip({\n        data: stock,\n        event,\n        showTooltip,\n        xAccessor: xStock,\n        xScale,\n        yScale,\n      });\n    };\n\n    return (\n      <div>\n        <AreaDemo\n          {...props}\n          onMouseMove={onMouseMove}\n          ruler={{ left: tooltipLeft, top: tooltipTop }}\n        />\n        {tooltipData && (\n          <div>\n            <Tooltip\n              top={tooltipTop - 12}\n              left={tooltipLeft + 12}\n              style={{\n                backgroundColor: \"rgba(92, 119, 235, 1.000)\",\n                color: \"white\",\n              }}\n            >\n              {`$${yStock(tooltipData)}`}\n            </Tooltip>\n            <Tooltip\n              top={yMax - 14}\n              left={tooltipLeft}\n              style={{\n                transform: \"translateX(-50%)\",\n              }}\n            >\n              {formatDate(xStock(tooltipData))}\n            </Tooltip>\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n","import { AxisBottom, AxisLeft, AxisRight, RenderProps } from \"@vx/axis\";\nimport { curveBasis } from \"@vx/curve\";\nimport { GradientOrangeRed } from \"@vx/gradient\";\nimport { Grid } from \"@vx/grid\";\nimport { Group } from \"@vx/group\";\nimport { DateValueDatum, genDateValue } from \"@vx/mock-data\";\nimport { IWithParentSizeProps, withParentSize } from \"@vx/responsive\";\nimport { Accessor, scaleLinear, scaleTime } from \"@vx/scale\";\nimport { Area, Line, LinePath } from \"@vx/shape\";\nimport { extent, max } from \"d3-array\";\nimport React from \"react\";\n// import { Text } from \"@vx/text\";\nimport { IMargin } from \"../../interfaces\";\n\nconst data = genDateValue(20);\nconst xAccessor: Accessor<DateValueDatum, Date> = (d) => d.date;\nconst yAccessor: Accessor<DateValueDatum, number> = (d) => d.value;\n\nconst timeDomain = extent(data.map(xAccessor)) as [Date, Date];\nconst yMaxValue = max(data.map(yAccessor)) as number;\n\nfunction numTicksForHeight(height: number) {\n  if (height <= 300) {\n    return 3;\n  }\n  if (300 < height && height <= 600) {\n    return 5;\n  }\n  return 10;\n}\n\nfunction numTicksForWidth(width: number) {\n  if (width <= 300) {\n    return 2;\n  }\n  if (300 < width && width <= 400) {\n    return 5;\n  }\n  return 10;\n}\n\nexport interface IProps {\n  width: number;\n  height: number;\n  margin: IMargin;\n}\n\nexport const AxisDemo = (props: IProps) => {\n  const { width, height, margin } = props;\n\n  const xMax = width - margin.left - margin.right;\n  const yMax = height - margin.top - margin.bottom;\n\n  const scaleTimeOptions = {\n    domain: timeDomain,\n    range: [0, xMax] as [number, number],\n  };\n  const xScale = scaleTime(scaleTimeOptions);\n\n  // TODO: double-check yMax\n  const linearScaleOptions = {\n    domain: [0, yMaxValue] as [number, number],\n    nice: true,\n    range: [yMax, 0] as [number, number],\n  };\n  const yScale = scaleLinear(linearScaleOptions);\n\n  // const tickComponent = (props: TickOptions) => {\n  //   console.log(\"tickComponent\", tickComponent, \"props\", props)\n  //   const {formattedValue, ...tickProps} = props\n  //   return (<span>{formattedValue}</span>)\n  //   // return (<text x={tickProps.x} y={tickProps.y}>{formattedValue}</text>)\n  // }\n\n  return (\n    <svg width={width} height={height}>\n      <GradientOrangeRed\n        id=\"linear\"\n        vertical={false}\n        fromOpacity={0.8}\n        toOpacity={0.3}\n      />\n      <rect x={0} y={0} width={width} height={height} fill=\"#f4419f\" rx={14} />\n      <Grid\n        top={margin.top}\n        left={margin.left}\n        xScale={xScale}\n        yScale={yScale}\n        stroke=\"rgba(142, 32, 95, 0.9)\"\n        width={xMax}\n        height={yMax}\n        numTicksRows={numTicksForHeight(height)}\n        numTicksColumns={numTicksForWidth(width)}\n      />\n      <Group top={margin.top} left={margin.left}>\n        <Area\n          data={data}\n          x={(d: DateValueDatum) => xScale(xAccessor(d))}\n          y0={(d: DateValueDatum) => yScale.range()[0]}\n          y1={(d: DateValueDatum) => yScale(yAccessor(d))}\n          stroke={\"transparent\"}\n          strokeWidth={2}\n          fill={\"url(#linear)\"}\n          curve={curveBasis}\n        />\n        <LinePath\n          data={data}\n          x={(d: DateValueDatum) => xScale(xAccessor(d))}\n          y={(d: DateValueDatum) => yScale(yAccessor(d))}\n          stroke={\"url('#linear')\"}\n          strokeWidth={2}\n          curve={curveBasis}\n        />\n      </Group>\n      <Group left={margin.left}>\n        <AxisLeft\n          top={margin.top}\n          left={0}\n          scale={yScale}\n          hideZero\n          numTicks={numTicksForHeight(height)}\n          label=\"Axis Left Label\"\n          labelProps={{\n            fill: \"#8e205f\",\n            fontFamily: \"Arial\",\n            fontSize: 12,\n            textAnchor: \"middle\",\n          }}\n          stroke=\"#1b1a1e\"\n          tickStroke=\"#8e205f\"\n          tickLabelProps={(value: any, index: number) => ({\n            dx: \"-0.25em\",\n            dy: \"0.25em\",\n            fill: \"#8e205f\",\n            fontFamily: \"Arial\",\n            fontSize: 10,\n            textAnchor: \"end\",\n          })}\n          tickComponent={({ formattedValue, ...tickProps }) => (\n            <text {...tickProps}>{formattedValue}</text>\n          )}\n        />\n        <AxisRight\n          top={margin.top}\n          left={xMax}\n          scale={yScale}\n          hideZero\n          numTicks={numTicksForHeight(height)}\n          label=\"Axis Right Label\"\n          labelProps={{\n            fill: \"#8e205f\",\n            fontFamily: \"Arial\",\n            fontSize: 12,\n            textAnchor: \"middle\",\n          }}\n          stroke=\"#1b1a1e\"\n          tickStroke=\"#8e205f\"\n          tickLabelProps={(value, index) => ({\n            dx: \"0.25em\",\n            dy: \"0.25em\",\n            fill: \"#8e205f\",\n            fontFamily: \"Arial\",\n            fontSize: 10,\n            textAnchor: \"start\",\n          })}\n        />\n        <AxisBottom\n          top={height - margin.bottom}\n          left={0}\n          scale={xScale}\n          numTicks={numTicksForWidth(width)}\n          label=\"Time\"\n        >\n          {(axis: RenderProps) => {\n            const tickLabelSize = 10;\n            const tickRotate = 45;\n            const tickColor = \"#8e205f\";\n            const axisCenter = (axis.axisToPoint.x - axis.axisFromPoint.x) / 2;\n            return (\n              <g className=\"my-custom-bottom-axis\">\n                {axis.ticks.map((tick: any, i: number) => {\n                  const tickX = tick.to.x;\n                  const tickY = tick.to.y + tickLabelSize + axis.tickLength;\n                  return (\n                    <Group\n                      key={`vx-tick-${tick.value}-${i}`}\n                      className={\"vx-axis-tick\"}\n                    >\n                      <Line from={tick.from} to={tick.to} stroke={tickColor} />\n                      <text\n                        transform={`translate(${tickX}, ${tickY}) rotate(${tickRotate})`}\n                        fontSize={tickLabelSize}\n                        textAnchor=\"middle\"\n                        fill={tickColor}\n                      >\n                        {tick.formattedValue}\n                      </text>\n                    </Group>\n                  );\n                })}\n                <text\n                  textAnchor=\"middle\"\n                  transform={`translate(${axisCenter}, 50)`}\n                  fontSize=\"8\"\n                >\n                  {axis.label}\n                </text>\n              </g>\n            );\n          }}\n        </AxisBottom>\n      </Group>\n    </svg>\n  );\n};\n\ninterface IAxisDemoResponsiveProps extends IWithParentSizeProps {\n  margin: IMargin;\n}\n\nexport const AxisDemoResponsive = withParentSize(\n  (props: IAxisDemoResponsiveProps) => {\n    const { margin, parentWidth } = props;\n    // TODO: parentHeight causes a resize every time\n    return <AxisDemo height={400} width={parentWidth} margin={margin} />;\n  }\n);\n","import { AxisBottom, TextAnchor } from \"@vx/axis\";\nimport { Group } from \"@vx/group\";\nimport { cityTemperature, CityTemperatureDatum } from \"@vx/mock-data\";\nimport { Accessor, scaleBand, scaleLinear, scaleOrdinal } from \"@vx/scale\";\nimport { BarGroup } from \"@vx/shape\";\nimport { timeFormat, timeParse } from \"d3-time-format\";\nimport React from \"react\";\n\nimport { IMargin } from \"../../interfaces\";\n\nconst blue = \"#aeeef8\";\nconst green = \"#e5fd3d\";\nconst purple = \"#9caff6\";\nconst bg = \"#612efb\";\n\nconst data = cityTemperature.slice(0, 8);\nconst keys = Object.keys(data[0]).filter((d: string) => d !== \"date\") as [\n  string,\n  string\n];\n\nconst parseDate = timeParse(\"%Y%m%d\");\nconst format = timeFormat(\"%b %d\");\nconst formatDate = (dateString: string) => {\n  const date = parseDate(dateString);\n  return format(date!);\n};\n\nconst x0Accessor: Accessor<CityTemperatureDatum, string> = (d) => d.date;\nconst timeDomain = data.map(x0Accessor) as [string, string];\n\nconst x0Scale = scaleBand({\n  domain: timeDomain,\n  padding: 0.2,\n});\n\nconst x1Scale = scaleBand({\n  domain: keys,\n  padding: 0.1,\n});\n\nconst yDomain = [\n  0,\n  Math.max(\n    ...data.map((d: any) => Math.max(...keys.map((key: any) => d[key])))\n  ),\n] as [number, number];\n\nconst yScale = scaleLinear({\n  domain: yDomain,\n});\n\nconst colorScale = scaleOrdinal({\n  domain: keys,\n  range: [blue, green, purple],\n});\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n}\n\nexport class BarGroupDemo extends React.Component<IProps> {\n  public constructor(props: IProps) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.renderBar = this.renderBar.bind(this);\n    this.renderBarGroup = this.renderBarGroup.bind(this);\n  }\n\n  public render() {\n    const { height, margin, width } = this.props;\n\n    const xMax = width;\n    const yMax = height - margin.top - 100;\n\n    x0Scale.rangeRound([0, xMax]);\n    x1Scale.rangeRound([0, x0Scale.bandwidth()]);\n    yScale.range([yMax, 0]);\n\n    return (\n      <svg width={width} height={height}>\n        <rect x={0} y={0} width={width} height={height} fill={bg} rx={14} />\n        <Group top={margin.top}>\n          <BarGroup\n            data={data}\n            keys={keys}\n            height={yMax}\n            x0={x0Accessor}\n            x0Scale={x0Scale}\n            x1Scale={x1Scale}\n            yScale={yScale}\n            color={colorScale}\n          >\n            {(barGroups: any) => {\n              return barGroups.map(this.renderBarGroup);\n            }}\n          </BarGroup>\n        </Group>\n        <AxisBottom\n          top={yMax + margin.top}\n          tickFormat={formatDate}\n          scale={x0Scale}\n          stroke={green}\n          tickStroke={green}\n          hideAxisLine={true}\n          tickLabelProps={tickLabelPropsFunction}\n        />\n      </svg>\n    );\n  }\n\n  private handleClick(event: React.MouseEvent) {\n    const dataset = (event.target as any).dataset;\n    const { key, value } = dataset;\n    alert(JSON.stringify({ key, value }));\n  }\n\n  private renderBar(bar: any, i: number) {\n    return (\n      <rect\n        data-value={bar.value}\n        data-key={bar.key}\n        fill={bar.color}\n        height={bar.height}\n        key={bar.key}\n        onClick={this.handleClick}\n        rx={4}\n        x={bar.x}\n        y={bar.y}\n        width={bar.width}\n      />\n    );\n  }\n\n  private renderBarGroup(barGroup: any, i: number) {\n    const { x0, bars } = barGroup;\n    const date = x0Scale(x0);\n    const keyGroup = `group-${i}-x0-${x0}-date-${date}`;\n    return (\n      <Group key={keyGroup} left={x0}>\n        {bars.map(this.renderBar)}\n      </Group>\n    );\n  }\n}\n\nfunction tickLabelPropsFunction(value: any, index: number) {\n  const textAnchor = \"middle\" as TextAnchor;\n  return { fill: green, fontSize: 11, textAnchor };\n}\n","import { AxisLeft, TextAnchor } from \"@vx/axis\";\nimport { Group } from \"@vx/group\";\nimport { cityTemperature, CityTemperatureDatum } from \"@vx/mock-data\";\nimport { Accessor, scaleBand, scaleLinear, scaleOrdinal } from \"@vx/scale\";\nimport { Bar, BarGroupHorizontal } from \"@vx/shape\";\nimport { extent } from \"d3-array\";\nimport { timeFormat, timeParse } from \"d3-time-format\";\nimport React from \"react\";\n\nimport { IMargin } from \"../../interfaces\";\n\nconst parseDate = timeParse(\"%Y%m%d\");\nconst format = timeFormat(\"%b %d\");\nconst formatDate = (dateString: string) => {\n  const date = parseDate(dateString);\n  return format(date!);\n};\nconst max = (arr: any, fn: any) => Math.max(...arr.map(fn));\n\nconst data = cityTemperature.slice(0, 4);\nconst keys = Object.keys(data[0]).filter((d) => d !== \"date\");\n\nconst y0Accessor: Accessor<CityTemperatureDatum, string> = (d) => d.date;\nconst timeDomain = extent(data.map(y0Accessor)) as [string, string];\n\nconst y0Scale = scaleBand({\n  domain: timeDomain,\n  padding: 0.2,\n});\nconst y1Scale = scaleBand({\n  domain: keys,\n  padding: 0.1,\n});\nconst xScale = scaleLinear({\n  domain: [0, max(data, (d: any) => max(keys, (key: any) => d[key]))],\n});\nconst color = scaleOrdinal({\n  domain: keys,\n  range: [\"#aeeef8\", \"#e5fd3d\", \"#9caff6\"],\n});\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n}\n\nexport class BarGroupHorizontalDemo extends React.Component<IProps> {\n  public constructor(props: IProps) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.renderBar = this.renderBar.bind(this);\n    this.renderBarGroup = this.renderBarGroup.bind(this);\n  }\n\n  public render() {\n    const { height, margin, width } = this.props;\n\n    const xMax = width - margin.left - margin.right;\n    const yMax = height - 100;\n\n    y0Scale.rangeRound([0, yMax]);\n    y1Scale.rangeRound([0, y0Scale.bandwidth()]);\n    xScale.rangeRound([xMax, 0]);\n\n    return (\n      <svg width={width} height={height}>\n        <rect\n          x={0}\n          y={0}\n          width={width}\n          height={height}\n          fill=\"#612efb\"\n          rx={14}\n        />\n        <Group top={margin.top} left={margin.left}>\n          <BarGroupHorizontal\n            data={data}\n            keys={keys}\n            width={xMax}\n            y0={y0Accessor}\n            y0Scale={y0Scale}\n            y1Scale={y1Scale}\n            xScale={xScale}\n            color={color}\n          >\n            {(barGroups: any) => {\n              return barGroups.map(this.renderBarGroup);\n            }}\n          </BarGroupHorizontal>\n          <AxisLeft\n            scale={y0Scale}\n            stroke=\"#e5fd3d\"\n            tickStroke=\"#e5fd3d\"\n            tickFormat={formatDate}\n            hideAxisLine\n            tickLabelProps={tickLabelPropsFunction}\n          />\n        </Group>\n      </svg>\n    );\n  }\n\n  private handleClick(event: React.MouseEvent) {\n    const dataset = (event.target as any).dataset;\n    const { key, value } = dataset;\n    alert(JSON.stringify({ key, value }));\n  }\n\n  private renderBar(bar: any, i: number) {\n    return (\n      <rect\n        data-value={bar.value}\n        data-key={bar.key}\n        fill={bar.color}\n        height={bar.height}\n        key={bar.key}\n        onClick={this.handleClick}\n        rx={4}\n        x={bar.x}\n        y={bar.y}\n        width={bar.width}\n      />\n    );\n  }\n\n  private renderBarGroup(barGroup: any, i: number) {\n    const { y0, bars } = barGroup;\n    const key = `group-${i}-y0-${y0}`;\n    return (\n      <Group key={key} top={y0}>\n        {bars.map(this.renderBar)}\n      </Group>\n    );\n  }\n}\n\nfunction tickLabelPropsFunction(value: any, i: number) {\n  const textAnchor = \"end\" as TextAnchor;\n  return {\n    dy: \"0.33em\",\n    fill: \"#e5fd3d\",\n    fontSize: 11,\n    textAnchor,\n  };\n}\n","import { AxisBottom, TextAnchor } from \"@vx/axis\";\nimport { Grid } from \"@vx/grid\";\nimport { Group } from \"@vx/group\";\nimport { LegendOrdinal } from \"@vx/legend\";\nimport { cityTemperature } from \"@vx/mock-data\";\nimport { scaleBand, scaleLinear, scaleOrdinal } from \"@vx/scale\";\nimport { BarStack } from \"@vx/shape\";\nimport { timeFormat, timeParse } from \"d3-time-format\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { IMargin } from \"../../interfaces\";\n\nconst Container = styled.div`\n  position: relative;\n`;\n\ninterface IDivProps {\n  margin: IMargin;\n}\n\nconst Div = styled.div`\n  display: flex;\n  font-size: 14px;\n  justify-content: center;\n  position: absolute;\n  top: ${(props: IDivProps) => `${props.margin.top / 2 - 10}px;`};\n  width: 100%;\n`;\n\nconst purple1 = \"#6c5efb\";\nconst purple2 = \"#c998ff\";\nconst purple3 = \"#a44afe\";\nconst bg = \"#eaedff\";\n\nconst data = cityTemperature.slice(0, 12);\nconst keys = Object.keys(data[0]).filter((d) => d !== \"date\");\n\nconst totals = data.reduce((prev: any, current: any) => {\n  const t = keys.reduce((dailyTotal, k) => {\n    dailyTotal += parseInt(current[k], 10);\n    return dailyTotal;\n  }, 0);\n  return prev.concat(t);\n}, []);\n\nconst parseDate = timeParse(\"%Y%m%d\");\nconst format = timeFormat(\"%b %d\");\nconst formatDate = (dateString: string) => {\n  const date = parseDate(dateString);\n  return format(date!);\n};\n\nconst xAccessor = (d: any) => d.date;\n\nconst xScale = scaleBand({\n  domain: data.map(xAccessor),\n  padding: 0.2,\n});\n\nconst yScale = scaleLinear({\n  domain: [0, Math.max(...totals)],\n  nice: true,\n});\n\nconst colorScale = scaleOrdinal({\n  domain: keys,\n  range: [purple1, purple2, purple3],\n});\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n}\n\nexport class BarStackDemo extends React.Component<IProps> {\n  public constructor(props: IProps) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.renderBar = this.renderBar.bind(this);\n    this.renderStackLayer = this.renderStackLayer.bind(this);\n  }\n\n  public render() {\n    const { height, margin, width } = this.props;\n    if (width < 10) {\n      return null;\n    }\n\n    const xMax = width;\n    const yMax = height - margin.top - 100;\n\n    xScale.rangeRound([0, xMax]);\n    yScale.range([yMax, 0]);\n\n    return (\n      <Container>\n        <svg width={width} height={height}>\n          <rect x={0} y={0} width={width} height={height} fill={bg} rx={14} />\n          <Grid\n            top={margin.top}\n            left={margin.left}\n            xScale={xScale}\n            yScale={yScale}\n            width={xMax}\n            height={yMax}\n            stroke={\"black\"}\n            strokeOpacity={0.1}\n            xOffset={xScale.bandwidth() / 2}\n          />\n          <Group top={margin.top}>\n            <BarStack\n              data={data}\n              keys={keys}\n              x={xAccessor}\n              xScale={xScale}\n              yScale={yScale}\n              color={colorScale}\n            >\n              {(layers: any) => {\n                return layers.map(this.renderStackLayer);\n              }}\n            </BarStack>\n          </Group>\n          <AxisBottom\n            top={yMax + margin.top}\n            scale={xScale}\n            tickFormat={formatDate}\n            stroke={purple3}\n            tickStroke={purple3}\n            tickLabelProps={tickLabelFunction}\n          />\n        </svg>\n        <Div margin={margin}>\n          <LegendOrdinal\n            scale={colorScale}\n            direction=\"row\"\n            labelMargin=\"0 15px 0 0\"\n          />\n        </Div>\n      </Container>\n    );\n  }\n\n  private handleClick(event: React.MouseEvent) {\n    const dataset = (event.target as any).dataset;\n    const { key, value } = dataset;\n    alert(JSON.stringify({ key, value }));\n  }\n\n  private renderBar(d: any, i: number) {\n    const { bar, iLayer } = d;\n    const key = `${iLayer}-${bar.index}`;\n    return (\n      <rect\n        data-index-bar={bar.index}\n        data-index-layer={iLayer}\n        data-key={bar.key}\n        data-value={bar.value}\n        key={key}\n        x={bar.x}\n        y={bar.y}\n        height={bar.height}\n        width={bar.width}\n        fill={bar.color}\n        onClick={this.handleClick}\n      />\n    );\n  }\n\n  private renderStackLayer(layer: any, i: number) {\n    const bars = layer.bars.map((bar: any) => ({ bar, iLayer: layer.index }));\n    return bars.map(this.renderBar);\n  }\n}\n\nfunction tickLabelFunction(value: any, i: number) {\n  const textAnchor = \"middle\" as TextAnchor;\n  return {\n    fill: purple3,\n    fontSize: 11,\n    textAnchor,\n  };\n}\n","import { AxisBottom, AxisLeft, TextAnchor } from \"@vx/axis\";\nimport { Group } from \"@vx/group\";\nimport { LegendOrdinal } from \"@vx/legend\";\nimport { cityTemperature, CityTemperatureDatum } from \"@vx/mock-data\";\nimport { scaleBand, scaleLinear, scaleOrdinal } from \"@vx/scale\";\nimport { BarStackHorizontal } from \"@vx/shape\";\nimport { timeFormat, timeParse } from \"d3-time-format\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { IMargin } from \"../../interfaces\";\n\nconst Container = styled.div`\n  position: relative;\n`;\n\ninterface IDivProps {\n  margin: IMargin;\n}\n\nconst Div = styled.div`\n  display: flex;\n  font-size: 14px;\n  justify-content: center;\n  position: absolute;\n  top: ${(props: IDivProps) => `${props.margin.top / 2 - 10}px;`};\n  width: 100%;\n`;\n\nconst purple1 = \"#6c5efb\";\nconst purple2 = \"#c998ff\";\nconst purple3 = \"#a44afe\";\nconst bg = \"#eaedff\";\n\nconst data = cityTemperature.slice(0, 12);\nconst keys = Object.keys(data[0]).filter((d) => d !== \"date\");\n\nconst totals: number[] = data.reduce((prev: any, current: any) => {\n  const t = keys.reduce((dailyTotal, k) => {\n    dailyTotal += parseInt(current[k], 10);\n    return dailyTotal;\n  }, 0);\n  return prev.concat(t);\n}, []);\n\nconst parseDate = timeParse(\"%Y%m%d\");\nconst format = timeFormat(\"%b %d\");\nconst formatDate = (dateString: string) => {\n  const date = parseDate(dateString);\n  return format(date!);\n};\n\nconst yAccessor = (d: CityTemperatureDatum) => d.date;\n\nconst xScale = scaleLinear({\n  domain: [0, Math.max(...totals)],\n  nice: true,\n});\n\nconst yScale = scaleBand({\n  domain: data.map(yAccessor),\n  padding: 0.2,\n});\n\nconst colorScale = scaleOrdinal({\n  domain: keys,\n  range: [purple1, purple2, purple3],\n});\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n}\n\nexport class BarStackHorizontalDemo extends React.Component<IProps> {\n  public constructor(props: IProps) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.renderBar = this.renderBar.bind(this);\n    this.renderStackLayer = this.renderStackLayer.bind(this);\n  }\n\n  public render() {\n    const { height, margin, width } = this.props;\n    if (width < 10) {\n      return null;\n    }\n\n    const xMax = width;\n    const yMax = height - margin.top - 100;\n\n    xScale.rangeRound([0, xMax]);\n    yScale.range([yMax, 0]);\n\n    return (\n      <Container>\n        <svg width={width} height={height}>\n          <rect width={width} height={height} fill={bg} rx={14} />\n          <Group top={margin.top} left={margin.left}>\n            <BarStackHorizontal\n              data={data}\n              keys={keys}\n              height={yMax}\n              y={yAccessor}\n              xScale={xScale}\n              yScale={yScale}\n              color={colorScale}\n            >\n              {(layers: any) => {\n                return layers.map(this.renderStackLayer);\n              }}\n            </BarStackHorizontal>\n            <AxisLeft\n              hideAxisLine={true}\n              hideTicks={true}\n              scale={yScale}\n              tickFormat={formatDate}\n              stroke={purple3}\n              tickStroke={purple3}\n              tickLabelProps={tickLabelFunction}\n            />\n            <AxisBottom\n              top={yMax}\n              scale={xScale}\n              stroke={purple3}\n              tickStroke={purple3}\n              tickLabelProps={tickLabelFunction}\n            />\n          </Group>\n        </svg>\n        <Div margin={margin}>\n          <LegendOrdinal\n            scale={colorScale}\n            direction=\"row\"\n            labelMargin=\"0 15px 0 0\"\n          />\n        </Div>\n      </Container>\n    );\n  }\n\n  private handleClick(event: React.MouseEvent) {\n    const dataset = (event.currentTarget as any).dataset;\n    const { indexBar, indexLayer, key, value } = dataset;\n    alert(`clicked: ${JSON.stringify({ indexBar, indexLayer, key, value })}`);\n  }\n\n  private renderBar(d: any, i: number) {\n    const { bar, iLayer } = d;\n    const key = `${iLayer}-${bar.index}`;\n    return (\n      <rect\n        data-index-bar={bar.index}\n        data-index-layer={iLayer}\n        data-key={bar.key}\n        data-value={bar.value}\n        key={key}\n        x={bar.x}\n        y={bar.y}\n        height={bar.height}\n        width={bar.width}\n        fill={bar.color}\n        onClick={this.handleClick}\n      />\n    );\n  }\n\n  private renderStackLayer(layer: any, i: number) {\n    const bars = layer.bars.map((bar: any) => ({ bar, iLayer: layer.index }));\n    return bars.map(this.renderBar);\n  }\n}\n\nfunction tickLabelFunction(value: any, i: number) {\n  const textAnchor = \"middle\" as TextAnchor;\n  return {\n    fill: purple3,\n    fontSize: 11,\n    textAnchor,\n  };\n}\n","import { Chord, Ribbon } from \"@vx/chord\";\nimport { LinearGradient } from \"@vx/gradient\";\nimport { Group } from \"@vx/group\";\nimport { scaleOrdinal } from \"@vx/scale\";\nimport { Arc } from \"@vx/shape\";\nimport React from \"react\";\n\nconst pink = \"#ff2fab\";\nconst orange = \"#ffc62e\";\nconst purple = \"#dc04ff\";\nconst purple2 = \"#7324ff\";\nconst red = \"#d04376\";\nconst green = \"#52f091\";\nconst blue = \"#04a6ff\";\nconst lime = \"#00ddc6\";\nconst bg = \"#e4e3d8\";\n\nconst matrix = [\n  [11975, 5871, 8916, 2868],\n  [1951, 10048, 2060, 6171],\n  [8010, 16145, 8090, 8045],\n  [1013, 990, 940, 6907],\n];\n\nfunction descending(a: number, b: number) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nconst color = scaleOrdinal({\n  domain: [1, 2, 3, 4],\n  range: [\n    \"url(#gpinkorange)\",\n    \"url(#gpurplered)\",\n    \"url(#gpurplegreen)\",\n    \"url(#gbluelime)\",\n  ],\n});\ninterface IProps {\n  height: number;\n  width: number;\n}\n\nexport class ChordDemo extends React.Component<IProps> {\n  public render() {\n    const centerSize = 20;\n    const { height, width } = this.props;\n\n    if (width <= 0) {\n      return null;\n    }\n\n    const outerRadius = Math.min(width, height) * 0.5 - (centerSize + 10);\n    const innerRadius = outerRadius - centerSize;\n\n    return (\n      <svg width={width} height={height}>\n        <LinearGradient\n          id=\"gpinkorange\"\n          from={pink}\n          to={orange}\n          vertical={false}\n        />\n        <LinearGradient\n          id=\"gpurplered\"\n          from={purple}\n          to={red}\n          vertical={false}\n        />\n        <LinearGradient\n          id=\"gpurplegreen\"\n          from={purple2}\n          to={green}\n          vertical={false}\n        />\n        <LinearGradient id=\"gbluelime\" from={blue} to={lime} vertical={false} />\n        <rect width={width} height={height} fill={bg} rx={14} />\n        <Group top={height / 2} left={width / 2}>\n          <Chord matrix={matrix} padAngle={0.05} sortSubgroups={descending}>\n            {(props) => {\n              const { chords } = props;\n              return (\n                <g>\n                  {chords.groups.map((group, i) => {\n                    return (\n                      <Arc\n                        data={group}\n                        fill={color(i)}\n                        key={`key-${i}`}\n                        innerRadius={innerRadius}\n                        outerRadius={outerRadius}\n                      />\n                    );\n                  })}\n                  {chords.map((chord, i) => {\n                    return (\n                      <Ribbon\n                        chord={chord}\n                        fill={color(i)}\n                        fillOpacity={0.75}\n                        key={`ribbon-${i}`}\n                        radius={innerRadius}\n                      />\n                    );\n                  })}\n                </g>\n              );\n            }}\n          </Chord>\n        </Group>\n      </svg>\n    );\n  }\n}\n","import {\n  curveBasis,\n  curveBundle,\n  curveLinear,\n  curveMonotoneX,\n  curveMonotoneY,\n  curveNatural,\n  curveStep,\n} from \"@vx/curve\";\nimport { GridColumns, GridRows } from \"@vx/grid\";\nimport { Group } from \"@vx/group\";\nimport { DateValueDatum, genDateValue } from \"@vx/mock-data\";\nimport {\n  scaleLinear,\n  ScaleLinearOptions,\n  scaleTime,\n  ScaleTimeOptions,\n} from \"@vx/scale\";\nimport { LinePath } from \"@vx/shape\";\nimport { extent } from \"d3-array\";\nimport React from \"react\";\n\nimport { IMargin } from \"../../interfaces\";\n\nconst data = genDateValue(15);\n\nconst dateAccessor = (d: DateValueDatum) => d.date;\nconst valueAccessor = (d: DateValueDatum) => d.value;\n\nconst timeDomain = extent(data.map(dateAccessor)) as [Date, Date];\nconst scaleTimeOptions: ScaleTimeOptions = {\n  domain: timeDomain,\n};\nconst xScale = scaleTime(scaleTimeOptions);\n\nconst scaleLinearOptions: ScaleLinearOptions = {\n  domain: [0, Math.max(...data.map(valueAccessor))],\n};\nconst yScale = scaleLinear(scaleLinearOptions);\n\nconst xAccessor = (d: DateValueDatum) => xScale(dateAccessor(d));\nconst yAccessor = (d: DateValueDatum) => yScale(valueAccessor(d));\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n}\n\nconst curves = [\n  { func: curveBasis, stroke: \"#ffffe5\", strokeDasharray: \"2,2\" },\n  { func: curveBundle, stroke: \"#f7fcb9\", strokeDasharray: \"4,1\" },\n  { func: curveLinear, stroke: \"#d9f0a3\", strokeDasharray: \"4\" },\n  { func: curveMonotoneX, stroke: \"#addd8e\", strokeDasharray: \"4,1,2\" },\n  { func: curveMonotoneY, stroke: \"#78c679\", strokeDasharray: \"2,2\" },\n  { func: curveNatural, stroke: \"#41ab5d\", strokeDasharray: \"5,5\" },\n  { func: curveStep, stroke: \"#238443\", strokeDasharray: \"none\" },\n];\n\nexport class CurveDemo extends React.Component<IProps> {\n  public render() {\n    const { height, margin, width } = this.props;\n    const xMax = width - margin.left - margin.right;\n    const yMax = height - margin.top - margin.bottom;\n\n    xScale.range([0, xMax]);\n    yScale.range([yMax, 0]);\n\n    return (\n      <svg width={width} height={height}>\n        <rect\n          fill=\"#f3f3f3\"\n          height={height}\n          rx={14}\n          width={width}\n          x={0}\n          y={0}\n        />\n        <Group left={margin.left} top={margin.top}>\n          <GridRows\n            height={yMax}\n            scale={yScale}\n            stroke=\"#e0e0e0\"\n            width={xMax}\n          />\n          <GridColumns\n            height={yMax}\n            scale={xScale}\n            stroke=\"#e0e0e0\"\n            width={xMax}\n          />\n          {curves.map((c, i) => {\n            return (\n              <LinePath\n                data={data}\n                key={i}\n                x={xAccessor}\n                y={yAccessor}\n                stroke={c.stroke}\n                strokeWidth={2}\n                strokeDasharray={c.strokeDasharray}\n                curve={c.func}\n              />\n            );\n          })}\n        </Group>\n      </svg>\n    );\n  }\n}\n","import { LinearGradient } from \"@vx/gradient\";\nimport { Group } from \"@vx/group\";\nimport { Cluster, IHierarchyDefaultNodeProps, ITreeProps } from \"@vx/hierarchy\";\nimport { LinkVertical } from \"@vx/shape\";\nimport { hierarchy, HierarchyNode } from \"d3-hierarchy\";\nimport React from \"react\";\n\nimport { IMargin } from \"../../interfaces\";\n\nconst citrus = \"#ddf163\";\nconst white = \"#ffffff\";\nconst green = \"#79d259\";\nconst aqua = \"#37ac8c\";\nconst merlinsbeard = \"#f7f7f3\";\nconst bg = \"#306c90\";\n\ninterface ITreeNode {\n  children?: ITreeNode[];\n  name: string;\n}\n\nconst cluster: ITreeNode = {\n  name: \"T\",\n  // tslint:disable-next-line object-literal-sort-keys\n  children: [\n    {\n      name: \"A\",\n      // tslint:disable-next-line object-literal-sort-keys\n      children: [\n        { name: \"A1\" },\n        { name: \"A2\" },\n        {\n          name: \"C\",\n          // tslint:disable-next-line object-literal-sort-keys\n          children: [\n            {\n              name: \"C1\",\n            },\n          ],\n        },\n      ],\n    },\n    {\n      name: \"B\",\n      // tslint:disable-next-line object-literal-sort-keys\n      children: [{ name: \"B1\" }, { name: \"B2\" }, { name: \"B3\" }],\n    },\n    {\n      name: \"X\",\n      // tslint:disable-next-line object-literal-sort-keys\n      children: [\n        {\n          name: \"Z\",\n        },\n      ],\n    },\n  ],\n};\n\nfunction Node(props: IHierarchyDefaultNodeProps) {\n  const { node } = props;\n  const isRoot = node.depth === 0;\n  const isParent = !!node.children;\n\n  if (isRoot) {\n    return <RootNode node={node} />;\n  }\n\n  return (\n    <Group top={node.y} left={node.x}>\n      {node.depth !== 0 && (\n        <circle\n          r={12}\n          fill={bg}\n          stroke={isParent ? white : citrus}\n          onClick={() => {\n            alert(`clicked: ${JSON.stringify(node.data.name)}`);\n          }}\n        />\n      )}\n      <text\n        dy={\".33em\"}\n        fontSize={9}\n        fontFamily=\"Arial\"\n        textAnchor={\"middle\"}\n        style={{ pointerEvents: \"none\" }}\n        fill={isParent ? white : citrus}\n      >\n        {node.data.name}\n      </text>\n    </Group>\n  );\n}\n\nfunction RootNode(props: IHierarchyDefaultNodeProps) {\n  const { node } = props;\n  const width = 40;\n  const height = 20;\n  const centerX = -width / 2;\n  const centerY = -height / 2;\n\n  return (\n    <Group top={node.y} left={node.x}>\n      <rect\n        width={width}\n        height={height}\n        y={centerY}\n        x={centerX}\n        fill=\"url('#top')\"\n      />\n      <text\n        dy={\".33em\"}\n        fontSize={9}\n        fontFamily=\"Arial\"\n        textAnchor={\"middle\"}\n        style={{ pointerEvents: \"none\" }}\n        fill={bg}\n      >\n        {node.data.name}\n      </text>\n    </Group>\n  );\n}\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n}\n\nexport class DendrogramsDemo extends React.Component<IProps> {\n  public render() {\n    const { height, margin, width } = this.props;\n    const data = hierarchy(cluster);\n    const xMax = width - margin.left - margin.right;\n    const yMax = height - margin.top - margin.bottom;\n\n    return (\n      <svg width={width} height={height}>\n        <LinearGradient id=\"top\" from={green} to={aqua} />\n        <rect width={width} height={height} rx={14} fill={bg} />\n        <Cluster root={data} size={[xMax, yMax]}>\n          {(clusterNode: HierarchyNode<ITreeNode>) => {\n            return (\n              <Group top={margin.top} left={margin.left}>\n                {clusterNode.links().map(renderLink)}\n                {clusterNode.descendants().map(renderDescendant)}\n              </Group>\n            );\n          }}\n        </Cluster>\n      </svg>\n    );\n  }\n}\n\nfunction renderLink(link: any, i: number) {\n  console.warn(\"link\", link);\n  return (\n    <LinkVertical\n      key={`cluster-link-${i}`}\n      data={link}\n      stroke={merlinsbeard}\n      strokeWidth=\"1\"\n      strokeOpacity={0.2}\n      fill=\"none\"\n    />\n  );\n}\n\nfunction renderDescendant(node: any, i: number) {\n  //   console.warn(\"node\", node);\n  return <Node key={`cluster-node-${i}`} node={node} />;\n}\n","import { localPoint } from \"@vx/event\";\nimport { GradientPinkRed } from \"@vx/gradient\";\nimport { Group } from \"@vx/group\";\nimport { genRandomNormalPoints, Point } from \"@vx/mock-data\";\nimport { Accessor, scaleLinear } from \"@vx/scale\";\nimport { Circle } from \"@vx/shape\";\nimport { IWithTooltipProps, Tooltip, withTooltip } from \"@vx/tooltip\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { IMargin } from \"../../interfaces\";\n\nconst Div = styled.div`\n  background-color: white;\n  border: 1px solid black;\n  color: black;\n  font-size: 1rem;\n  height: 2em;\n  margin: 0;\n  padding: 0;\n`;\n\nconst points = genRandomNormalPoints(600).filter((_, i) => {\n  return i < 500;\n});\n\nconst xAccessor: Accessor<Point, number> = (d) => d[0];\nconst yAccessor: Accessor<Point, number> = (d) => d[1];\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n\n  onMouseEnter?: (event: React.MouseEvent) => void;\n  onMouseLeave?: (event: React.MouseEvent) => void;\n}\n\nexport class DotsDemo extends React.Component<IProps> {\n  public render() {\n    const { height, margin, onMouseEnter, onMouseLeave, width } = this.props;\n    // const xMax = width;\n    // const yMax = height - 80;\n    const xMax = width - margin.left - margin.right;\n    const yMax = height - margin.top - margin.bottom;\n\n    const xScale = scaleLinear({\n      clamp: true,\n      domain: [1.3, 2.2],\n      range: [0, xMax],\n    });\n\n    const yScale = scaleLinear({\n      clamp: true,\n      domain: [0.75, 1.6],\n      range: [yMax, 0],\n    });\n\n    return (\n      <svg width={width} height={height}>\n        <GradientPinkRed id=\"pink\" />\n        <rect width={width} height={height} rx={14} fill={\"url(#pink)\"} />\n        <Group>\n          {points.map((point, i) => {\n            const cx = xScale(xAccessor(point));\n            const cy = yScale(yAccessor(point));\n            const r = i % 3 === 0 ? 2 : 2.765;\n            return (\n              <Circle\n                className=\"dot\"\n                cx={cx}\n                cy={cy}\n                r={r}\n                fill=\"#f6c431\"\n                // key={`point-${point.x}-${i}`}\n                key={`point-${i}`}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n              />\n            );\n          })}\n        </Group>\n      </svg>\n    );\n  }\n}\n\ntype IDotsDemoWithTooltipProps = IProps & IWithTooltipProps;\n\nlet tooltipTimeout: any;\nconst delay = 500;\n\nexport const DotsDemoWithTooltip = withTooltip(\n  (props: IDotsDemoWithTooltipProps) => {\n    const { hideTooltip, showTooltip, tooltipData, tooltipOpen } = props;\n\n    // at first tooltipLeft and tooltipTop are undefined\n    const tooltipLeft = props.tooltipLeft || 0;\n    const tooltipTop = props.tooltipTop || 0;\n\n    const onMouseEnter = (event: React.MouseEvent) => {\n      if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout);\n      }\n      const { x, y } = localPoint(event);\n      showTooltip({\n        tooltipData: `x: ${x}; y: ${y}`,\n        tooltipLeft: x,\n        tooltipTop: y,\n      });\n    };\n\n    const onMouseLeave = (event: React.MouseEvent) => {\n      tooltipTimeout = setTimeout(() => {\n        hideTooltip();\n      }, delay);\n    };\n\n    return (\n      <div>\n        <DotsDemo\n          {...props}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n        />\n        {tooltipOpen && (\n          <Tooltip\n            top={tooltipTop - 12}\n            left={tooltipLeft + 12}\n            style={{ padding: 0 }}\n          >\n            <Div>{tooltipData}</Div>\n          </Tooltip>\n        )}\n      </div>\n    );\n  }\n);\n","import { Drag, IDragProps, IItem, raise } from \"@vx/drag\";\nimport { LinearGradient } from \"@vx/gradient\";\nimport { scaleOrdinal, ScaleOrdinal } from \"@vx/scale\";\nimport React, { ReactText } from \"react\";\n\nimport { IMargin } from \"../../interfaces\";\n\ninterface IGenItemsOptions {\n  height: number;\n  width: number;\n}\n\ninterface IGenCirclesOptions {\n  height: number;\n  num: number;\n  width: number;\n}\n\nconst colors = [\n  \"#025aac\",\n  \"#02cff9\",\n  \"#02efff\",\n  \"#03aeed\",\n  \"#0384d7\",\n  \"#edfdff\",\n  \"#ab31ff\",\n  \"#5924d7\",\n  \"#d145ff\",\n  \"#1a02b1\",\n  \"#e582ff\",\n  \"#ff00d4\",\n  \"#270eff\",\n  \"#827ce2\",\n];\n\nfunction genCircles(options: IGenCirclesOptions) {\n  const { num, width, height } = options;\n  const circles = Array(num)\n    .fill(1)\n    .map((d: number, i: number) => {\n      const radius = 25 - Math.random() * 20;\n      const item: IItem = {\n        id: i,\n        radius,\n        x: Math.round(Math.random() * (width - radius * 2) + radius),\n        y: Math.round(Math.random() * (height - radius * 2) + radius),\n      };\n      return item;\n    });\n  return circles;\n}\n\nconst genItems = (options: IGenItemsOptions) => {\n  const { width, height } = options;\n  const genCirclesOptions = {\n    height,\n    num: width < 360 ? 40 : 185,\n    width,\n  };\n  const items = genCircles(genCirclesOptions);\n  return items;\n};\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n}\n\ninterface IState {\n  items: IItem[];\n}\n\nexport class DragDemo extends React.Component<IProps, IState> {\n  private colorScale: ScaleOrdinal<ReactText, string>;\n\n  constructor(props: IProps) {\n    super(props);\n    const genItemsOptions = { height: props.height, width: props.width };\n    this.state = {\n      items: genItems(genItemsOptions),\n    };\n    this.colorScale = scaleOrdinal({\n      domain: this.state.items.map((d: IItem) => d.id),\n      range: colors,\n    });\n  }\n\n  public componentWillReceiveProps(nextProps: IProps) {\n    if (nextProps.width !== this.props.width) {\n      const genItemsOptions = {\n        height: nextProps.height,\n        width: nextProps.width,\n      };\n      this.setState(() => {\n        return {\n          items: genItems(genItemsOptions),\n        };\n      });\n    }\n  }\n\n  public render() {\n    const { width, height } = this.props;\n    return (\n      <div className=\"Drag\" style={{ touchAction: \"none\" }}>\n        <svg width={width} height={height}>\n          <LinearGradient id=\"stroke\" from=\"#ff00a5\" to=\"#ffc500\" />\n          <rect fill=\"#c4c3cb\" width={width} height={height} rx={14} />\n          {this.state.items.map((d: IItem, i: number) => (\n            <Drag\n              key={`${d.id}`}\n              height={height}\n              width={width}\n              onDragStart={() => {\n                // svg follows the painter model\n                // so we need to move the data item\n                // to end of the array for it to be drawn\n                // \"on top of\" the other data items\n                this.setState(state => {\n                  return {\n                    items: raise(state.items, i),\n                  };\n                });\n              }}\n            >\n              {(props: IDragProps) => {\n                const {\n                  dragStart,\n                  dragEnd,\n                  dragMove,\n                  isDragging,\n                  dx,\n                  dy,\n                } = props;\n                return (\n                  <circle\n                    cx={d.x}\n                    cy={d.y}\n                    fill={isDragging ? \"url(#stroke)\" : this.colorScale(d.id)}\n                    fillOpacity={0.9}\n                    key={`dot-${d.id}`}\n                    onMouseDown={dragStart}\n                    onMouseMove={dragMove}\n                    onMouseUp={dragEnd}\n                    onTouchEnd={dragEnd}\n                    onTouchMove={dragMove}\n                    onTouchStart={dragStart}\n                    r={isDragging ? d.radius + 4 : d.radius}\n                    stroke={isDragging ? \"white\" : \"transparent\"}\n                    strokeWidth={2}\n                    transform={`translate(${dx}, ${dy})`}\n                  />\n                );\n              }}\n            </Drag>\n          ))}\n        </svg>\n      </div>\n    );\n  }\n}\n","import { Graticule, Mercator } from \"@vx/geo\";\nimport { scaleQuantize } from \"@vx/scale\";\nimport { extent } from \"d3-array\";\nimport { Feature, FeatureCollection, Geometry, Polygon } from \"geojson\";\nimport React from \"react\";\nimport * as topojson from \"topojson-client\";\n// tslint:disable-next-line no-implicit-dependencies\nimport { Topology } from \"topojson-specification\";\n\nimport worldTopoJson from \"../../static/world-topo.json\";\n\nconst topology = (worldTopoJson as unknown) as Topology;\n\nconst featureOrFeatureCollection = topojson.feature(\n  topology,\n  topology.objects.units\n);\nconst world = featureOrFeatureCollection as FeatureCollection;\n\nconst backgroundColor = \"#f9f7e8\";\nconst countryBordersColor = \"#f9f7e8\";\n\nconst points = world.features.map((f: Feature) => {\n  const polygon = f.geometry as Polygon;\n  return polygon.coordinates.length;\n});\nconst domain = extent(points);\n\nconst colorScale = scaleQuantize({\n  domain,\n  range: [\n    \"#ffb01d\",\n    \"#ffa020\",\n    \"#ff9221\",\n    \"#ff8424\",\n    \"#ff7425\",\n    \"#fc5e2f\",\n    \"#f94b3a\",\n    \"#f63a48\",\n  ],\n});\n\ninterface IProps {\n  height: number;\n  width: number;\n}\n\ninterface IMercator {\n  features: Feature[];\n  path: (g: Geometry) => string; // SVG <path> string\n}\n\nexport class GeoDemo extends React.Component<IProps> {\n  public render() {\n    const { height, width } = this.props;\n    const centerX = width / 2;\n    const centerY = height / 2;\n    const scale = (width / 630) * 100;\n\n    return (\n      <svg width={width} height={height}>\n        <rect\n          x={0}\n          y={0}\n          width={width}\n          height={height}\n          fill={backgroundColor}\n          rx={14}\n        />\n        <Mercator\n          data={world.features}\n          scale={scale}\n          translate={[centerX, centerY + 50]}\n        >\n          {(mercator: IMercator) => {\n            return (\n              <g>\n                <Graticule\n                  graticule={(g: Geometry) => {\n                    return mercator.path(g);\n                  }}\n                  stroke={\"rgba(33,33,33,0.05)\"}\n                />\n                {mercator.features.map((feature: any, i: number) => {\n                  // console.warn(\"feature\", feature);\n                  const { feature: f } = feature;\n                  return (\n                    <path\n                      key={`map-feature-${i}`}\n                      d={mercator.path(f)}\n                      fill={colorScale(f.geometry.coordinates.length)}\n                      stroke={countryBordersColor}\n                      strokeWidth={0.5}\n                      onClick={(event: React.MouseEvent) => {\n                        alert(`clicked: ${f.properties.name} (${f.id})`);\n                      }}\n                    />\n                  );\n                })}\n              </g>\n            );\n          }}\n        </Mercator>\n      </svg>\n    );\n  }\n}\n","import { curveBasis, curveMonotoneX } from \"@vx/curve\";\nimport { GlyphDot } from \"@vx/glyph\";\nimport { Group } from \"@vx/group\";\nimport { DateValueDatum, genDateValue } from \"@vx/mock-data\";\nimport {\n  scaleLinear,\n  ScaleLinearOptions,\n  scaleTime,\n  ScaleTimeOptions,\n} from \"@vx/scale\";\nimport { LinePath } from \"@vx/shape\";\nimport { extent } from \"d3-array\";\nimport React from \"react\";\nimport { IMargin } from \"../../interfaces\";\n\nconst data = genDateValue(15);\n\nconst dateAccessor = (d: DateValueDatum) => d.date;\nconst valueAccessor = (d: DateValueDatum) => d.value;\n\nconst timeDomain = extent(data.map(dateAccessor)) as [Date, Date];\nconst scaleTimeOptions: ScaleTimeOptions = {\n  domain: timeDomain,\n};\nconst xScale = scaleTime(scaleTimeOptions);\n\nconst scaleLinearOptions: ScaleLinearOptions = {\n  domain: [0, Math.max(...data.map(valueAccessor))],\n};\nconst yScale = scaleLinear(scaleLinearOptions);\n\nconst x = (d: DateValueDatum) => xScale(dateAccessor(d));\nconst y = (d: DateValueDatum) => yScale(valueAccessor(d));\n\nconst primary = \"#8921e0\";\nconst secondary = \"#00f2ff\";\nconst contrast = \"#ffffff\";\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n}\n\nexport class GlyphDemo extends React.Component<IProps> {\n  public render() {\n    const { height, margin, width } = this.props;\n    const xMax = width - margin.left - margin.right;\n    const yMax = height - margin.top - margin.bottom;\n\n    xScale.range([0, xMax]);\n    yScale.range([yMax, 0]);\n\n    return (\n      <svg width={width} height={height}>\n        <rect\n          x={0}\n          y={0}\n          width={width}\n          height={height}\n          fill={secondary}\n          rx={14}\n        />\n        <Group top={margin.top}>\n          <LinePath\n            data={data}\n            x={x}\n            y={y}\n            stroke={primary}\n            strokeWidth={2}\n            strokeDasharray=\"2,2\"\n            curve={curveBasis}\n          />\n          <LinePath\n            data={data}\n            x={x}\n            y={y}\n            stroke={primary}\n            strokeWidth={3}\n            curve={curveMonotoneX}\n          />\n          {data.map((d, i) => {\n            const cx = x(d);\n            const cy = y(d);\n            return (\n              <g key={`line-point-${i}`}>\n                <GlyphDot\n                  cx={cx}\n                  cy={cy}\n                  r={6}\n                  fill={contrast}\n                  stroke={secondary}\n                  strokeWidth={10}\n                />\n                <GlyphDot\n                  cx={cx}\n                  cy={cy}\n                  r={6}\n                  fill={secondary}\n                  stroke={primary}\n                  strokeWidth={3}\n                />\n                <GlyphDot cx={cx} cy={cy} r={4} fill={contrast} />\n              </g>\n            );\n          })}\n        </Group>\n      </svg>\n    );\n  }\n}\n","import {\n  GradientDarkgreenGreen,\n  GradientLightgreenGreen,\n  GradientOrangeRed,\n  GradientPinkBlue,\n  GradientPinkRed,\n  GradientPurpleOrange,\n  GradientPurpleRed,\n  GradientSteelPurple,\n  GradientTealBlue,\n  RadialGradient,\n} from \"@vx/gradient\";\nimport { Bar } from \"@vx/shape\";\nimport React from \"react\";\n\ninterface IProps {\n  height: number;\n  width: number;\n}\n\nexport const GradientsDemo = (props: IProps) => {\n  const { height, width } = props;\n  const h = (height - 50) / 2;\n  const w = width / 4;\n  return (\n    <svg height={height} width={width}>\n      <GradientDarkgreenGreen id=\"DarkgreenGreen\" />\n      <GradientLightgreenGreen id=\"LightgreenGreen\" />\n      <GradientOrangeRed id=\"OrangeRed\" />\n      <GradientPinkBlue id=\"PinkBlue\" />\n      <GradientPinkRed id=\"PinkRed\" vertical={false} />\n      <GradientPurpleOrange id=\"PurpleOrange\" vertical={false} />\n      <GradientPurpleRed id=\"PurpleRed\" vertical={false} />\n      <RadialGradient from=\"#55bdd5\" to=\"#4f3681\" id=\"Radial\" r={\"80%\"} />\n      <GradientSteelPurple id=\"SteelPurple\" vertical={false} />\n      <GradientTealBlue id=\"TealBlue\" vertical={false} />\n      <Bar\n        x={0}\n        y={0}\n        width={w}\n        height={h}\n        fill={`url(#LightgreenGreen)`}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n        rx={14}\n      />\n      <Bar\n        x={w}\n        y={0}\n        width={w}\n        height={h}\n        fill={`url(#OrangeRed)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n      <Bar\n        x={w * 2}\n        y={0}\n        width={w}\n        height={h}\n        fill={`url(#PinkBlue)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n      <Bar\n        x={w * 3}\n        y={0}\n        width={w}\n        height={h}\n        fill={`url(#DarkgreenGreen)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n      <Bar\n        x={0}\n        y={h}\n        width={w}\n        height={h}\n        fill={`url(#PinkRed)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n      <Bar\n        x={w}\n        y={h}\n        width={w}\n        height={h}\n        fill={`url(#TealBlue)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n      <Bar\n        x={w * 2}\n        y={h}\n        width={w}\n        height={h}\n        fill={`url(#PurpleOrange)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n      <Bar\n        x={w * 3}\n        y={h}\n        width={w}\n        height={h}\n        fill={`url(#Radial)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n    </svg>\n  );\n};\n","import { Group } from \"@vx/group\";\nimport { HeatmapCircle, HeatmapRect } from \"@vx/heatmap\";\nimport { Bin, genBins } from \"@vx/mock-data\";\nimport { scaleLinear } from \"@vx/scale\";\nimport React from \"react\";\n\nimport { IMargin } from \"../../interfaces\";\n\nconst hot1 = \"#77312f\";\nconst hot2 = \"#f33d15\";\nconst cool1 = \"#122549\";\nconst cool2 = \"#b4fbde\";\nconst bg = \"#28272c\";\n\nconst data = genBins(16, 16);\n\ninterface IHeatmapBinDatum {\n  bin: number;\n  bins: number[];\n}\n\ninterface IHeatmapCell {\n  bin: Bin;\n  color: string;\n  column: number;\n  count: number;\n  cx: number;\n  cy: number;\n  datum: IHeatmapBinDatum;\n  gap: number;\n  height: number;\n  opacity: number;\n  r: number;\n  radius: number;\n  row: number;\n  width: number;\n  x: number;\n  y: number;\n}\n\ntype IHeatmapColumn = IHeatmapCell[];\n\n// utils\nconst max = (dataBins: Bin[], value = (d: any) => d) =>\n  Math.max(...dataBins.map(value));\nconst min = (values: number[], value = (d: any) => d) =>\n  Math.min(...values.map(value));\n\n// accessors\nconst bins = (d: any) => d.bins;\nconst count = (d: any) => d.count;\n\nconst colorMax = max(data, (d: any) => max(bins(d), count));\nconst bucketSizeMax = max(data, (d: any) => bins(d).length);\n\n// scales\nconst xScale = scaleLinear({\n  domain: [0, data.length],\n});\nconst yScale = scaleLinear({\n  domain: [0, bucketSizeMax],\n});\nconst circleColorScale = scaleLinear({\n  domain: [0, colorMax],\n  range: [hot1, hot2],\n});\nconst rectColorScale = scaleLinear({\n  domain: [0, colorMax],\n  range: [cool1, cool2],\n});\nconst opacityScale = scaleLinear({\n  domain: [0, colorMax],\n  range: [0.1, 1],\n});\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  separation: number;\n  width: number;\n}\n\nexport const HeatmapsDemo = (props: IProps) => {\n  const { height, margin, separation, width } = props;\n  // bounds\n  let size = width;\n  if (size > margin.left + margin.right) {\n    size = width - margin.left - margin.right - separation;\n  }\n\n  const xMax = size / 2;\n  const yMax = height - margin.bottom - margin.top;\n\n  const binWidth = xMax / data.length;\n  const binHeight = yMax / bucketSizeMax;\n  const radius = min([binWidth, binHeight]) / 2;\n\n  xScale.range([0, xMax]);\n  yScale.range([yMax, 0]);\n\n  return (\n    <svg width={width} height={height}>\n      <rect x={0} y={0} width={width} height={height} rx={14} fill={bg} />\n      <Group top={margin.top} left={margin.left}>\n        <HeatmapCircle\n          data={data}\n          xScale={xScale}\n          yScale={yScale}\n          colorScale={circleColorScale}\n          opacityScale={opacityScale}\n          radius={radius}\n          gap={2}\n        >\n          {(heatmap: IHeatmapCell[][]) => {\n            return heatmap.map((heatmapColumn: IHeatmapColumn) => {\n              return heatmapColumn.map((cell: IHeatmapCell) => {\n                return (\n                  <circle\n                    key={`heatmap-circle-${cell.row}-${cell.column}`}\n                    className=\"vx-heatmap-circle\"\n                    cx={cell.cx}\n                    cy={cell.cy}\n                    r={cell.r > 0 ? cell.r : 0}\n                    fill={cell.color}\n                    fillOpacity={cell.opacity}\n                    onClick={(event: React.MouseEvent) => {\n                      const { row, column } = cell;\n                      alert(JSON.stringify({ row, column, ...cell.bin }));\n                    }}\n                  />\n                );\n              });\n            });\n          }}\n        </HeatmapCircle>\n      </Group>\n      <Group top={margin.top} left={xMax + margin.left + separation}>\n        <HeatmapRect\n          data={data}\n          xScale={xScale}\n          yScale={yScale}\n          colorScale={rectColorScale}\n          opacityScale={opacityScale}\n          binWidth={binWidth}\n          binHeight={binWidth}\n          gap={2}\n        >\n          {(heatmap: IHeatmapCell[][]) => {\n            return heatmap.map((heatmapColumn: IHeatmapColumn) => {\n              return heatmapColumn.map((cell: IHeatmapCell) => {\n                return (\n                  <rect\n                    key={`heatmap-rect-${cell.row}-${cell.column}`}\n                    className=\"vx-heatmap-rect\"\n                    width={cell.width > 0 ? cell.width : 0}\n                    height={cell.height > 0 ? cell.height : 0}\n                    x={cell.x}\n                    y={cell.y}\n                    fill={cell.color}\n                    fillOpacity={cell.opacity}\n                    onClick={(event: React.MouseEvent) => {\n                      const { row, column } = cell;\n                      alert(JSON.stringify({ row, column, ...cell.bin }));\n                    }}\n                  />\n                );\n              });\n            });\n          }}\n        </HeatmapRect>\n      </Group>\n    </svg>\n  );\n};\n","import { GlyphDiamond, GlyphStar, GlyphTriangle, GlyphWye } from \"@vx/glyph\";\nimport {\n  Legend,\n  LegendItem,\n  LegendLabel,\n  LegendLinear,\n  LegendOrdinal,\n  LegendQuantile,\n  LegendSize,\n  LegendThreshold,\n} from \"@vx/legend\";\nimport {\n  scaleLinear,\n  scaleOrdinal,\n  scaleQuantize,\n  scaleThreshold,\n} from \"@vx/scale\";\nimport { format } from \"d3-format\";\nimport React from \"react\";\n\nconst oneDecimalFormat = format(\".1f\");\n\nconst sizeScale = scaleLinear({\n  domain: [0, 10],\n  range: [10, 30],\n});\n\nconst sizeColorScale = scaleLinear({\n  domain: [0, 10],\n  range: [\"#75fcfc\", \"#3236b8\"],\n});\n\nconst quantileScale = scaleQuantize({\n  domain: [0, 0.15],\n  range: [\"#eb4d70\", \"#f19938\", \"#6ce18b\", \"#78f6ef\", \"#9096f8\"],\n});\n\nconst linearScale = scaleLinear({\n  domain: [0, 10],\n  range: [\"#ed4fbb\", \"#e9a039\"],\n});\n\nconst thresholdScale = scaleThreshold({\n  domain: [0.01, 0.02, 0.04, 0.06, 0.08, 0.1],\n  range: [\"#f2f0f7\", \"#dadaeb\", \"#bcbddc\", \"#9e9ac8\", \"#756bb1\", \"#54278f\"],\n});\n\nconst ordinalColorScale = scaleOrdinal({\n  domain: [\"a\", \"b\", \"c\", \"d\"],\n  range: [\"#66d981\", \"#71f5ef\", \"#4899f1\", \"#7d81f6\"],\n});\n\nconst ordinalColor2Scale = scaleOrdinal({\n  domain: [\"a\", \"b\", \"c\", \"d\"],\n  range: [\"#fae856\", \"#f29b38\", \"#e64357\", \"#8386f7\"],\n});\n\nconst shapeScale = scaleOrdinal({\n  domain: [\"a\", \"b\", \"c\", \"d\", \"e\"],\n  range: [\n    <GlyphStar size={50} top={50 / 6} left={50 / 6} fill=\"#dd59b8\" />,\n    <GlyphWye size={50} top={50 / 6} left={50 / 6} fill=\"#de6a9a\" />,\n    <GlyphTriangle size={50} top={50 / 6} left={50 / 6} fill=\"#de7d7b\" />,\n    <GlyphDiamond size={50} top={50 / 6} left={50 / 6} fill=\"#df905f\" />,\n    (props: any) => (\n      <text fontSize=\"12\" dy=\"1em\" dx=\".33em\" fill=\"#e0a346\">\n        $\n      </text>\n    ),\n  ],\n});\n\ninterface IProps {\n  height: number;\n  width: number;\n}\n\nexport const LegendDemos = (props: IProps) => {\n  return (\n    <div className=\"chart\">\n      <LegendDemo title=\"Size\">\n        <LegendSize scale={sizeScale}>\n          {(labels: any) => {\n            return labels.map((label: any) => {\n              const size = sizeScale(label.datum);\n              const color = sizeColorScale(label.datum);\n              return (\n                <LegendItem\n                  key={`legend-${label.text}-${label.index}`}\n                  onClick={(event: React.MouseEvent) => {\n                    alert(`clicked: ${JSON.stringify(label)}`);\n                  }}\n                >\n                  <svg width={size} height={size} style={{ margin: \"5px 0\" }}>\n                    <circle\n                      cx={size / 2}\n                      cy={size / 2}\n                      fill={color}\n                      r={size / 2}\n                    />\n                  </svg>\n                  <LegendLabel align={\"left\"} margin={\"0 4px\"}>\n                    {label.text}\n                  </LegendLabel>\n                </LegendItem>\n              );\n            });\n          }}\n        </LegendSize>\n      </LegendDemo>\n      <LegendDemo title=\"Quantile\">\n        <LegendQuantile scale={quantileScale}>\n          {(labels: any) => {\n            return labels.map((label: any, i: number) => {\n              const size = 15;\n              return (\n                <LegendItem\n                  key={`legend-${i}`}\n                  onClick={(event: React.MouseEvent) => {\n                    alert(`clicked: ${JSON.stringify(label)}`);\n                  }}\n                >\n                  <svg width={size} height={size} style={{ margin: \"2px 0\" }}>\n                    <circle\n                      fill={label.value}\n                      r={size / 2}\n                      cx={size / 2}\n                      cy={size / 2}\n                    />\n                  </svg>\n                  <LegendLabel align={\"left\"} margin={\"0 4px\"}>\n                    {label.text}\n                  </LegendLabel>\n                </LegendItem>\n              );\n            });\n          }}\n        </LegendQuantile>\n        ;\n      </LegendDemo>\n      <LegendDemo title=\"Linear\">\n        <LegendLinear\n          scale={linearScale}\n          labelFormat={(d: any, i: number) => {\n            if (i % 2 === 0) {\n              return oneDecimalFormat(d);\n            }\n            return \"\";\n          }}\n        >\n          {(labels: any) => {\n            return labels.map((label: any, i: number) => {\n              const size = 15;\n              return (\n                <LegendItem\n                  key={`legend-quantile-${i}`}\n                  onClick={(event: React.MouseEvent) => {\n                    alert(`clicked: ${JSON.stringify(label)}`);\n                  }}\n                >\n                  <svg width={size} height={size} style={{ margin: \"2px 0\" }}>\n                    <circle\n                      fill={label.value}\n                      r={size / 2}\n                      cx={size / 2}\n                      cy={size / 2}\n                    />\n                  </svg>\n                  <LegendLabel align={\"left\"} margin={\"0 4px\"}>\n                    {label.text}\n                  </LegendLabel>\n                </LegendItem>\n              );\n            });\n          }}\n        </LegendLinear>\n      </LegendDemo>\n      <LegendDemo title=\"Threshold\">\n        <LegendThreshold scale={thresholdScale}>\n          {(labels: any) => {\n            return labels.reverse().map((label: any, i: number) => {\n              const size = 15;\n              return (\n                <LegendItem\n                  key={`legend-quantile-${i}`}\n                  margin=\"1px 0\"\n                  onClick={(event: React.MouseEvent) => {\n                    alert(`clicked: ${JSON.stringify(label)}`);\n                  }}\n                >\n                  <svg width={size} height={size}>\n                    <rect fill={label.value} width={size} height={size} />\n                  </svg>\n                  <LegendLabel align={\"left\"} margin={\"2px 0 0 10px\"}>\n                    {label.text}\n                  </LegendLabel>\n                </LegendItem>\n              );\n            });\n          }}\n        </LegendThreshold>\n      </LegendDemo>\n      <LegendDemo title=\"Ordinal\">\n        <LegendOrdinal\n          scale={ordinalColorScale}\n          labelFormat={(label: any) => `${label.toUpperCase()}`}\n        >\n          {(labels: any) => {\n            return (\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                {labels.map((label: any, i: number) => {\n                  const size = 15;\n                  return (\n                    <LegendItem\n                      key={`legend-quantile-${i}`}\n                      margin={\"0 5px\"}\n                      onClick={(event: React.MouseEvent) => {\n                        alert(`clicked: ${JSON.stringify(label)}`);\n                      }}\n                    >\n                      <svg width={size} height={size}>\n                        <rect fill={label.value} width={size} height={size} />\n                      </svg>\n                      <LegendLabel align={\"left\"} margin={\"0 0 0 4px\"}>\n                        {label.text}\n                      </LegendLabel>\n                    </LegendItem>\n                  );\n                })}\n              </div>\n            );\n          }}\n        </LegendOrdinal>\n      </LegendDemo>\n      <LegendDemo title=\"Custom Legend\">\n        <Legend scale={shapeScale}>\n          {(labels: any) => {\n            return (\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                {labels.map((label: any, i: number) => {\n                  const size = 15;\n                  const color = ordinalColor2Scale(label.datum);\n                  const shape = shapeScale(label.datum);\n                  const shapeProps = { fill: color };\n                  const isValidElement = React.isValidElement(shape);\n                  return (\n                    <LegendItem\n                      key={`legend-quantile-${i}`}\n                      margin={\"0 4px 0 0\"}\n                      flexDirection=\"column\"\n                      onClick={(event: React.MouseEvent) => {\n                        const { datum, index } = label;\n                        alert(\n                          `clicked: ${JSON.stringify({ datum, color, index })}`\n                        );\n                      }}\n                    >\n                      <svg\n                        width={size}\n                        height={size}\n                        style={{ margin: \"0 0 8px 0\" }}\n                      >\n                        {!isValidElement &&\n                          React.createElement(shape, shapeProps)}\n                        {isValidElement && React.cloneElement(shape)}\n                      </svg>\n                      <LegendLabel align={\"left\"} margin={0}>\n                        {label.text}\n                      </LegendLabel>\n                    </LegendItem>\n                  );\n                })}\n              </div>\n            );\n          }}\n        </Legend>\n      </LegendDemo>\n      ;\n    </div>\n  );\n};\n\ninterface ILegendDemoProps {\n  children: any;\n  title: string;\n}\n\nfunction LegendDemo(props: ILegendDemoProps) {\n  const { children, title } = props;\n  return (\n    <div className=\"legend\">\n      <div className=\"title\">{title}</div>\n      {children}\n    </div>\n  );\n}\n","import { curveBasisOpen } from \"@vx/curve\";\nimport { LinearGradient } from \"@vx/gradient\";\nimport { Group } from \"@vx/group\";\nimport { appleStock, AppleStockDatum } from \"@vx/mock-data\";\nimport { Accessor, scaleLog, scaleTime } from \"@vx/scale\";\nimport { LineRadial } from \"@vx/shape\";\nimport { extent } from \"d3-array\";\nimport React from \"react\";\n\nconst green = \"#e5fd3d\";\nconst blue = \"#aeeef8\";\nconst darkgreen = \"#dff84d\";\nconst bg = \"#744cca\";\n\nconst dateAccessor: Accessor<AppleStockDatum, Date> = d => new Date(d.date);\nconst closeAccessor: Accessor<AppleStockDatum, number> = d => +d.close;\n\nconst xDomain = extent(appleStock.map(dateAccessor)) as [Date, Date];\nconst xScale = scaleTime({\n  domain: xDomain,\n  range: [0, Math.PI * 2],\n});\n\nconst yDomain = extent(appleStock.map(closeAccessor)) as [number, number];\nconst yScale = scaleLog({\n  domain: yDomain,\n});\n\nconst angle: Accessor<AppleStockDatum, number> = (d: AppleStockDatum) =>\n  xScale(dateAccessor(d));\nconst radius: Accessor<AppleStockDatum, number> = (d: AppleStockDatum) =>\n  yScale(closeAccessor(d));\n\nconst firstPoint = appleStock[0];\nconst lastPoint = appleStock[appleStock.length - 1];\n\ninterface IProps {\n  height: number;\n  width: number;\n}\n\nexport const LineRadialDemo = (props: IProps) => {\n  const { height, width } = props;\n  return (\n    <svg width={width} height={height}>\n      <LinearGradient from={green} to={blue} id=\"line-gradient\" />\n      <rect width={width} height={height} fill={bg} rx={14} />\n      <Group top={height / 2} left={width / 2}>\n        {yScale.ticks().map((tick, i) => {\n          const y = yScale(tick);\n          const opacity = 1 / (i + 1) - (1 / i) * 0.2;\n          return (\n            <g key={`radial-grid-${i}`} transform={\"scale(30)\"}>\n              <circle\n                fill={blue}\n                fillOpacity={opacity}\n                r={y}\n                stroke={blue}\n                strokeOpacity={0.2}\n                strokeWidth={1}\n              />\n              <text\n                dy={\"-.33em\"}\n                fill={blue}\n                fillOpacity={0.6}\n                fontSize={8}\n                textAnchor=\"middle\"\n                y={-y}\n              >\n                {tick}\n              </text>\n            </g>\n          );\n        })}\n        <LineRadial\n          angle={angle}\n          curve={curveBasisOpen}\n          data={appleStock}\n          fill=\"none\"\n          radius={radius}\n          stroke=\"url('#line-gradient')\"\n          strokeWidth={2}\n          strokeOpacity={0.8}\n          strokeLinecap=\"round\"\n          transform={\"scale(100)\"}\n        />\n        {[firstPoint, lastPoint].map((d, i) => {\n          const cx = (xScale(dateAccessor(d)) * Math.PI) / 180;\n          const cy = -yScale(closeAccessor(d));\n          return (\n            <circle\n              //   cx={Math.random() * 100}\n              //   cy={Math.random() * 100}\n              cx={!isNaN(cx) ? cx : 0}\n              cy={!isNaN(cy) ? cy : 0}\n              fill={darkgreen}\n              key={`line-cap-${i}`}\n              r={10}\n            />\n          );\n        })}\n      </Group>\n    </svg>\n  );\n};\n","import { curveMonotoneX } from \"@vx/curve\";\nimport { GridRows } from \"@vx/grid\";\nimport { Group } from \"@vx/group\";\nimport { DateValueDatum, genDateValue } from \"@vx/mock-data\";\nimport { IWithParentSizeProps, withParentSize } from \"@vx/responsive\";\nimport { Accessor, scaleLinear, scaleTime } from \"@vx/scale\";\nimport { LinePath } from \"@vx/shape\";\nimport { extent, max } from \"d3-array\";\nimport React from \"react\";\nimport { IMargin } from \"../../interfaces\";\n\nfunction genLines(num: number) {\n  return new Array(num).fill(1).map(() => {\n    return genDateValue(25);\n  });\n}\n\nconst series = genLines(12);\nconst data = series.reduce((rec, d) => {\n  return rec.concat(d);\n}, []);\n\nconst xAccessor: Accessor<DateValueDatum, Date> = (d) => d.date;\nconst yAccessor: Accessor<DateValueDatum, number> = (d) => d.value;\n\ninterface IProps {\n  width: number;\n  height: number;\n  margin: IMargin;\n}\n\nexport const LinesDemo = (props: IProps) => {\n  const { height, width, margin } = props;\n  const xMax = width;\n  const yMax = height / 8;\n\n  const [minDate, maxDate] = extent(data, xAccessor) as [Date, Date];\n  const scaleTimeOptions = {\n    domain: [minDate, maxDate] as [Date, Date],\n    range: [0, xMax] as [number, number],\n  };\n  const xScale = scaleTime(scaleTimeOptions);\n\n  const maxValue = max(data, yAccessor) as number;\n  const scaleLinearOptions = {\n    domain: [0, maxValue] as [number, number],\n    range: [yMax, 0] as [number, number],\n    rangeRound: [1, 2] as [number, number],\n  };\n  const yScale = scaleLinear(scaleLinearOptions);\n\n  return (\n    <svg width={width} height={height}>\n      <rect x={0} y={0} width={width} height={height} fill=\"#242424\" rx={14} />\n      <GridRows\n        top={margin.top}\n        left={margin.left}\n        scale={xScale}\n        stroke=\"rgba(142, 32, 95, 0.9)\"\n        width={xMax}\n      />\n      {xMax > 8 &&\n        series.map((d, i) => {\n          return (\n            <Group key={`lines-${i}`} top={(i * yMax) / 2}>\n              <LinePath\n                data={d}\n                x={(dd: DateValueDatum) => xScale(xAccessor(dd))}\n                y={(dd: DateValueDatum) => yScale(yAccessor(dd))}\n                stroke={\"#ffffff\"}\n                strokeWidth={1}\n                curve={i % 2 === 0 ? curveMonotoneX : undefined}\n              />\n            </Group>\n          );\n        })}\n    </svg>\n  );\n};\n\ninterface ILinesDemoResponsiveProps extends IWithParentSizeProps {\n  margin: IMargin;\n}\n\nexport const LinesDemoResponsive = withParentSize(\n  (props: ILinesDemoResponsiveProps) => {\n    const { margin, parentWidth } = props;\n    // TODO: parentHeight causes a resize every time\n    return <LinesDemo height={400} width={parentWidth} margin={margin} />;\n  }\n);\n","import { LinearGradient } from \"@vx/gradient\";\nimport { Group } from \"@vx/group\";\nimport { Tree } from \"@vx/hierarchy\";\nimport {\n  LinkHorizontal,\n  LinkHorizontalCurve,\n  LinkHorizontalLine,\n  LinkHorizontalStep,\n  LinkRadial,\n  LinkRadialCurve,\n  LinkRadialLine,\n  LinkRadialStep,\n  LinkVertical,\n  LinkVerticalCurve,\n  LinkVerticalLine,\n  LinkVerticalStep,\n} from \"@vx/shape\";\nimport { hierarchy } from \"d3-hierarchy\";\nimport { pointRadial } from \"d3-shape\";\nimport React from \"react\";\n\nimport { IMargin } from \"../../interfaces\";\n\nconst data = {\n  name: \"T\",\n  // tslint:disable-next-line object-literal-sort-keys\n  children: [\n    {\n      name: \"A\",\n      // tslint:disable-next-line object-literal-sort-keys\n      children: [\n        { name: \"A1\" },\n        { name: \"A2\" },\n        { name: \"A3\" },\n        {\n          name: \"C\",\n          // tslint:disable-next-line object-literal-sort-keys\n          children: [\n            {\n              name: \"C1\",\n            },\n            {\n              name: \"D\",\n              // tslint:disable-next-line object-literal-sort-keys\n              children: [\n                {\n                  name: \"D1\",\n                },\n                {\n                  name: \"D2\",\n                },\n                {\n                  name: \"D3\",\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    { name: \"Z\" },\n    {\n      name: \"B\",\n      // tslint:disable-next-line object-literal-sort-keys\n      children: [{ name: \"B1\" }, { name: \"B2\" }, { name: \"B3\" }],\n    },\n  ],\n};\n\ntype SupportedLayout = \"cartesian\" | \"polar\";\ntype SupportedOrientation = \"horizontal\" | \"vertical\";\ntype SupportedLinkType = \"diagonal\" | \"curve\" | \"step\" | \"line\";\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n}\n\ninterface IState {\n  layout: SupportedLayout;\n  linkType: any;\n  orientation: SupportedOrientation;\n  stepPercent: number;\n}\n\ninterface IPoint {\n  x: number;\n  y: number;\n}\n\nexport class LinkTypesDemo extends React.Component<IProps, IState> {\n  public constructor(props: IProps) {\n    super(props);\n    this.state = {\n      layout: \"cartesian\",\n      linkType: \"diagonal\",\n      orientation: \"horizontal\",\n      stepPercent: 0.25,\n    };\n    this.onSelectLayoutChange = this.onSelectLayoutChange.bind(this);\n    this.onSelectOrientationChange = this.onSelectOrientationChange.bind(this);\n    this.onSelectLinkTypeChange = this.onSelectLinkTypeChange.bind(this);\n    this.onInputChange = this.onInputChange.bind(this);\n    this.renderLink = this.renderLink.bind(this);\n    this.renderDescendants = this.renderDescendants.bind(this);\n  }\n  public render() {\n    const { height, margin, width } = this.props;\n    const { layout, orientation, linkType, stepPercent } = this.state;\n\n    const innerWidth = width - margin.left - margin.right;\n    const innerHeight = height - margin.top - margin.bottom;\n\n    let origin: IPoint;\n    let sizeWidth: number;\n    let sizeHeight: number;\n\n    if (layout === \"polar\") {\n      origin = {\n        x: innerWidth / 2,\n        y: innerHeight / 2,\n      };\n      sizeWidth = 2 * Math.PI;\n      sizeHeight = Math.min(innerWidth, innerHeight) / 2;\n    } else {\n      origin = { x: 0, y: 0 };\n      if (orientation === \"vertical\") {\n        sizeWidth = innerWidth;\n        sizeHeight = innerHeight;\n      } else {\n        sizeWidth = innerHeight;\n        sizeHeight = innerWidth;\n      }\n    }\n\n    return (\n      <div>\n        <div style={{ color: \"rgba(38, 150, 136, 1.000)\", fontSize: 10 }}>\n          <label>layout:</label>\n          <select\n            onClick={stopEventPropagation}\n            onChange={this.onSelectLayoutChange}\n            value={layout}\n          >\n            <option value=\"cartesian\">cartesian</option>\n            <option value=\"polar\">polar</option>\n          </select>\n\n          <label>orientation:</label>\n          <select\n            onClick={stopEventPropagation}\n            onChange={this.onSelectOrientationChange}\n            value={orientation}\n            disabled={layout === \"polar\"}\n          >\n            <option value=\"vertical\">vertical</option>\n            <option value=\"horizontal\">horizontal</option>\n          </select>\n\n          <label>link:</label>\n          <select\n            onClick={stopEventPropagation}\n            onChange={this.onSelectLinkTypeChange}\n            value={linkType}\n          >\n            <option value=\"diagonal\">diagonal</option>\n            <option value=\"step\">step</option>\n            <option value=\"curve\">curve</option>\n            <option value=\"line\">line</option>\n          </select>\n\n          <label>step:</label>\n          <input\n            onClick={stopEventPropagation}\n            type=\"range\"\n            min={0}\n            max={1}\n            step={0.1}\n            onChange={this.onInputChange}\n            value={stepPercent}\n            disabled={linkType !== \"step\" || layout === \"polar\"}\n          />\n        </div>\n\n        <svg width={width} height={height}>\n          <LinearGradient id=\"lg\" from=\"#fd9b93\" to=\"#fe6e9e\" />\n          <rect width={width} height={height} rx={14} fill=\"#272b4d\" />\n          <Group top={margin.top} left={margin.left}>\n            <Tree\n              root={hierarchy(data, (d: any) =>\n                d.isExpanded ? null : d.children\n              )}\n              size={[sizeWidth, sizeHeight]}\n              separation={(a: any, b: any) =>\n                (a.parent === b.parent ? 1 : 0.5) / a.depth\n              }\n            >\n              {(dataNode: any) => {\n                console.warn(\"dataNode\", dataNode);\n                return (\n                  <Group top={origin.y} left={origin.x}>\n                    {dataNode.links().map(this.renderLink)}\n                    {dataNode.descendants().map(this.renderDescendants)}\n                  </Group>\n                );\n              }}\n            </Tree>\n          </Group>\n        </svg>\n      </div>\n    );\n  }\n\n  private renderLink(link: any, i: number) {\n    const { layout, linkType, orientation, stepPercent } = this.state;\n    let LinkComponent: any;\n\n    if (layout === \"polar\") {\n      if (linkType === \"step\") {\n        LinkComponent = LinkRadialStep;\n      } else if (linkType === \"curve\") {\n        LinkComponent = LinkRadialCurve;\n      } else if (linkType === \"line\") {\n        LinkComponent = LinkRadialLine;\n      } else {\n        LinkComponent = LinkRadial;\n      }\n    } else {\n      if (orientation === \"vertical\") {\n        if (linkType === \"step\") {\n          LinkComponent = LinkVerticalStep;\n        } else if (linkType === \"curve\") {\n          LinkComponent = LinkVerticalCurve;\n        } else if (linkType === \"line\") {\n          LinkComponent = LinkVerticalLine;\n        } else {\n          LinkComponent = LinkVertical;\n        }\n      } else {\n        if (linkType === \"step\") {\n          LinkComponent = LinkHorizontalStep;\n        } else if (linkType === \"curve\") {\n          LinkComponent = LinkHorizontalCurve;\n        } else if (linkType === \"line\") {\n          LinkComponent = LinkHorizontalLine;\n        } else {\n          LinkComponent = LinkHorizontal;\n        }\n      }\n    }\n\n    return (\n      <LinkComponent\n        data={link}\n        percent={+stepPercent}\n        stroke=\"#374469\"\n        strokeWidth=\"1\"\n        fill=\"none\"\n        key={i}\n        onClick={(linkData: any) => (event: React.MouseEvent) => {\n          console.warn(\"clicked\", linkData, \"event\", event);\n        }}\n      />\n    );\n  }\n\n  private renderDescendants(node: any, key: any) {\n    const { layout, orientation } = this.state;\n    const width = 40;\n    const height = 20;\n\n    let top;\n    let left;\n    if (layout === \"polar\") {\n      const [radialX, radialY] = pointRadial(node.x, node.y);\n      top = radialY;\n      left = radialX;\n    } else {\n      if (orientation === \"vertical\") {\n        top = node.y;\n        left = node.x;\n      } else {\n        top = node.x;\n        left = node.y;\n      }\n    }\n\n    return (\n      <Group top={top} left={left} key={key}>\n        {node.depth === 0 && (\n          <circle\n            r={12}\n            fill=\"url('#lg')\"\n            onClick={() => {\n              node.data.isExpanded = !node.data.isExpanded;\n              console.warn(\"node\", node);\n              this.forceUpdate();\n            }}\n          />\n        )}\n        {node.depth !== 0 && (\n          <rect\n            height={height}\n            width={width}\n            y={-height / 2}\n            x={-width / 2}\n            fill={\"#272b4d\"}\n            stroke={node.data.children ? \"#03c0dc\" : \"#26deb0\"}\n            strokeWidth={1}\n            strokeDasharray={!node.data.children ? \"2,2\" : \"0\"}\n            strokeOpacity={!node.data.children ? 0.6 : 1}\n            rx={!node.data.children ? 10 : 0}\n            onClick={() => {\n              node.data.isExpanded = !node.data.isExpanded;\n              // console.warn(node);\n              this.forceUpdate();\n            }}\n          />\n        )}\n        <text\n          dy={\".33em\"}\n          fontSize={9}\n          fontFamily=\"Arial\"\n          textAnchor={\"middle\"}\n          style={{ pointerEvents: \"none\" }}\n          fill={\n            node.depth === 0 ? \"#71248e\" : node.children ? \"white\" : \"#26deb0\"\n          }\n        >\n          {node.data.name}\n        </text>\n      </Group>\n    );\n  }\n\n  private onSelectLayoutChange(event: React.ChangeEvent<HTMLSelectElement>) {\n    const layout = event.target.value as SupportedLayout;\n    this.setState({ layout });\n  }\n\n  private onSelectOrientationChange(\n    event: React.ChangeEvent<HTMLSelectElement>\n  ) {\n    const orientation = event.target.value as SupportedOrientation;\n    this.setState({ orientation });\n  }\n\n  private onSelectLinkTypeChange(event: React.ChangeEvent<HTMLSelectElement>) {\n    const linkType = event.target.value as SupportedLinkType;\n    this.setState({ linkType });\n  }\n\n  // TODO: fix\n  private onInputChange(event: any) {\n    const stepPercent = parseInt(event.target.value, 10);\n    this.setState({ stepPercent });\n  }\n}\n\nfunction stopEventPropagation(event: React.MouseEvent) {\n  event.stopPropagation();\n}\n","import { Graph } from \"@vx/network\";\nimport React from \"react\";\n\nconst nodes = [{ x: 50, y: 20 }, { x: 200, y: 300 }, { x: 300, y: 40 }];\nconst links = [\n  { source: nodes[0], target: nodes[1] },\n  { source: nodes[1], target: nodes[2] },\n  { source: nodes[2], target: nodes[0] },\n];\n\nconst graph = {\n  links,\n  nodes,\n};\n\ninterface IProps {\n  height: number;\n  width: number;\n}\n\nexport class NetworkDemo extends React.Component<IProps> {\n  public render() {\n    const { height, width } = this.props;\n\n    if (width <= 0) {\n      return null;\n    }\n\n    return (\n      <svg width={width} height={height}>\n        <rect width={width} height={height} rx={14} fill=\"#272b4d\" />\n        <Graph graph={graph} />\n      </svg>\n    );\n  }\n}\n","import { Group } from \"@vx/group\";\nimport { INode, Pack } from \"@vx/hierarchy\";\nimport { exoplanets as exoplanetsData, PlanetDatum } from \"@vx/mock-data\";\nimport { Accessor, scaleQuantize } from \"@vx/scale\";\nimport { extent } from \"d3-array\";\nimport { hierarchy, HierarchyNode } from \"d3-hierarchy\";\nimport React from \"react\";\n\nimport { IMargin } from \"../../interfaces\";\n\nconst radiusAccessor: Accessor<PlanetDatum, number> = (d) => +d.radius;\n\nconst exoplanets = exoplanetsData.filter((d: PlanetDatum) => +d.distance === 0);\nconst planets = exoplanetsData.filter((d: PlanetDatum) => +d.distance !== 0);\n\nconst childrenPlanets = [{ children: planets }].concat(exoplanets as any);\nconst pack = { children: childrenPlanets } as any;\n\nconst colorsDomain = extent(exoplanetsData.map(radiusAccessor));\nconst colorScale = scaleQuantize({\n  domain: colorsDomain,\n  range: [\"#ffe108\", \"#ffc10e\", \"#fd6d6f\", \"#855af2\", \"#11d2f9\", \"#49f4e7\"],\n});\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n}\n\nexport class PackDemo extends React.Component<IProps> {\n  public render() {\n    const { height, margin, width } = this.props;\n    const allData = hierarchy(pack);\n    console.warn(\"pack hierarchy\", pack, \"all hierarchy data\", allData);\n    const data = hierarchy<PlanetDatum>(pack)\n      .sum((d: PlanetDatum) => {\n        // console.warn(\"d\", d);\n        return +d.radius * +d.radius;\n      })\n      .sort((a: HierarchyNode<PlanetDatum>, b: HierarchyNode<PlanetDatum>) => {\n        // console.warn(\"a\", a, \"b\", b);\n        // const cond0 = !a.children - !b.children;\n        const cond0 = 0;\n        // const cond1 = isNaN(+a.data.distance) - isNaN(+b.data.distance);\n        const cond1 = 0;\n        const cond2 = +a.data.distance - +b.data.distance;\n        return cond0 || cond1 || cond2;\n      });\n\n    return (\n      <svg width={width} height={height}>\n        <rect width={width} height={height} rx={14} fill=\"#ffffff\" />\n        <Pack root={data} size={[width * 2, height * 2]}>\n          {(packNode: any) => {\n            const circles = packNode.descendants().slice(2);\n            return (\n              <Group top={-height - margin.bottom} left={-width / 2}>\n                {circles.map(renderCircle)}\n              </Group>\n            );\n          }}\n        </Pack>\n      </svg>\n    );\n  }\n}\n\nfunction renderCircle(circle: any, i: number) {\n  return (\n    <circle\n      cx={circle.x}\n      cy={circle.y}\n      fill={colorScale(circle.data.radius)}\n      key={`cir-${i}`}\n      r={circle.r}\n    />\n  );\n}\n","import { Group } from \"@vx/group\";\nimport { letterFrequency, LetterFrequencyDatum } from \"@vx/mock-data\";\nimport { Point } from \"@vx/point\";\nimport { Accessor, scaleLinear } from \"@vx/scale\";\nimport { Line, LineRadial } from \"@vx/shape\";\nimport React from \"react\";\n\nimport { ScaleLinear } from \"d3-scale\";\nimport { IMargin } from \"../../interfaces\";\n\nconst orange = \"#ff9933\";\nconst pumpkin = \"#f5810c\";\nconst silver = \"#d9d9d9\";\nconst bg = \"#FAF7E9\";\n\nconst LEVELS = 5;\nconst ANG = 360;\nconst data = letterFrequency.slice(2, 12);\nconst webs = genAngles(data.length);\nconst zeroPoint = new Point({ x: 0, y: 0 });\n\nconst yAccessor: Accessor<LetterFrequencyDatum, number> = (d) => d.frequency;\n\nconst radiusScale = scaleLinear({\n  domain: [ANG, 0],\n  range: [0, Math.PI * 2],\n});\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n}\n\nexport class RadarDemo extends React.Component<IProps> {\n  public render() {\n    const { height, margin, width } = this.props;\n    const xMax = width - margin.left - margin.right;\n    const yMax = height - margin.top - margin.bottom;\n    const radius = Math.min(xMax, yMax) / 2;\n\n    const yScale = scaleLinear({\n      domain: [0, Math.max(...data.map(yAccessor))],\n      range: [0, radius],\n    });\n\n    const points = genPoints(data.length, radius);\n    const polygonPoints = genPolygonPoints(data, yScale, yAccessor);\n    const polygonPointsString = genPolygonPointsString(polygonPoints);\n    // console.warn(polygonPointsString);\n\n    const ringLines = [...Array(LEVELS)].map((_, i) => {\n      const r = ((i + 1) * radius) / LEVELS;\n      return r;\n    });\n\n    return (\n      <svg width={width} height={height}>\n        <rect fill={bg} width={width} height={height} rx={14} />\n        <Group top={height / 2 - margin.top} left={width / 2}>\n          {ringLines.map(renderRing)}\n          {points.map(renderLine)}\n          <polygon\n            points={polygonPointsString}\n            fill={orange}\n            fillOpacity={0.3}\n            stroke={orange}\n            strokeWidth={1}\n          />\n          {polygonPoints.map(renderPoint)}\n        </Group>\n      </svg>\n    );\n  }\n}\n\nfunction genAngles(length: number) {\n  return [...Array(length + 1)].map((_, i) => {\n    return {\n      angle: i * (ANG / length),\n    };\n  });\n}\n\nfunction genPoints(length: number, radius: number) {\n  const step = (Math.PI * 2) / length;\n  return [...Array(length)].map((_, i) => {\n    return {\n      x: radius * Math.sin(i * step),\n      y: radius * Math.cos(i * step),\n    };\n  });\n}\n\nfunction genPolygonPoints(\n  dataBis: LetterFrequencyDatum[],\n  scale: ScaleLinear<number | string, number>,\n  accessor: Accessor<LetterFrequencyDatum, any>\n) {\n  const step = (Math.PI * 2) / dataBis.length;\n  const points = new Array(dataBis.length).fill({}).map((_: any, i: number) => {\n    if (i === 0) {\n      return zeroPoint;\n    } else {\n      const x = scale(accessor(dataBis[i - 1])) * Math.sin(i * step);\n      const y = scale(accessor(dataBis[i - 1])) * Math.cos(i * step);\n      return new Point({ x, y });\n    }\n  });\n  return points;\n}\n\nfunction genPolygonPointsString(points: Point[]) {\n  return points.map(stringifyPoint).join(\" \");\n}\n\nfunction renderPoint(point: Point, i: number) {\n  return (\n    <circle\n      key={`radar-point-${i}`}\n      cx={point.x}\n      cy={point.y}\n      r={4}\n      fill={pumpkin}\n    />\n  );\n}\n\nfunction stringifyPoint(point: Point) {\n  return `${point.x},${point.y}`;\n}\n\nfunction renderRing(r: number, i: number) {\n  return (\n    <LineRadial\n      key={`web-${i}`}\n      data={webs}\n      angle={(d) => radiusScale(d.angle)}\n      radius={r}\n      fill=\"none\"\n      stroke={silver}\n      strokeWidth={2}\n      strokeOpacity={0.8}\n      strokeLinecap=\"round\"\n    />\n  );\n}\n\nfunction renderLine(point: any, i: number) {\n  return (\n    <Line from={zeroPoint} key={`radar-line-${i}`} to={point} stroke={silver} />\n  );\n}\n","import { PatternCircles, PatternLines, PatternWaves } from \"@vx/pattern\";\nimport { Bar } from \"@vx/shape\";\nimport React from \"react\";\n\ninterface IProps {\n  height: number;\n  width: number;\n}\n\nexport const PatternsDemo = (props: IProps) => {\n  const { height, width } = props;\n  const xMax = width;\n  const yMax = height - 80;\n  const pWidth = xMax / 4;\n  const pHeight = yMax / 2;\n  return (\n    <svg width={width} height={height}>\n      <PatternLines\n        id=\"vLines\"\n        height={6}\n        width={6}\n        stroke=\"black\"\n        strokeWidth={1}\n      />\n      <PatternLines\n        id=\"hLines\"\n        height={6}\n        width={6}\n        stroke=\"black\"\n        strokeWidth={1}\n        orientation={[\"horizontal\"]}\n      />\n      <PatternLines\n        id=\"dLines\"\n        height={6}\n        width={6}\n        stroke=\"black\"\n        strokeWidth={1}\n        orientation={[\"diagonal\"]}\n      />\n      <PatternLines\n        id=\"dhLines\"\n        height={6}\n        width={6}\n        stroke=\"black\"\n        strokeWidth={1}\n        orientation={[\"vertical\", \"horizontal\"]}\n      />\n      <PatternCircles id=\"Circles\" height={6} width={6} fill=\"black\" />\n      <PatternCircles\n        id=\"cCircles\"\n        height={10}\n        width={10}\n        fill=\"black\"\n        complement\n      />\n      <PatternWaves\n        id=\"Waves\"\n        height={6}\n        width={6}\n        fill=\"transparent\"\n        stroke=\"black\"\n        strokeWidth={1}\n        complement\n      />\n      <PatternWaves\n        id=\"bWaves\"\n        height={12}\n        width={12}\n        fill=\"transparent\"\n        stroke=\"black\"\n        strokeWidth={1}\n        complement\n      />\n      <Bar\n        fill={`url(#vLines)`}\n        height={pHeight}\n        width={pWidth}\n        x={0}\n        y={0}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#hLines)`}\n        height={pHeight}\n        width={pWidth}\n        x={pWidth}\n        y={0}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#dLines)`}\n        height={pHeight}\n        width={pWidth}\n        x={pWidth * 2}\n        y={0}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#dhLines)`}\n        height={pHeight}\n        width={pWidth}\n        x={pWidth * 3}\n        y={0}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#Circles)`}\n        height={pHeight}\n        width={pWidth}\n        x={0}\n        y={pHeight}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#cCircles)`}\n        height={pHeight}\n        width={pWidth}\n        x={pWidth}\n        y={pHeight}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#Waves)`}\n        height={pHeight}\n        width={pWidth}\n        x={pWidth * 2}\n        y={pHeight}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#bWaves)`}\n        height={pHeight}\n        width={pWidth}\n        x={pWidth * 3}\n        y={pHeight}\n        rx={14}\n      />\n    </svg>\n  );\n};\n","import { GradientPinkBlue } from \"@vx/gradient\";\nimport { Group } from \"@vx/group\";\nimport {\n  Browser,\n  browserUsage,\n  Letter,\n  letterFrequency,\n  LetterFrequencyDatum,\n} from \"@vx/mock-data\";\nimport { Pie, PieInner } from \"@vx/shape\";\nimport React from \"react\";\n\nimport { Accessor } from \"@vx/scale\";\nimport { IMargin } from \"../../interfaces\";\n\nconst white = \"#ffffff\";\nconst black = \"#000000\";\n\nconst letters = letterFrequency.slice(0, 4);\nconst browserNames = Object.keys(browserUsage[0]).filter(\n  (k: string) => k !== \"date\"\n);\n\nconst browsers = browserNames.map((k: string) => {\n  const d: any = browserUsage[0];\n  const usageString = d[k] as string;\n  const usageNumber = +usageString;\n  const browser: Browser = {\n    label: k,\n    usage: usageNumber,\n  };\n  return browser;\n});\n\nconst usageAccessor: Accessor<Browser, number> = (d) => d.usage;\nconst frequencyAccessor: Accessor<LetterFrequencyDatum, number> = (\n  d: LetterFrequencyDatum\n) => d.frequency;\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n}\n\nexport class PieDemo extends React.Component<IProps> {\n  public render() {\n    const { height, margin, width } = this.props;\n\n    const radius = Math.min(width, height) / 2;\n    const centerY = height / 2;\n    const centerX = width / 2;\n\n    return (\n      <svg width={width} height={height}>\n        <GradientPinkBlue id=\"pie-gradients\" />\n        <rect\n          rx={14}\n          width={width}\n          height={height}\n          fill=\"url('#pie-gradients')\"\n        />\n        <Group top={centerY - margin.top} left={centerX}>\n          <Pie\n            data={browsers}\n            pieValue={usageAccessor}\n            outerRadius={radius - 80}\n            innerRadius={radius - 120}\n            cornerRadius={3}\n            padAngle={0}\n          >\n            {(pie: PieInner<Browser>) => {\n              // console.warn(\"pie browser usage\", pie);\n              return pie.arcs.map((arc, i) => {\n                const opacity = 1 / (i + 2);\n                const [centroidX, centroidY] = pie.path.centroid(arc);\n                const { startAngle, endAngle } = arc;\n                const hasSpaceForLabel = endAngle - startAngle >= 0.1;\n                // TODO: pie.path(arc) returns string | null\n                const d = pie.path(arc) as string | undefined;\n                return (\n                  <g key={`browser-${arc.data.label}-${i}`}>\n                    <path fill={white} fillOpacity={opacity} d={d} />\n                    {hasSpaceForLabel && (\n                      <text\n                        dy=\".33em\"\n                        fontSize={9}\n                        fill={white}\n                        textAnchor=\"middle\"\n                        x={centroidX}\n                        y={centroidY}\n                      >\n                        {arc.data.label}\n                      </text>\n                    )}\n                  </g>\n                );\n              });\n            }}\n          </Pie>\n          <Pie\n            data={letters}\n            pieValue={frequencyAccessor}\n            pieSortValues={(a, b) => -1}\n            outerRadius={radius - 135}\n          >\n            {(pie: PieInner<Letter>) => {\n              // console.warn(\"pie letters frequency\", pie);\n              return pie.arcs.map((arc, i) => {\n                const opacity = 1 / (i + 2);\n                const [centroidX, centroidY] = pie.path.centroid(arc);\n                const d = pie.path(arc) as string | undefined;\n                return (\n                  <g key={`letters-${arc.data.label}-${i}`}>\n                    <path d={d} fill={black} fillOpacity={opacity} />\n                    <text\n                      dy=\".33em\"\n                      fill=\"white\"\n                      fontSize={9}\n                      textAnchor=\"middle\"\n                      x={centroidX}\n                      y={centroidY}\n                    >\n                      {arc.data.letter}\n                    </text>\n                  </g>\n                );\n              });\n            }}\n          </Pie>\n        </Group>\n      </svg>\n    );\n  }\n}\n","import { GradientPinkRed } from \"@vx/gradient\";\nimport { Group } from \"@vx/group\";\nimport { scaleBand } from \"@vx/scale\";\nimport { Polygon } from \"@vx/shape\";\nimport React from \"react\";\n\ninterface IProps {\n  height: number;\n  width: number;\n}\n\ninterface IPolygon {\n  fill: string;\n  rotate: number;\n  sides: number;\n}\n\nconst polygons: IPolygon[] = [\n  {\n    fill: \"rgb(174, 238, 248)\",\n    rotate: 90,\n    sides: 3,\n  },\n  {\n    fill: \"rgb(229, 253, 61)\",\n    rotate: 45,\n    sides: 4,\n  },\n  {\n    fill: \"rgb(229, 130, 255)\",\n    rotate: 0,\n    sides: 6,\n  },\n  {\n    fill: \"url(#polygon-pink)\",\n    rotate: 0,\n    sides: 8,\n  },\n];\n\nconst yScale = scaleBand({\n  domain: polygons.map((p: IPolygon, i: number) => i),\n  padding: 20,\n});\n\nexport const PolygonsDemo = (props: IProps) => {\n  const { height, width } = props;\n  return (\n    <svg width={width} height={height}>\n      <rect width={width} height={height} fill=\"#7f82e3\" rx={14} />\n      <GradientPinkRed id=\"polygon-pink\" />\n      {polygons.map((polygon, i) => (\n        <Group key={`polygon-${i}`} top={yScale(i)} left={width / 2}>\n          <Polygon\n            sides={polygon.sides}\n            size={30}\n            fill={polygon.fill}\n            rotate={polygon.rotate}\n          />\n        </Group>\n      ))}\n    </svg>\n  );\n};\n","import { LinearGradient } from \"@vx/gradient\";\nimport { Group } from \"@vx/group\";\nimport { genStats, StatsDatum } from \"@vx/mock-data\";\nimport { PatternLines } from \"@vx/pattern\";\nimport { Accessor, scaleBand, scaleLinear } from \"@vx/scale\";\nimport { BoxPlot, ViolinPlot } from \"@vx/stats\";\nimport { extent } from \"d3-array\";\n// import { Tooltip } from \"@vx/tooltip\";\nimport React from \"react\";\n\nconst getDigit = (s: string) => {\n  return parseInt(s.slice(s.length - 1, s.length), 10);\n};\n\nconst data = genStats(5);\nconst xAccessor: Accessor<StatsDatum, number> = (d) => getDigit(d.boxPlot.x);\nconst minAccessor: Accessor<StatsDatum, number> = (d) => d.boxPlot.min;\nconst maxAccessor: Accessor<StatsDatum, number> = (d) => d.boxPlot.max;\nconst medianAccessor: Accessor<StatsDatum, number> = (d) => d.boxPlot.median;\nconst firstQuartileAccessor: Accessor<StatsDatum, number> = (d) =>\n  d.boxPlot.firstQuartile;\nconst thirdQuartileAccessor: Accessor<StatsDatum, number> = (d) =>\n  d.boxPlot.thirdQuartile;\nconst outliersAccessor: Accessor<StatsDatum, number[]> = (d) =>\n  d.boxPlot.outliers;\n\ninterface IProps {\n  height: number;\n  width: number;\n}\n\nexport class StatsDemo extends React.Component<IProps> {\n  public constructor(props: IProps) {\n    super(props);\n  }\n\n  public render() {\n    const { height, width } = this.props;\n    if (width < 10) {\n      return null;\n    }\n\n    const xMax = width;\n    const yMax = height - 120;\n\n    const xScale = scaleBand({\n      domain: data.map(xAccessor),\n      padding: 0.4,\n      rangeRound: [0, xMax],\n    });\n\n    console.warn(\"XXX\", data, data.map(xAccessor));\n\n    const cb = (d: StatsDatum, i: number) => {\n      const { min, max } = d.boxPlot;\n      return [min, max];\n    };\n    const values = data.map(cb).flat();\n    const [minYValue, maxYValue] = extent(values) as [number, number];\n\n    const yScale = scaleLinear({\n      domain: [minYValue, maxYValue],\n      rangeRound: [yMax, 0],\n    });\n\n    const boxWidth = xScale.bandwidth();\n    const constrainedWidth = Math.min(40, boxWidth);\n\n    return (\n      <svg width={width} height={height}>\n        <LinearGradient id=\"boxplot\" to=\"#8b6ce7\" from=\"#87f2d4\" />\n        <rect\n          x={0}\n          y={0}\n          width={width}\n          height={height}\n          fill={`url(#boxplot)`}\n          rx={14}\n        />\n        <PatternLines\n          fill=\"rgba(0,0,0,0.3)\"\n          height={3}\n          id=\"hViolinLines\"\n          orientation={[\"horizontal\"]}\n          stroke=\"#ced4da\"\n          strokeWidth={1}\n          width={3}\n        />\n        <Group top={40}>\n          {data.map((d, i) => (\n            <g key={i}>\n              <ViolinPlot\n                data={d.binData}\n                fill=\"url(#hViolinLines)\"\n                left={xScale(xAccessor(d))}\n                stroke=\"#dee2e6\"\n                valueScale={yScale}\n                width={constrainedWidth}\n              />\n              <BoxPlot\n                boxWidth={constrainedWidth * 0.4}\n                data={d.binData}\n                fill=\"#FFFFFF\"\n                fillOpacity={0.3}\n                firstQuartile={firstQuartileAccessor(d)}\n                left={xScale(xAccessor(d)) + 0.3 * constrainedWidth}\n                max={maxAccessor(d)}\n                median={medianAccessor(d)}\n                medianProps={{\n                  style: {\n                    stroke: \"white\",\n                  },\n                }}\n                min={minAccessor(d)}\n                outliers={outliersAccessor(d)}\n                thirdQuartile={thirdQuartileAccessor(d)}\n                stroke=\"#FFFFFF\"\n                strokeWidth={2}\n                valueScale={yScale}\n              />\n            </g>\n          ))}\n        </Group>\n      </svg>\n    );\n  }\n}\n","import { Text } from \"@vx/text\";\nimport React from \"react\";\n\ninterface IProps {\n  height: number;\n  text: string;\n  width: number;\n}\n\nexport const TextDemo = (props: IProps) => {\n  const { height, text, width } = props;\n  return (\n    <svg width={width} height={height}>\n      <Text\n        angle={10}\n        style={{ fill: \"black\", fontSize: \"4.5rem\", stroke: \"white\" }}\n        textAnchor=\"middle\"\n        verticalAnchor=\"middle\"\n        width={width}\n        x={width / 2}\n        y={height / 2}\n      >\n        {text}\n      </Text>\n    </svg>\n  );\n};\n","import { AxisBottom, AxisLeft } from \"@vx/axis\";\nimport { curveBasis } from \"@vx/curve\";\nimport { GridColumns, GridRows } from \"@vx/grid\";\nimport { Group } from \"@vx/group\";\nimport { cityTemperature, CityTemperatureDatum } from \"@vx/mock-data\";\nimport { scaleLinear, scaleTime } from \"@vx/scale\";\nimport { LinePath } from \"@vx/shape\";\nimport { Threshold } from \"@vx/threshold\";\nimport { extent, max, min } from \"d3-array\";\nimport { timeParse } from \"d3-time-format\";\nimport React from \"react\";\n\nimport { IMargin } from \"../../interfaces\";\n\nconst parseDate = timeParse(\"%Y%m%d\");\n\nconst dateAccessor = (d: CityTemperatureDatum) => parseDate(d.date) as Date;\nconst nyAccessor = (d: CityTemperatureDatum) => +d[\"New York\"];\nconst sfAccessor = (d: CityTemperatureDatum) => +d[\"San Francisco\"];\n\nconst xScale = scaleTime({\n  domain: extent(cityTemperature.map(dateAccessor)) as [Date, Date],\n});\n\nconst minima = cityTemperature.map(d => min([nyAccessor(d), sfAccessor(d)]));\nconst maxima = cityTemperature.map(d => max([nyAccessor(d), sfAccessor(d)]));\nconst tempMin = min(minima as [number, number]) as number;\nconst tempMax = max(maxima as [number, number]) as number;\nconst yScale = scaleLinear({\n  domain: [tempMin, tempMax],\n  nice: true,\n});\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n}\n\nexport class ThresholdDemo extends React.Component<IProps> {\n  public render() {\n    const { height, margin, width } = this.props;\n    const xMax = width - margin.left - margin.right;\n    const yMax = height - margin.top - margin.bottom;\n\n    xScale.range([0, xMax]);\n    yScale.range([yMax, 0]);\n\n    return (\n      <div>\n        <svg width={width} height={height}>\n          <rect\n            fill=\"#f3f3f3\"\n            height={height}\n            rx={14}\n            width={width}\n            x={0}\n            y={0}\n          />\n          <Group left={margin.left} top={margin.top}>\n            <GridRows\n              height={yMax}\n              scale={yScale}\n              stroke=\"#e0e0e0\"\n              width={xMax}\n            />\n            <GridColumns\n              height={yMax}\n              scale={xScale}\n              stroke=\"#e0e0e0\"\n              width={xMax}\n            />\n            <line stroke=\"#e0e0e0\" x1={xMax} x2={xMax} y1={0} y2={yMax} />\n            <AxisBottom\n              numTicks={width > 520 ? 10 : 5}\n              scale={xScale}\n              top={yMax}\n            />\n            <AxisLeft scale={yScale} />\n            <text x=\"-70\" y=\"15\" transform=\"rotate(-90)\" fontSize={10}>\n              Temperature (°F)\n            </text>\n            <Threshold\n              aboveAreaProps={{\n                fill: \"green\",\n                fillOpacity: 0.4,\n              }}\n              belowAreaProps={{\n                fill: \"red\",\n                fillOpacity: 0.4,\n              }}\n              clipAboveTo={0}\n              clipBelowTo={yMax}\n              curve={curveBasis}\n              data={cityTemperature}\n              x={(d: CityTemperatureDatum) => xScale(dateAccessor(d))}\n              y0={(d: CityTemperatureDatum) => yScale(nyAccessor(d))}\n              y1={(d: CityTemperatureDatum) => yScale(sfAccessor(d))}\n            />\n            <LinePath\n              curve={curveBasis}\n              data={cityTemperature}\n              stroke=\"#000\"\n              strokeDasharray=\"1,2\"\n              strokeOpacity={0.8}\n              strokeWidth={1.5}\n              x={(d: CityTemperatureDatum) => xScale(dateAccessor(d))}\n              y={(d: CityTemperatureDatum) => yScale(sfAccessor(d))}\n            />\n            <LinePath\n              curve={curveBasis}\n              data={cityTemperature}\n              stroke=\"#000\"\n              strokeWidth={1.5}\n              x={(d: CityTemperatureDatum) => xScale(dateAccessor(d))}\n              y={(d: CityTemperatureDatum) => yScale(nyAccessor(d))}\n            />\n          </Group>\n        </svg>\n      </div>\n    );\n  }\n}\n","import { Group } from \"@vx/group\";\nimport { Treemap } from \"@vx/hierarchy\";\nimport { shakespeare } from \"@vx/mock-data\";\nimport { scaleLinear } from \"@vx/scale\";\nimport {\n  hierarchy,\n  HierarchyNode,\n  stratify,\n  treemapSquarify,\n} from \"d3-hierarchy\";\nimport React from \"react\";\n\nimport { IMargin } from \"../../interfaces\";\n\nconst blue = \"#0373d9\";\nconst green = \"#00ff70\";\nconst bg = \"#3436b8\";\n\nconst colorScale = scaleLinear({\n  domain: [0, Math.max(...shakespeare.map((d) => d.size || 0))],\n  range: [blue, green],\n});\n\nconst data = stratify()\n  .id((d: any) => d.id)\n  .parentId((d: any) => d.parent)(shakespeare)\n  .sum((d: any) => d.size || 0);\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n}\n\nexport class TreemapDemo extends React.Component<IProps> {\n  public constructor(props: IProps) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.renderNode = this.renderNode.bind(this);\n  }\n\n  public render() {\n    const { height, margin, width } = this.props;\n    const yMax = height - margin.top - margin.bottom;\n    const root = hierarchy(data).sort((a: any, b: any) => b.value - a.value);\n\n    return (\n      <svg width={width} height={height}>\n        <rect width={width} height={height} rx={14} fill={bg} />\n        <Treemap\n          root={root}\n          size={[width, yMax]}\n          tile={treemapSquarify}\n          round={true}\n        >\n          {(treemap: HierarchyNode<any>) => {\n            // console.warn(\"TREEMAP LAYOUT\", treemap);\n            const nodes = treemap.descendants().reverse();\n            return <Group top={margin.top}>{nodes.map(this.renderNode)}</Group>;\n          }}\n        </Treemap>\n      </svg>\n    );\n  }\n\n  private handleClick(event: React.MouseEvent) {\n    const dataset = (event.target as any).dataset;\n    const { depth, key, value } = dataset;\n    alert(`Clicked: ${JSON.stringify({ depth, key, value })}`);\n  }\n\n  private renderNode(node: any, i: number) {\n    // console.warn(\"NODE\", node);\n    const width = node.x1 - node.x0;\n    const height = node.y1 - node.y0;\n    const key = `treemap-node-${i}`;\n    return (\n      <Group key={key} top={node.y0} left={node.x0}>\n        {node.depth === 1 && (\n          <rect\n            data-depth={node.depth}\n            data-key={key}\n            data-value={node.value}\n            fill={\"transparent\"}\n            height={height}\n            onClick={this.handleClick}\n            stroke={bg}\n            strokeWidth={4}\n            width={width}\n          />\n        )}\n        {node.depth > 2 && (\n          <rect\n            data-depth={node.depth}\n            data-key={key}\n            data-value={node.value}\n            fill={colorScale(node.value)}\n            height={height}\n            onClick={this.handleClick}\n            stroke={bg}\n            width={width}\n          />\n        )}\n      </Group>\n    );\n  }\n}\n","import { LinearGradient } from \"@vx/gradient\";\nimport { Group } from \"@vx/group\";\nimport { IHierarchyDefaultNodeProps, Tree } from \"@vx/hierarchy\";\nimport { LinkHorizontal } from \"@vx/shape\";\nimport { hierarchy, HierarchyNode } from \"d3-hierarchy\";\nimport React from \"react\";\n\nimport { IMargin } from \"../../interfaces\";\n\nconst peach = \"#fd9b93\";\nconst pink = \"#fe6e9e\";\nconst blue = \"#03c0dc\";\nconst green = \"#26deb0\";\nconst plum = \"#71248e\";\nconst lightpurple = \"#374469\";\nconst white = \"#ffffff\";\nconst bg = \"#272b4d\";\n\ninterface ITreeNode {\n  children?: ITreeNode[];\n  name: string;\n}\n\nconst treeNode: ITreeNode = {\n  children: [\n    {\n      children: [\n        { name: \"A1\" },\n        { name: \"A2\" },\n        { name: \"A3\" },\n        {\n          children: [\n            {\n              name: \"C1\",\n            },\n            {\n              children: [\n                {\n                  name: \"D1\",\n                },\n                {\n                  name: \"D2\",\n                },\n                {\n                  name: \"D3\",\n                },\n              ],\n              name: \"D\",\n            },\n          ],\n          name: \"C\",\n        },\n      ],\n      name: \"A\",\n    },\n    { name: \"Z\" },\n    {\n      children: [{ name: \"B1\" }, { name: \"B2\" }, { name: \"B3\" }],\n      name: \"B\",\n    },\n  ],\n  name: \"T\",\n};\n\nfunction Node(props: IHierarchyDefaultNodeProps) {\n  //   console.warn(\"Node props\", props);\n  const { node } = props;\n  const width = 40;\n  const height = 20;\n  const centerX = -width / 2;\n  const centerY = -height / 2;\n  const isRoot = node.depth === 0;\n  const isParent = !!node.children;\n\n  if (isRoot) {\n    return <RootNode node={node} />;\n  }\n  if (isParent) {\n    return <ParentNode node={node} />;\n  }\n\n  return (\n    <Group top={node.x} left={node.y}>\n      <rect\n        height={height}\n        width={width}\n        y={centerY}\n        x={centerX}\n        fill={bg}\n        stroke={green}\n        strokeWidth={1}\n        strokeDasharray={\"2,2\"}\n        strokeOpacity={0.6}\n        rx={10}\n        onClick={(event: React.MouseEvent) => {\n          alert(`clicked: ${JSON.stringify(node.data.name)}, ${event}`);\n        }}\n      />\n      <text\n        dy={\".33em\"}\n        fontSize={9}\n        fontFamily=\"Arial\"\n        textAnchor={\"middle\"}\n        fill={green}\n        style={{ pointerEvents: \"none\" }}\n      >\n        {node.data.name}\n      </text>\n    </Group>\n  );\n}\n\nfunction RootNode(props: IHierarchyDefaultNodeProps) {\n  console.warn(\"RootNode props\", props);\n  const { node } = props;\n  return (\n    <Group top={node.x} left={node.y}>\n      <circle r={12} fill=\"url('#lg')\" />\n      <text\n        dy={\".33em\"}\n        fontSize={9}\n        fontFamily=\"Arial\"\n        textAnchor={\"middle\"}\n        style={{ pointerEvents: \"none\" }}\n        fill={plum}\n      >\n        {node.data.name}\n      </text>\n    </Group>\n  );\n}\n\nfunction ParentNode(props: IHierarchyDefaultNodeProps) {\n  console.warn(\"ParentNode props\", props);\n  const { node } = props;\n  const width = 40;\n  const height = 20;\n  const centerX = -width / 2;\n  const centerY = -height / 2;\n\n  return (\n    <Group top={node.x} left={node.y}>\n      <rect\n        height={height}\n        width={width}\n        y={centerY}\n        x={centerX}\n        fill={bg}\n        stroke={blue}\n        strokeWidth={1}\n        onClick={(event: React.MouseEvent) => {\n          alert(`clicked: ${JSON.stringify(node.data.name)}`);\n          console.warn(\"clicked parent node\", event);\n        }}\n      />\n      <text\n        dy={\".33em\"}\n        fontSize={9}\n        fontFamily=\"Arial\"\n        textAnchor={\"middle\"}\n        style={{ pointerEvents: \"none\" }}\n        fill={white}\n      >\n        {node.data.name}\n      </text>\n    </Group>\n  );\n}\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n}\n\nexport class TreesDemo extends React.Component<IProps> {\n  public render() {\n    const { height, width, margin } = this.props;\n    const data = hierarchy(treeNode);\n    // console.warn(\"data\", data);\n    const yMax = height - margin.top - margin.bottom;\n    const xMax = width - margin.left - margin.right;\n\n    return (\n      <svg width={width} height={height}>\n        <LinearGradient id=\"lg\" from={peach} to={pink} />\n        <rect width={width} height={height} rx={14} fill={bg} />\n        <Tree root={data} size={[yMax, xMax]}>\n          {(tree: HierarchyNode<ITreeNode>) => {\n            // console.warn(\"tree\", tree.links());\n            return (\n              <Group top={margin.top} left={margin.left}>\n                {tree.links().map(renderLink)}\n                {tree.descendants().map(renderDescendant)}\n              </Group>\n            );\n          }}\n        </Tree>\n      </svg>\n    );\n  }\n}\n\nfunction renderLink(link: any, i: number) {\n  console.warn(\"link\", link);\n  return (\n    <LinkHorizontal\n      fill=\"none\"\n      data={link}\n      key={`link-${i}`}\n      stroke={lightpurple}\n      strokeWidth=\"1\"\n    />\n  );\n}\n\nfunction renderDescendant(node: any, i: number) {\n  //   console.warn(\"node\", node);\n  return <Node key={`node-${i}`} node={node} />;\n}\n","import { getCoordsFromEvent } from \"@vx/brush\";\nimport { RectClipPath } from \"@vx/clip-path\";\nimport { GradientOrangeRed, GradientPinkRed } from \"@vx/gradient\";\nimport { Group } from \"@vx/group\";\nimport { Accessor, scaleLinear, ScaleLinear } from \"@vx/scale\";\nimport {\n  Polygon,\n  Site,\n  voronoi,\n  VoronoiDiagram,\n  VoronoiPolygon,\n} from \"@vx/voronoi\";\nimport React from \"react\";\n\nimport { IMargin } from \"../../interfaces\";\n\nconst neighborRadius = 75;\n\ninterface IDatum {\n  id: string;\n  x: number;\n  y: number;\n}\n\nconst xAccessor = (d: IDatum) => d.x;\nconst yAccessor = (d: IDatum) => d.y;\n\nconst extent = (arr: IDatum[], accessor: Accessor<IDatum, number>) => {\n  return [Math.min(...arr.map(accessor)), Math.max(...arr.map(accessor))];\n};\n\nconst data: IDatum[] = Array(200)\n  .fill(null)\n  .map(() => {\n    const datum: IDatum = {\n      id: Math.random()\n        .toString(36)\n        .slice(2),\n      x: Math.random(),\n      y: Math.random(),\n    };\n    return datum;\n  });\n\nconst xDomain = extent(data, xAccessor) as [number, number];\nconst yDomain = extent(data, yAccessor) as [number, number];\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n}\n\ninterface IState {\n  innerHeight: number;\n  innerWidth: number;\n  neighbors: Map<string, boolean>;\n  selected: Site | null;\n  // selectedNeighbors?: null;\n  voronoiDiagram: VoronoiDiagram;\n  xScale: ScaleLinear<number, number>;\n  yScale: ScaleLinear<number, number>;\n}\n\nexport class VoronoiDemo extends React.PureComponent<IProps, IState> {\n  public static getUpdatedState(props: IProps) {\n    const { width, height, margin } = props;\n    const innerWidth = width - margin.left - margin.right;\n    const innerHeight = height - margin.top - margin.bottom;\n\n    const xScale = scaleLinear({\n      domain: xDomain,\n      range: [0, innerWidth],\n    });\n\n    const yScale = scaleLinear({\n      domain: yDomain,\n      range: [innerHeight, 0],\n    });\n\n    const voronoiOptions = {\n      height: innerHeight,\n      width: innerWidth,\n      x: (d: IDatum) => xScale(d.x),\n      y: (d: IDatum) => yScale(d.y),\n    };\n    const voronoiDiagram = voronoi(voronoiOptions)(data);\n\n    return {\n      innerHeight,\n      innerWidth,\n      neighbors: new Map(),\n      selected: null,\n      // selectedNeighbors: null,\n      voronoiDiagram,\n      xScale,\n      yScale,\n    };\n  }\n  private svg: any;\n\n  constructor(props: IProps) {\n    super(props);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.state = VoronoiDemo.getUpdatedState(props);\n  }\n\n  public componentWillReceiveProps(nextProps: IProps) {\n    if (\n      nextProps.width !== this.props.width ||\n      nextProps.height !== this.props.height\n    ) {\n      this.setState(VoronoiDemo.getUpdatedState(nextProps));\n    }\n  }\n\n  public render() {\n    const { width, height, margin } = this.props;\n\n    const {\n      voronoiDiagram,\n      innerWidth,\n      innerHeight,\n      xScale,\n      yScale,\n      selected,\n      neighbors,\n    } = this.state;\n\n    const polygons = voronoiDiagram.polygons();\n\n    return (\n      <svg\n        width={width}\n        height={height}\n        ref={(ref: any) => {\n          this.svg = ref;\n        }}\n      >\n        <GradientOrangeRed id=\"voronoi_orange_red\" />\n        <GradientPinkRed id=\"voronoi_pink_red\" />\n        <rect\n          fill=\"url(#voronoi_pink_red)\"\n          height={innerHeight}\n          rx={14}\n          width={innerWidth}\n        />\n        <RectClipPath\n          id=\"voronoi_clip\"\n          height={innerHeight}\n          rx={14}\n          width={innerWidth}\n        />\n        <Group\n          clipPath=\"url(#voronoi_clip)\"\n          left={margin.left}\n          onMouseLeave={this.handleMouseLeave}\n          onMouseMove={this.handleMouseMove}\n          top={margin.top}\n        >\n          {polygons.map((polygon: Polygon) => {\n            const hasNeighbors = neighbors.get(polygon.data.id);\n            return (\n              <VoronoiPolygon\n                fill={\n                  selected &&\n                  (polygon.data.id === selected.data.id || hasNeighbors)\n                    ? \"url(#voronoi_orange_red)\"\n                    : \"url(#voronoi_pink_red)\"\n                }\n                fillOpacity={neighbors && hasNeighbors ? 0.4 : 1}\n                key={`polygon-${polygon.data.id}`}\n                polygon={polygon}\n                stroke=\"#ffffff\"\n                strokeWidth={1}\n              />\n            );\n          })}\n          {data.map((d: IDatum) => (\n            <circle\n              cx={xScale(d.x)}\n              cy={yScale(d.y)}\n              fill=\"#ffffff\"\n              fillOpacity={0.5}\n              key={`circle-${d.id}`}\n              r={2}\n            />\n          ))}\n        </Group>\n      </svg>\n    );\n  }\n\n  private handleMouseMove(event: React.MouseEvent) {\n    const { voronoiDiagram } = this.state;\n    const { x, y } = getCoordsFromEvent(this.svg, event);\n    const closest = voronoiDiagram.find(x, y, neighborRadius);\n\n    if (closest) {\n      const neighbors = new Map();\n      const cell = voronoiDiagram.cells[closest.index];\n      cell.halfedges.forEach((index: number) => {\n        const edge = voronoiDiagram.edges[index];\n        const { left, right } = edge;\n        if (left && left !== closest) {\n          neighbors.set(left.data.id, true);\n        } else if (right && right !== closest) {\n          neighbors.set(right.data.id, true);\n        }\n      });\n      this.setState({ selected: closest, neighbors });\n    }\n  }\n\n  private handleMouseLeave(event: React.MouseEvent) {\n    this.setState({ selected: null, neighbors: new Map() });\n  }\n}\n","import { RectClipPath } from \"@vx/clip-path\";\nimport { localPoint } from \"@vx/event\";\nimport { genPhyllotaxis } from \"@vx/mock-data\";\nimport { scaleLinear } from \"@vx/scale\";\nimport { Zoom, ZoomState } from \"@vx/zoom\";\nimport { interpolateRainbow } from \"d3-scale-chromatic\";\nimport React from \"react\";\n\nimport { IMargin } from \"../../interfaces\";\n\nconst bg = \"#0a0a0a\";\nconst points = [...new Array(1000)];\n\nconst colorScale = scaleLinear({ range: [0, 1], domain: [0, 1000] });\nconst sizeScale = scaleLinear({ domain: [0, 600], range: [0.5, 8] });\n\nconst initialTransform = {\n  scaleX: 1.27,\n  scaleY: 1.27,\n  skewX: 0,\n  skewY: 0,\n  translateX: -211.62,\n  translateY: 162.59,\n};\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n}\n\ninterface IState {\n  showMiniMap: boolean;\n}\n\nexport class ZoomDemo extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = { showMiniMap: true };\n    this.toggleMiniMap = this.toggleMiniMap.bind(this);\n  }\n\n  public render() {\n    const { width, height } = this.props;\n    const { showMiniMap } = this.state;\n\n    const gen = genPhyllotaxis({ radius: 10, width, height });\n    const phyllotaxis = points.map((d: any, i) => gen(i));\n\n    return (\n      <Zoom\n        height={height}\n        scaleXMax={4}\n        scaleXMin={1 / 2}\n        scaleYMax={4}\n        scaleYMin={1 / 2}\n        transformMatrix={initialTransform}\n        width={width}\n      >\n        {(zoom: ZoomState) => {\n          // console.warn(\"ZOOM\", zoom);\n          return (\n            <div style={{ position: \"relative\" }}>\n              <svg\n                width={width}\n                height={height}\n                style={{ cursor: zoom.isDragging ? \"grabbing\" : \"grab\" }}\n              >\n                <RectClipPath id=\"zoom-clip\" width={width} height={height} />\n                <rect width={width} height={height} rx={14} fill={bg} />\n                <g transform={zoom.toString()}>\n                  {phyllotaxis.map((point, i) => {\n                    return (\n                      <React.Fragment key={`dot-${i}`}>\n                        <circle\n                          cx={point.x}\n                          cy={point.y}\n                          fill={interpolateRainbow(colorScale(i))}\n                          r={i > 500 ? sizeScale(1000 - i) : sizeScale(i)}\n                        />\n                      </React.Fragment>\n                    );\n                  })}\n                </g>\n                <rect\n                  fill=\"transparent\"\n                  height={height}\n                  onWheel={zoom.handleWheel}\n                  onDoubleClick={(event: React.MouseEvent) => {\n                    const point = localPoint(event);\n                    zoom.scale({ scaleX: 1.1, scaleY: 1.1, point });\n                  }}\n                  onMouseDown={zoom.dragStart}\n                  onMouseLeave={() => {\n                    if (!zoom.isDragging) {\n                      return;\n                    }\n                    zoom.dragEnd();\n                  }}\n                  onMouseMove={zoom.dragMove}\n                  onMouseUp={zoom.dragEnd}\n                  rx={14}\n                  width={width}\n                />\n                {showMiniMap && (\n                  <g\n                    clipPath=\"url(#zoom-clip)\"\n                    transform={`\n                      scale(0.25)\n                      translate(${width * 4 - width - 60}, ${height * 4 -\n                      height -\n                      60})\n                    `}\n                  >\n                    <rect width={width} height={height} fill=\"#1a1a1a\" />\n                    {phyllotaxis.map((d, i) => {\n                      const { x, y } = d;\n                      return (\n                        <React.Fragment key={`dot-sm-${i}`}>\n                          <circle\n                            cx={x}\n                            cy={y}\n                            r={i > 500 ? sizeScale(1000 - i) : sizeScale(i)}\n                            fill={interpolateRainbow(colorScale(i))}\n                          />\n                        </React.Fragment>\n                      );\n                    })}\n                    <rect\n                      width={width}\n                      height={height}\n                      fill=\"white\"\n                      fillOpacity={0.2}\n                      stroke=\"white\"\n                      strokeWidth={4}\n                      transform={zoom.toStringInvert()}\n                    />\n                  </g>\n                )}\n              </svg>\n              <div className=\"controls\">\n                <button\n                  className=\"btn btn-zoom\"\n                  onClick={() => zoom.scale({ scaleX: 1.2, scaleY: 1.2 })}\n                >\n                  +\n                </button>\n                <button\n                  className=\"btn btn-zoom btn-bottom\"\n                  onClick={() => zoom.scale({ scaleX: 0.8, scaleY: 0.8 })}\n                >\n                  -\n                </button>\n                <button className=\"btn btn-lg\" onClick={zoom.center}>\n                  Center\n                </button>\n                <button className=\"btn btn-lg\" onClick={zoom.reset}>\n                  Reset\n                </button>\n                <button className=\"btn btn-lg\" onClick={zoom.clear}>\n                  Clear\n                </button>\n              </div>\n              <div className=\"mini-map\">\n                <button className=\"btn btn-lg\" onClick={this.toggleMiniMap}>\n                  {showMiniMap ? \"Hide\" : \"Show\"} Mini Map\n                </button>\n              </div>\n            </div>\n          );\n        }}\n      </Zoom>\n    );\n  }\n\n  private toggleMiniMap() {\n    this.setState(prevState => {\n      return {\n        showMiniMap: !prevState.showMiniMap,\n      };\n    });\n  }\n}\n","import { appleStock } from \"@vx/mock-data\";\nimport { ParentProps, ParentSize } from \"@vx/responsive\";\nimport React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nimport { AreaDemo, AreaDemoWithTooltip } from \"../AreaDemo\";\nimport { AxisDemoResponsive } from \"../AxisDemo\";\nimport { BarGroupDemo } from \"../BarGroupDemo\";\nimport { BarGroupHorizontalDemo } from \"../BarGroupHorizontalDemo\";\nimport { BarStackDemo } from \"../BarStackDemo\";\nimport { BarStackHorizontalDemo } from \"../BarStackHorizontalDemo\";\nimport { ChordDemo } from \"../ChordDemo\";\nimport { CurveDemo } from \"../CurveDemo\";\nimport { DendrogramsDemo } from \"../DendrogramsDemo\";\nimport { DotsDemo, DotsDemoWithTooltip } from \"../DotsDemo\";\nimport { DragDemo } from \"../DragDemo\";\nimport { GeoDemo } from \"../GeoDemo\";\nimport { GlyphDemo } from \"../GlyphDemo\";\nimport { GradientsDemo } from \"../GradientsDemo\";\nimport { HeatmapsDemo } from \"../HeatmapsDemo\";\nimport { LegendDemos } from \"../LegendDemo\";\nimport { LineRadialDemo } from \"../LineRadialDemo\";\nimport { LinesDemoResponsive } from \"../LinesDemo\";\nimport { LinkTypesDemo } from \"../LinkTypesDemo\";\nimport { NetworkDemo } from \"../NetworkDemo\";\nimport { PackDemo } from \"../PackDemo\";\nimport { PatternsDemo } from \"../PatternsDemo\";\nimport { PieDemo } from \"../PieDemo\";\nimport { PolygonsDemo } from \"../PolygonsDemo\";\nimport { RadarDemo } from \"../RadarDemo\";\nimport { StatsDemo } from \"../StatsDemo\";\nimport { TextDemo } from \"../TextDemo\";\nimport { ThresholdDemo } from \"../ThresholdDemo\";\nimport { TreemapDemo } from \"../TreemapDemo\";\nimport { TreesDemo } from \"../TreesDemo\";\nimport { VoronoiDemo } from \"../VoronoiDemo\";\nimport { ZoomDemo } from \"../ZoomDemo\";\nimport logo from \"./logo.svg\";\n\nconst Div = styled.div`\n  text-align: center;\n`;\n\nconst rotate = () => keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst RotatingLogo = styled.img`\n  animation: ${rotate()} infinite 20s linear;\n  height: 40vmin;\n`;\n\nconst Header = styled.header`\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n`;\n\n/*\n  CSS Grid auto-fit for responsiveness: https://gridbyexample.com/examples/example37/\n  Common CSS breakpoints:\n  https://stackoverflow.com/questions/6370690/media-queries-how-to-target-desktop-tablet-and-mobile#7354648\n*/\ninterface IGridProps {\n  gridGap: number;\n}\nconst Grid = styled.div`\n  background-color: #282c34;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(600px, 1fr));\n  grid-gap: ${(props: IGridProps) => `${props.gridGap}` + \"rem\"};\n`;\n\ninterface IMargin {\n  bottom: number;\n  left: number;\n  right: number;\n  top: number;\n}\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n}\n\nconst stock = appleStock.slice(800);\n\nclass App extends React.Component<IProps> {\n  public static defaultProps: Partial<IProps> = {\n    height: 400,\n    margin: {\n      bottom: 30,\n      left: 50,\n      right: 10,\n      top: 10,\n    },\n  };\n  public render() {\n    const { height, margin } = this.props;\n    return (\n      <Div>\n        <Header>\n          <h1>vx-kitchensink</h1>\n          <RotatingLogo src={logo} alt=\"logo\" />\n        </Header>\n        <Grid gridGap={2}>\n          <AxisDemoResponsive margin={margin} />\n          <LinesDemoResponsive margin={margin} />\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <GradientsDemo height={height} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <PatternsDemo height={height} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <PolygonsDemo height={height} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <HeatmapsDemo\n                  height={height}\n                  margin={margin}\n                  separation={20}\n                  width={width}\n                />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <AreaDemo\n                  height={height}\n                  ruler={{ left: width / 2, top: height / 2 }}\n                  margin={margin}\n                  // onMouseMove={(event: Event) => console.warn(\"Move\", event)}\n                  width={width}\n                />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <AreaDemoWithTooltip\n                  height={height}\n                  margin={margin}\n                  width={width}\n                />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <TextDemo\n                  height={height}\n                  text={\"This is a test\"}\n                  width={width}\n                />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <LegendDemos height={height} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <GlyphDemo height={height} margin={margin} width={width} />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <GeoDemo height={height} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <ThresholdDemo height={height} margin={margin} width={width} />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <DragDemo height={height} margin={margin} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <VoronoiDemo height={height} margin={margin} width={width} />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <CurveDemo height={height} margin={margin} width={width} />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <ZoomDemo height={height} margin={margin} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <LineRadialDemo height={height} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <PieDemo height={height} margin={margin} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <BarGroupDemo height={height} margin={margin} width={width} />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <BarGroupHorizontalDemo\n                  height={height}\n                  margin={margin}\n                  width={width}\n                />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <BarStackDemo height={height} margin={margin} width={width} />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <BarStackHorizontalDemo\n                  height={height}\n                  margin={margin}\n                  width={width}\n                />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <TreemapDemo height={height} margin={margin} width={width} />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <TreesDemo height={height} margin={margin} width={width} />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <DendrogramsDemo\n                  height={height}\n                  margin={margin}\n                  width={width}\n                />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <PackDemo height={height} margin={margin} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <LinkTypesDemo height={height} margin={margin} width={width} />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <DotsDemo height={height} margin={margin} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <DotsDemoWithTooltip\n                  height={height}\n                  margin={margin}\n                  width={width}\n                />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <RadarDemo height={height} margin={margin} width={width} />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <ChordDemo height={height} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <NetworkDemo height={height} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <StatsDemo height={height} width={width} />;\n            }}\n          </ParentSize>\n        </Grid>\n      </Div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}