{"version":3,"sources":["components/App/logo.svg","components/AreaDemo/index.tsx","components/AxisDemo/index.tsx","components/GlyphDemo/index.tsx","components/GradientsDemo/index.tsx","components/HeatmapsDemo/index.tsx","components/LegendDemo/index.tsx","components/LinesDemo/index.tsx","components/PatternsDemo/index.tsx","components/PolygonsDemo/index.tsx","components/TextDemo/index.tsx","components/App/index.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","stock","appleStock","slice","formatDate","timeFormat","min","arr","fn","Math","apply","Object","toConsumableArray","map","max","extent","xStock","d","Date","date","yStock","close","bisectDate","bisector","left","AreaDemo","_this$props","this","props","width","height","margin","ruler","xMax","right","yMax","top","bottom","xScale","scaleTime","domain","range","yScale","scaleLinear","nice","react_default","a","createElement","x","y","fill","rx","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","vx_grid_es","lineStyle","pointerEvents","scale","strokeDasharray","stroke","vx_shape_es","curve","curveMonotoneX","data","strokeWidth","onMouseLeave","onMouseMove","onTouchMove","onTouchStart","from","to","style","cx","cy","r","fillOpacity","strokeOpacity","React","Component","AreaDemoWithTooltip","withTooltip","showTooltip","tooltipData","tooltipLeft","tooltipTop","AreaDemo_AreaDemo","assign","event","options","xAccessor","localPoint","x0","invert","index","d0","d1","handleTooltip","vx_tooltip_es","backgroundColor","color","concat","transform","genDateValue","value","numTicksForHeight","numTicksForWidth","AxisDemo","scaleTimeOptions","linearScaleOptions","vx_gradient_es","vertical","fromOpacity","toOpacity","numTicksRows","numTicksColumns","vx_group_es","y0","curveBasis","vx_axis_es","hideZero","numTicks","label","labelProps","fontFamily","fontSize","textAnchor","tickStroke","tickLabelProps","dx","dy","tickComponent","_ref","formattedValue","tickProps","objectWithoutProperties","axis","axisCenter","axisToPoint","axisFromPoint","className","ticks","tick","i","tickX","tickY","tickLength","key","AxisDemoResponsive","withParentSize","parentWidth","AxisDemo_AxisDemo","dateAccessor","valueAccessor","scaleLinearOptions","GlyphDemo","vx_glyph_es","GradientsDemo","h","w","genBins","dataBins","arguments","length","undefined","bins","count","colorMax","bucketSizeMax","circleColorScale","rectColorScale","opacityScale","HeatmapsDemo","separation","size","binWidth","radius","values","vx_heatmap_es","colorScale","gap","heatmap","heatmapColumn","cell","row","column","opacity","onClick","alert","JSON","stringify","objectSpread","bin","binHeight","oneDecimalFormat","format","sizeScale","sizeColorScale","quantileScale","scaleQuantize","linearScale","thresholdScale","scaleThreshold","ordinalColorScale","scaleOrdinal","ordinalColor2Scale","shapeScale","LegendDemos","LegendDemo","title","vx_legend_es","labels","datum","text","align","labelFormat","reverse","toUpperCase","display","flexDirection","shape","shapeProps","isValidElement","cloneElement","children","series","Array","reduce","rec","LinesDemo","_ref2","slicedToArray","rangeRound","dd","LinesDemoResponsive","LinesDemo_LinesDemo","PatternsDemo","pWidth","pHeight","vx_pattern_es","orientation","complement","polygons","rotate","sides","scaleBand","padding","PolygonsDemo","polygon","TextDemo","vx_text_es","angle","verticalAnchor","Div","styled","div","_templateObject","RotatingLogo","img","_templateObject3","keyframes","_templateObject2","Header","header","_templateObject4","Grid","_templateObject5","gridGap","App","src","logo","alt","vx_responsive_es","components_GradientsDemo","components_PatternsDemo","components_PolygonsDemo","components_HeatmapsDemo","console","warn","components_TextDemo","LegendDemo_LegendDemos","GlyphDemo_GlyphDemo","defaultProps","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.523bfb48.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { curveMonotoneX } from \"@vx/curve\";\nimport { localPoint } from \"@vx/event\";\nimport { GridColumns, GridRows } from \"@vx/grid\";\nimport { appleStock, AppleStockDatum } from \"@vx/mock-data\";\nimport { scaleLinear, scaleTime } from \"@vx/scale\";\nimport { AreaClosed, Bar, Line } from \"@vx/shape\";\nimport { Tooltip, withTooltip, WithTooltipProps } from \"@vx/tooltip\";\nimport { bisector } from \"d3-array\";\nimport { timeFormat } from \"d3-time-format\";\nimport React from \"react\";\n\nimport { IMargin } from \"../../interfaces\";\n\nconst stock = appleStock.slice(800);\nconst formatDate = timeFormat(\"%b %d, '%y\");\n\nconst min = (arr: any, fn: any) => Math.min(...arr.map(fn));\nconst max = (arr: any, fn: any) => Math.max(...arr.map(fn));\nconst extent = (arr: any, fn: any) => [min(arr, fn), max(arr, fn)];\nconst xStock = (d: AppleStockDatum) => new Date(d.date);\nconst yStock = (d: AppleStockDatum) => d.close;\nconst bisectDate = bisector((d: AppleStockDatum) => new Date(d.date)).left;\n\ninterface IRuler {\n  left: number;\n  top: number;\n}\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  onMouseLeave?: (event: MouseEvent) => void;\n  onMouseMove?: (event: MouseEvent) => void;\n  onTouchMove?: EventListener;\n  onTouchStart?: EventListener;\n  ruler?: IRuler;\n  width: number;\n}\n\nclass AreaDemo extends React.Component<IProps> {\n  public render() {\n    const { width, height, margin, ruler } = this.props;\n    if (width < 10) {\n      return null;\n    }\n\n    const xMax = width - margin.left - margin.right;\n    const yMax = height - margin.top - margin.bottom;\n\n    const xScale = scaleTime({\n      domain: extent(stock, xStock),\n      range: [0, xMax],\n    });\n    const yScale = scaleLinear({\n      domain: [0, max(stock, yStock) + yMax / 3],\n      nice: true,\n      range: [yMax, 0],\n    });\n\n    return (\n      <svg width={width} height={height}>\n        <rect\n          x={0}\n          y={0}\n          width={width}\n          height={height}\n          fill=\"#32deaa\"\n          rx={14}\n        />\n        <defs>\n          <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n            <stop offset=\"0%\" stopColor=\"#FFFFFF\" stopOpacity={1} />\n            <stop offset=\"100%\" stopColor=\"#FFFFFF\" stopOpacity={0.2} />\n          </linearGradient>\n        </defs>\n        <GridRows\n          lineStyle={{ pointerEvents: \"none\" }}\n          scale={yScale}\n          width={xMax}\n          strokeDasharray=\"2,2\"\n          stroke=\"rgba(255,255,255,0.3)\"\n        />\n        <GridColumns\n          lineStyle={{ pointerEvents: \"none\" }}\n          scale={xScale}\n          height={yMax}\n          strokeDasharray=\"2,2\"\n          stroke=\"rgba(255,255,255,0.3)\"\n        />\n        <AreaClosed\n          curve={curveMonotoneX}\n          data={stock}\n          fill={\"url(#gradient)\"}\n          stroke={\"url(#gradient)\"}\n          strokeWidth={1}\n          x={(d: AppleStockDatum) => xScale(xStock(d))}\n          y={(d: AppleStockDatum) => yScale(yStock(d))}\n          yScale={yScale}\n        />\n        <Bar\n          x={0}\n          y={0}\n          width={width}\n          height={height}\n          fill=\"transparent\"\n          rx={14}\n          data={stock}\n          onMouseLeave={this.props.onMouseLeave}\n          onMouseMove={this.props.onMouseMove}\n          onTouchMove={this.props.onTouchMove}\n          onTouchStart={this.props.onTouchStart}\n        />\n        {ruler && (\n          <g>\n            <Line\n              from={{ x: ruler.left, y: 0 }}\n              to={{ x: ruler.left, y: yMax }}\n              stroke=\"rgba(92, 119, 235, 1.000)\"\n              strokeWidth={2}\n              style={{ pointerEvents: \"none\" }}\n              strokeDasharray=\"2,2\"\n            />\n            <circle\n              cx={ruler.left}\n              cy={ruler.top + 1}\n              r={4}\n              fill=\"black\"\n              fillOpacity={0.1}\n              stroke=\"black\"\n              strokeOpacity={0.1}\n              strokeWidth={2}\n              style={{ pointerEvents: \"none\" }}\n            />\n            <circle\n              cx={ruler.left}\n              cy={ruler.top}\n              r={4}\n              fill=\"rgba(92, 119, 235, 1.000)\"\n              stroke=\"white\"\n              strokeWidth={2}\n              style={{ pointerEvents: \"none\" }}\n            />\n          </g>\n        )}\n      </svg>\n    );\n  }\n}\n\ntype IAreaDemoWithTooltipProps = IProps & WithTooltipProps;\n\nfunction handleTooltip(options: any) {\n  const { data, event, xAccessor, xScale, yScale, showTooltip } = options;\n  const { x } = localPoint(event);\n  const x0 = xScale.invert(x);\n  const index = bisectDate(data, x0, 1);\n  const d0 = data[index - 1];\n  const d1 = data[index];\n  let d = d0;\n  if (d1 && d1.date) {\n    d = x0 - xAccessor(d0) > xAccessor(d1) - x0 ? d1 : d0;\n  }\n  showTooltip({\n    tooltipData: d,\n    tooltipLeft: x,\n    tooltipTop: yScale(d.close),\n  });\n}\n\nconst AreaDemoWithTooltip = withTooltip((props: IAreaDemoWithTooltipProps) => {\n  const {\n    margin,\n    height,\n    showTooltip,\n    tooltipData,\n    tooltipLeft,\n    tooltipTop,\n    width,\n  } = props;\n  const xMax = width - margin.left - margin.right;\n  const yMax = height - margin.top - margin.bottom;\n\n  const xScale = scaleTime({\n    domain: extent(stock, xStock),\n    range: [0, xMax],\n  });\n  const yScale = scaleLinear({\n    domain: [0, max(stock, yStock) + yMax / 3],\n    nice: true,\n    range: [yMax, 0],\n  });\n\n  const onMouseMove = (event: MouseEvent) => {\n    handleTooltip({\n      data: stock,\n      event,\n      xAccessor: xStock,\n      xScale,\n      yScale,\n      showTooltip,\n    });\n  };\n\n  return (\n    <div>\n      <AreaDemo\n        {...props}\n        onMouseMove={onMouseMove}\n        ruler={{ left: tooltipLeft, top: tooltipTop }}\n      />\n      {tooltipData && (\n        <div>\n          <Tooltip\n            top={tooltipTop - 12}\n            left={tooltipLeft + 12}\n            style={{\n              backgroundColor: \"rgba(92, 119, 235, 1.000)\",\n              color: \"white\",\n            }}\n          >\n            {`$${yStock(tooltipData)}`}\n          </Tooltip>\n          <Tooltip\n            top={yMax - 14}\n            left={tooltipLeft}\n            style={{\n              transform: \"translateX(-50%)\",\n            }}\n          >\n            {formatDate(xStock(tooltipData))}\n          </Tooltip>\n        </div>\n      )}\n    </div>\n  );\n});\n\nexport { AreaDemo, AreaDemoWithTooltip };\n","import { AxisBottom, AxisLeft, AxisRight, RenderProps } from \"@vx/axis\";\nimport { curveBasis } from \"@vx/curve\";\nimport { GradientOrangeRed } from \"@vx/gradient\";\nimport { Grid } from \"@vx/grid\";\nimport { Group } from \"@vx/group\";\nimport { DateValueDatum, genDateValue } from \"@vx/mock-data\";\nimport { withParentSize, WithParentSizeProps } from \"@vx/responsive\";\nimport { Accessor, scaleLinear, scaleTime } from \"@vx/scale\";\nimport { Area, Line, LinePath } from \"@vx/shape\";\nimport { extent } from \"d3-array\";\nimport React from \"react\";\n// import { Text } from \"@vx/text\";\nimport { IMargin } from \"../../interfaces\";\n\nconst data = genDateValue(20);\nconst x: Accessor<DateValueDatum, Date> = (d: DateValueDatum) => d.date;\nconst y: Accessor<DateValueDatum, number> = (d: DateValueDatum) => d.value;\n\nfunction numTicksForHeight(height: number) {\n  if (height <= 300) {\n    return 3;\n  }\n  if (300 < height && height <= 600) {\n    return 5;\n  }\n  return 10;\n}\n\nfunction numTicksForWidth(width: number) {\n  if (width <= 300) {\n    return 2;\n  }\n  if (300 < width && width <= 400) {\n    return 5;\n  }\n  return 10;\n}\n\nexport interface IProps {\n  width: number;\n  height: number;\n  margin: IMargin;\n}\n\nconst AxisDemo = (props: IProps) => {\n  const { width, height, margin } = props;\n\n  const xMax = width - margin.left - margin.right;\n  const yMax = height - margin.top - margin.bottom;\n\n  const scaleTimeOptions = {\n    domain: extent(data, x) as [Date, Date],\n    range: [0, xMax],\n  };\n  const xScale = scaleTime(scaleTimeOptions);\n\n  const linearScaleOptions = {\n    domain: [0, Math.max(...data.map(y))],\n    nice: true,\n    range: [yMax, 0],\n  };\n  const yScale = scaleLinear(linearScaleOptions);\n\n  // const tickComponent = (props: TickOptions) => {\n  //   console.log(\"tickComponent\", tickComponent, \"props\", props)\n  //   const {formattedValue, ...tickProps} = props\n  //   return (<span>{formattedValue}</span>)\n  //   // return (<text x={tickProps.x} y={tickProps.y}>{formattedValue}</text>)\n  // }\n\n  return (\n    <svg width={width} height={height}>\n      <GradientOrangeRed\n        id=\"linear\"\n        vertical={false}\n        fromOpacity={0.8}\n        toOpacity={0.3}\n      />\n      <rect x={0} y={0} width={width} height={height} fill=\"#f4419f\" rx={14} />\n      <Grid\n        top={margin.top}\n        left={margin.left}\n        xScale={xScale}\n        yScale={yScale}\n        stroke=\"rgba(142, 32, 95, 0.9)\"\n        width={xMax}\n        height={yMax}\n        numTicksRows={numTicksForHeight(height)}\n        numTicksColumns={numTicksForWidth(width)}\n      />\n      <Group top={margin.top} left={margin.left}>\n        <Area\n          data={data}\n          x={(d: DateValueDatum) => xScale(x(d))}\n          y0={(d: DateValueDatum) => yScale.range()[0]}\n          y1={(d: DateValueDatum) => yScale(y(d))}\n          stroke={\"transparent\"}\n          strokeWidth={2}\n          fill={\"url(#linear)\"}\n          curve={curveBasis}\n        />\n        <LinePath\n          data={data}\n          x={(d: DateValueDatum) => xScale(x(d))}\n          y={(d: DateValueDatum) => yScale(y(d))}\n          stroke={\"url('#linear')\"}\n          strokeWidth={2}\n          curve={curveBasis}\n        />\n      </Group>\n      <Group left={margin.left}>\n        <AxisLeft\n          top={margin.top}\n          left={0}\n          scale={yScale}\n          hideZero\n          numTicks={numTicksForHeight(height)}\n          label=\"Axis Left Label\"\n          labelProps={{\n            fill: \"#8e205f\",\n            fontFamily: \"Arial\",\n            fontSize: 12,\n            textAnchor: \"middle\",\n          }}\n          stroke=\"#1b1a1e\"\n          tickStroke=\"#8e205f\"\n          tickLabelProps={(value: any, index: number) => ({\n            dx: \"-0.25em\",\n            dy: \"0.25em\",\n            fill: \"#8e205f\",\n            fontFamily: \"Arial\",\n            fontSize: 10,\n            textAnchor: \"end\",\n          })}\n          tickComponent={({ formattedValue, ...tickProps }) => (\n            <text {...tickProps}>{formattedValue}</text>\n          )}\n        />\n        <AxisRight\n          top={margin.top}\n          left={xMax}\n          scale={yScale}\n          hideZero\n          numTicks={numTicksForHeight(height)}\n          label=\"Axis Right Label\"\n          labelProps={{\n            fill: \"#8e205f\",\n            fontFamily: \"Arial\",\n            fontSize: 12,\n            textAnchor: \"middle\",\n          }}\n          stroke=\"#1b1a1e\"\n          tickStroke=\"#8e205f\"\n          tickLabelProps={(value, index) => ({\n            dx: \"0.25em\",\n            dy: \"0.25em\",\n            fill: \"#8e205f\",\n            fontFamily: \"Arial\",\n            fontSize: 10,\n            textAnchor: \"start\",\n          })}\n        />\n        <AxisBottom\n          top={height - margin.bottom}\n          left={0}\n          scale={xScale}\n          numTicks={numTicksForWidth(width)}\n          label=\"Time\"\n        >\n          {(axis: RenderProps) => {\n            const tickLabelSize = 10;\n            const tickRotate = 45;\n            const tickColor = \"#8e205f\";\n            const axisCenter = (axis.axisToPoint.x - axis.axisFromPoint.x) / 2;\n            return (\n              <g className=\"my-custom-bottom-axis\">\n                {axis.ticks.map((tick: any, i: number) => {\n                  const tickX = tick.to.x;\n                  const tickY = tick.to.y + tickLabelSize + axis.tickLength;\n                  return (\n                    <Group\n                      key={`vx-tick-${tick.value}-${i}`}\n                      className={\"vx-axis-tick\"}\n                    >\n                      <Line from={tick.from} to={tick.to} stroke={tickColor} />\n                      <text\n                        transform={`translate(${tickX}, ${tickY}) rotate(${tickRotate})`}\n                        fontSize={tickLabelSize}\n                        textAnchor=\"middle\"\n                        fill={tickColor}\n                      >\n                        {tick.formattedValue}\n                      </text>\n                    </Group>\n                  );\n                })}\n                <text\n                  textAnchor=\"middle\"\n                  transform={`translate(${axisCenter}, 50)`}\n                  fontSize=\"8\"\n                >\n                  {axis.label}\n                </text>\n              </g>\n            );\n          }}\n        </AxisBottom>\n      </Group>\n    </svg>\n  );\n};\n\ninterface IAxisDemoResponsiveProps extends WithParentSizeProps {\n  margin: IMargin;\n}\n\nconst AxisDemoResponsive = withParentSize((props: IAxisDemoResponsiveProps) => {\n  const { margin, parentWidth } = props;\n  // TODO: parentHeight causes a resize every time\n  return <AxisDemo height={400} width={parentWidth} margin={margin} />;\n});\n\nexport { AxisDemo, AxisDemoResponsive };\n\nexport default AxisDemo;\n","import { curveBasis, curveMonotoneX } from \"@vx/curve\";\nimport { GlyphDot } from \"@vx/glyph\";\nimport { Group } from \"@vx/group\";\nimport { DateValueDatum, genDateValue } from \"@vx/mock-data\";\nimport {\n  scaleLinear,\n  ScaleLinearOptions,\n  scaleTime,\n  ScaleTimeOptions,\n} from \"@vx/scale\";\nimport { LinePath } from \"@vx/shape\";\nimport { extent } from \"d3-array\";\nimport React from \"react\";\nimport { IMargin } from \"../../interfaces\";\n\nconst data = genDateValue(15);\n\nconst dateAccessor = (d: DateValueDatum) => d.date;\nconst valueAccessor = (d: DateValueDatum) => d.value;\n\nconst timeDomain = extent(data.map(dateAccessor)) as [Date, Date];\nconst scaleTimeOptions: ScaleTimeOptions = {\n  domain: timeDomain,\n};\nconst xScale = scaleTime(scaleTimeOptions);\n\nconst scaleLinearOptions: ScaleLinearOptions = {\n  domain: [0, Math.max(...data.map(valueAccessor))],\n};\nconst yScale = scaleLinear(scaleLinearOptions);\n\nconst x = (d: DateValueDatum) => xScale(dateAccessor(d));\nconst y = (d: DateValueDatum) => yScale(valueAccessor(d));\n\nconst primary = \"#8921e0\";\nconst secondary = \"#00f2ff\";\nconst contrast = \"#ffffff\";\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n}\n\nclass GlyphDemo extends React.Component<IProps> {\n  public render() {\n    const { height, margin, width } = this.props;\n    const xMax = width - margin.left - margin.right;\n    const yMax = height - margin.top - margin.bottom;\n\n    xScale.range([0, xMax]);\n    yScale.range([yMax, 0]);\n\n    return (\n      <svg width={width} height={height}>\n        <rect\n          x={0}\n          y={0}\n          width={width}\n          height={height}\n          fill={secondary}\n          rx={14}\n        />\n        <Group top={margin.top}>\n          <LinePath\n            data={data}\n            x={x}\n            y={y}\n            stroke={primary}\n            strokeWidth={2}\n            strokeDasharray=\"2,2\"\n            curve={curveBasis}\n          />\n          <LinePath\n            data={data}\n            x={x}\n            y={y}\n            stroke={primary}\n            strokeWidth={3}\n            curve={curveMonotoneX}\n          />\n          {data.map((d, i) => {\n            const cx = x(d);\n            const cy = y(d);\n            return (\n              <g key={`line-point-${i}`}>\n                <GlyphDot\n                  cx={cx}\n                  cy={cy}\n                  r={6}\n                  fill={contrast}\n                  stroke={secondary}\n                  strokeWidth={10}\n                />\n                <GlyphDot\n                  cx={cx}\n                  cy={cy}\n                  r={6}\n                  fill={secondary}\n                  stroke={primary}\n                  strokeWidth={3}\n                />\n                <GlyphDot cx={cx} cy={cy} r={4} fill={contrast} />\n              </g>\n            );\n          })}\n        </Group>\n      </svg>\n    );\n  }\n}\n\nexport { GlyphDemo };\n","import {\n  GradientDarkgreenGreen,\n  GradientLightgreenGreen,\n  GradientOrangeRed,\n  GradientPinkBlue,\n  GradientPinkRed,\n  GradientPurpleOrange,\n  GradientPurpleRed,\n  GradientSteelPurple,\n  GradientTealBlue,\n  RadialGradient,\n} from \"@vx/gradient\";\nimport { Bar } from \"@vx/shape\";\nimport React from \"react\";\n\ninterface IProps {\n  height: number;\n  width: number;\n}\n\nconst GradientsDemo = (props: IProps) => {\n  const { height, width } = props;\n  const h = (height - 50) / 2;\n  const w = width / 4;\n  return (\n    <svg height={height} width={width}>\n      <GradientDarkgreenGreen id=\"DarkgreenGreen\" />\n      <GradientLightgreenGreen id=\"LightgreenGreen\" />\n      <GradientOrangeRed id=\"OrangeRed\" />\n      <GradientPinkBlue id=\"PinkBlue\" />\n      <GradientPinkRed id=\"PinkRed\" vertical={false} />\n      <GradientPurpleOrange id=\"PurpleOrange\" vertical={false} />\n      <GradientPurpleRed id=\"PurpleRed\" vertical={false} />\n      <RadialGradient from=\"#55bdd5\" to=\"#4f3681\" id=\"Radial\" r={\"80%\"} />\n      <GradientSteelPurple id=\"SteelPurple\" vertical={false} />\n      <GradientTealBlue id=\"TealBlue\" vertical={false} />\n      <Bar\n        x={0}\n        y={0}\n        width={w}\n        height={h}\n        fill={`url(#LightgreenGreen)`}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n        rx={14}\n      />\n      <Bar\n        x={w}\n        y={0}\n        width={w}\n        height={h}\n        fill={`url(#OrangeRed)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n      <Bar\n        x={w * 2}\n        y={0}\n        width={w}\n        height={h}\n        fill={`url(#PinkBlue)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n      <Bar\n        x={w * 3}\n        y={0}\n        width={w}\n        height={h}\n        fill={`url(#DarkgreenGreen)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n      <Bar\n        x={0}\n        y={h}\n        width={w}\n        height={h}\n        fill={`url(#PinkRed)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n      <Bar\n        x={w}\n        y={h}\n        width={w}\n        height={h}\n        fill={`url(#TealBlue)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n      <Bar\n        x={w * 2}\n        y={h}\n        width={w}\n        height={h}\n        fill={`url(#PurpleOrange)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n      <Bar\n        x={w * 3}\n        y={h}\n        width={w}\n        height={h}\n        fill={`url(#Radial)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n    </svg>\n  );\n};\n\nexport default GradientsDemo;\n","import { Group } from \"@vx/group\";\nimport { HeatmapCircle, HeatmapRect } from \"@vx/heatmap\";\nimport { Bin, genBins } from \"@vx/mock-data\";\nimport { scaleLinear } from \"@vx/scale\";\nimport React from \"react\";\nimport { clearLine } from \"readline\";\nimport { IMargin } from \"../../interfaces\";\n\nconst hot1 = \"#77312f\";\nconst hot2 = \"#f33d15\";\nconst cool1 = \"#122549\";\nconst cool2 = \"#b4fbde\";\nconst bg = \"#28272c\";\n\nconst data = genBins(16, 16);\n\ninterface IHeatmapBinDatum {\n  bin: number;\n  bins: number[];\n}\n\ninterface IHeatmapCell {\n  bin: Bin;\n  color: string;\n  column: number;\n  count: number;\n  cx: number;\n  cy: number;\n  datum: IHeatmapBinDatum;\n  gap: number;\n  height: number;\n  opacity: number;\n  r: number;\n  radius: number;\n  row: number;\n  width: number;\n  x: number;\n  y: number;\n}\n\ntype IHeatmapColumn = IHeatmapCell[];\n\n// utils\nconst max = (dataBins: Bin[], value = (d: any) => d) =>\n  Math.max(...dataBins.map(value));\nconst min = (values: number[], value = (d: any) => d) =>\n  Math.min(...values.map(value));\n\n// accessors\nconst bins = (d: any) => d.bins;\nconst count = (d: any) => d.count;\n\nconst colorMax = max(data, (d: any) => max(bins(d), count));\nconst bucketSizeMax = max(data, (d: any) => bins(d).length);\n\n// scales\nconst xScale = scaleLinear({\n  domain: [0, data.length],\n});\nconst yScale = scaleLinear({\n  domain: [0, bucketSizeMax],\n});\nconst circleColorScale = scaleLinear({\n  domain: [0, colorMax],\n  range: [hot1, hot2],\n});\nconst rectColorScale = scaleLinear({\n  domain: [0, colorMax],\n  range: [cool1, cool2],\n});\nconst opacityScale = scaleLinear({\n  domain: [0, colorMax],\n  range: [0.1, 1],\n});\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  separation: number;\n  width: number;\n}\n\nconst HeatmapsDemo = (props: IProps) => {\n  const { height, margin, separation, width } = props;\n  // bounds\n  let size = width;\n  if (size > margin.left + margin.right) {\n    size = width - margin.left - margin.right - separation;\n  }\n\n  const xMax = size / 2;\n  const yMax = height - margin.bottom - margin.top;\n\n  const binWidth = xMax / data.length;\n  const binHeight = yMax / bucketSizeMax;\n  const radius = min([binWidth, binHeight]) / 2;\n\n  xScale.range([0, xMax]);\n  yScale.range([yMax, 0]);\n\n  return (\n    <svg width={width} height={height}>\n      <rect x={0} y={0} width={width} height={height} rx={14} fill={bg} />\n      <Group top={margin.top} left={margin.left}>\n        <HeatmapCircle\n          data={data}\n          xScale={xScale}\n          yScale={yScale}\n          colorScale={circleColorScale}\n          opacityScale={opacityScale}\n          radius={radius}\n          gap={2}\n        >\n          {(heatmap: IHeatmapCell[][]) => {\n            return heatmap.map((heatmapColumn: IHeatmapColumn) => {\n              return heatmapColumn.map((cell: IHeatmapCell) => {\n                return (\n                  <circle\n                    key={`heatmap-circle-${cell.row}-${cell.column}`}\n                    className=\"vx-heatmap-circle\"\n                    cx={cell.cx}\n                    cy={cell.cy}\n                    r={cell.r > 0 ? cell.r : 0}\n                    fill={cell.color}\n                    fillOpacity={cell.opacity}\n                    onClick={(event: React.MouseEvent) => {\n                      const { row, column } = cell;\n                      alert(JSON.stringify({ row, column, ...cell.bin }));\n                    }}\n                  />\n                );\n              });\n            });\n          }}\n        </HeatmapCircle>\n      </Group>\n      <Group top={margin.top} left={xMax + margin.left + separation}>\n        <HeatmapRect\n          data={data}\n          xScale={xScale}\n          yScale={yScale}\n          colorScale={rectColorScale}\n          opacityScale={opacityScale}\n          binWidth={binWidth}\n          binHeight={binWidth}\n          gap={2}\n        >\n          {(heatmap: IHeatmapCell[][]) => {\n            return heatmap.map((heatmapColumn: IHeatmapColumn) => {\n              return heatmapColumn.map((cell: IHeatmapCell) => {\n                return (\n                  <rect\n                    key={`heatmap-rect-${cell.row}-${cell.column}`}\n                    className=\"vx-heatmap-rect\"\n                    width={cell.width > 0 ? cell.width : 0}\n                    height={cell.height > 0 ? cell.height : 0}\n                    x={cell.x}\n                    y={cell.y}\n                    fill={cell.color}\n                    fillOpacity={cell.opacity}\n                    onClick={(event: React.MouseEvent) => {\n                      const { row, column } = cell;\n                      alert(JSON.stringify({ row, column, ...cell.bin }));\n                    }}\n                  />\n                );\n              });\n            });\n          }}\n        </HeatmapRect>\n      </Group>\n    </svg>\n  );\n};\n\nexport default HeatmapsDemo;\n","import { GlyphDiamond, GlyphStar, GlyphTriangle, GlyphWye } from \"@vx/glyph\";\nimport {\n  Legend,\n  LegendItem,\n  LegendLabel,\n  LegendLinear,\n  LegendOrdinal,\n  LegendQuantile,\n  LegendSize,\n  LegendThreshold,\n} from \"@vx/legend\";\nimport {\n  scaleLinear,\n  scaleOrdinal,\n  scaleQuantize,\n  scaleThreshold,\n} from \"@vx/scale\";\nimport { format } from \"d3-format\";\nimport React from \"react\";\n\nconst oneDecimalFormat = format(\".1f\");\n\nconst sizeScale = scaleLinear({\n  domain: [0, 10],\n  range: [10, 30],\n});\n\nconst sizeColorScale = scaleLinear({\n  domain: [0, 10],\n  range: [\"#75fcfc\", \"#3236b8\"],\n});\n\nconst quantileScale = scaleQuantize({\n  domain: [0, 0.15],\n  range: [\"#eb4d70\", \"#f19938\", \"#6ce18b\", \"#78f6ef\", \"#9096f8\"],\n});\n\nconst linearScale = scaleLinear({\n  domain: [0, 10],\n  range: [\"#ed4fbb\", \"#e9a039\"],\n});\n\nconst thresholdScale = scaleThreshold({\n  domain: [0.01, 0.02, 0.04, 0.06, 0.08, 0.1],\n  range: [\"#f2f0f7\", \"#dadaeb\", \"#bcbddc\", \"#9e9ac8\", \"#756bb1\", \"#54278f\"],\n});\n\nconst ordinalColorScale = scaleOrdinal({\n  domain: [\"a\", \"b\", \"c\", \"d\"],\n  range: [\"#66d981\", \"#71f5ef\", \"#4899f1\", \"#7d81f6\"],\n});\n\nconst ordinalColor2Scale = scaleOrdinal({\n  domain: [\"a\", \"b\", \"c\", \"d\"],\n  range: [\"#fae856\", \"#f29b38\", \"#e64357\", \"#8386f7\"],\n});\n\nconst shapeScale = scaleOrdinal({\n  domain: [\"a\", \"b\", \"c\", \"d\", \"e\"],\n  range: [\n    <GlyphStar size={50} top={50 / 6} left={50 / 6} fill=\"#dd59b8\" />,\n    <GlyphWye size={50} top={50 / 6} left={50 / 6} fill=\"#de6a9a\" />,\n    <GlyphTriangle size={50} top={50 / 6} left={50 / 6} fill=\"#de7d7b\" />,\n    <GlyphDiamond size={50} top={50 / 6} left={50 / 6} fill=\"#df905f\" />,\n    (props: any) => (\n      <text fontSize=\"12\" dy=\"1em\" dx=\".33em\" fill=\"#e0a346\">\n        $\n      </text>\n    ),\n  ],\n});\n\ninterface IProps {\n  height: number;\n  width: number;\n}\n\nconst LegendDemos = (props: IProps) => {\n  return (\n    <div className=\"chart\">\n      <LegendDemo title=\"Size\">\n        <LegendSize scale={sizeScale}>\n          {(labels: any) => {\n            return labels.map((label: any) => {\n              const size = sizeScale(label.datum);\n              const color = sizeColorScale(label.datum);\n              return (\n                <LegendItem\n                  key={`legend-${label.text}-${label.index}`}\n                  onClick={(event: React.MouseEvent) => {\n                    alert(`clicked: ${JSON.stringify(label)}`);\n                  }}\n                >\n                  <svg width={size} height={size} style={{ margin: \"5px 0\" }}>\n                    <circle\n                      cx={size / 2}\n                      cy={size / 2}\n                      fill={color}\n                      r={size / 2}\n                    />\n                  </svg>\n                  <LegendLabel align={\"left\"} margin={\"0 4px\"}>\n                    {label.text}\n                  </LegendLabel>\n                </LegendItem>\n              );\n            });\n          }}\n        </LegendSize>\n      </LegendDemo>\n      <LegendDemo title=\"Quantile\">\n        <LegendQuantile scale={quantileScale}>\n          {(labels: any) => {\n            return labels.map((label: any, i: number) => {\n              const size = 15;\n              return (\n                <LegendItem\n                  key={`legend-${i}`}\n                  onClick={(event: React.MouseEvent) => {\n                    alert(`clicked: ${JSON.stringify(label)}`);\n                  }}\n                >\n                  <svg width={size} height={size} style={{ margin: \"2px 0\" }}>\n                    <circle\n                      fill={label.value}\n                      r={size / 2}\n                      cx={size / 2}\n                      cy={size / 2}\n                    />\n                  </svg>\n                  <LegendLabel align={\"left\"} margin={\"0 4px\"}>\n                    {label.text}\n                  </LegendLabel>\n                </LegendItem>\n              );\n            });\n          }}\n        </LegendQuantile>\n        ;\n      </LegendDemo>\n      <LegendDemo title=\"Linear\">\n        <LegendLinear\n          scale={linearScale}\n          labelFormat={(d: any, i: number) => {\n            if (i % 2 === 0) {\n              return oneDecimalFormat(d);\n            }\n            return \"\";\n          }}\n        >\n          {(labels: any) => {\n            return labels.map((label: any, i: number) => {\n              const size = 15;\n              return (\n                <LegendItem\n                  key={`legend-quantile-${i}`}\n                  onClick={(event: React.MouseEvent) => {\n                    alert(`clicked: ${JSON.stringify(label)}`);\n                  }}\n                >\n                  <svg width={size} height={size} style={{ margin: \"2px 0\" }}>\n                    <circle\n                      fill={label.value}\n                      r={size / 2}\n                      cx={size / 2}\n                      cy={size / 2}\n                    />\n                  </svg>\n                  <LegendLabel align={\"left\"} margin={\"0 4px\"}>\n                    {label.text}\n                  </LegendLabel>\n                </LegendItem>\n              );\n            });\n          }}\n        </LegendLinear>\n      </LegendDemo>\n      <LegendDemo title=\"Threshold\">\n        <LegendThreshold scale={thresholdScale}>\n          {(labels: any) => {\n            return labels.reverse().map((label: any, i: number) => {\n              const size = 15;\n              return (\n                <LegendItem\n                  key={`legend-quantile-${i}`}\n                  margin=\"1px 0\"\n                  onClick={(event: React.MouseEvent) => {\n                    alert(`clicked: ${JSON.stringify(label)}`);\n                  }}\n                >\n                  <svg width={size} height={size}>\n                    <rect fill={label.value} width={size} height={size} />\n                  </svg>\n                  <LegendLabel align={\"left\"} margin={\"2px 0 0 10px\"}>\n                    {label.text}\n                  </LegendLabel>\n                </LegendItem>\n              );\n            });\n          }}\n        </LegendThreshold>\n      </LegendDemo>\n      <LegendDemo title=\"Ordinal\">\n        <LegendOrdinal\n          scale={ordinalColorScale}\n          labelFormat={(label: any) => `${label.toUpperCase()}`}\n        >\n          {(labels: any) => {\n            return (\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                {labels.map((label: any, i: number) => {\n                  const size = 15;\n                  return (\n                    <LegendItem\n                      key={`legend-quantile-${i}`}\n                      margin={\"0 5px\"}\n                      onClick={(event: React.MouseEvent) => {\n                        alert(`clicked: ${JSON.stringify(label)}`);\n                      }}\n                    >\n                      <svg width={size} height={size}>\n                        <rect fill={label.value} width={size} height={size} />\n                      </svg>\n                      <LegendLabel align={\"left\"} margin={\"0 0 0 4px\"}>\n                        {label.text}\n                      </LegendLabel>\n                    </LegendItem>\n                  );\n                })}\n              </div>\n            );\n          }}\n        </LegendOrdinal>\n      </LegendDemo>\n      <LegendDemo title=\"Custom Legend\">\n        <Legend scale={shapeScale}>\n          {(labels: any) => {\n            return (\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                {labels.map((label: any, i: number) => {\n                  const size = 15;\n                  const color = ordinalColor2Scale(label.datum);\n                  const shape = shapeScale(label.datum);\n                  const shapeProps = { fill: color };\n                  const isValidElement = React.isValidElement(shape);\n                  return (\n                    <LegendItem\n                      key={`legend-quantile-${i}`}\n                      margin={\"0 4px 0 0\"}\n                      flexDirection=\"column\"\n                      onClick={(event: React.MouseEvent) => {\n                        const { datum, index } = label;\n                        alert(\n                          `clicked: ${JSON.stringify({ datum, color, index })}`\n                        );\n                      }}\n                    >\n                      <svg\n                        width={size}\n                        height={size}\n                        style={{ margin: \"0 0 8px 0\" }}\n                      >\n                        {!isValidElement &&\n                          React.createElement(shape, shapeProps)}\n                        {isValidElement && React.cloneElement(shape)}\n                      </svg>\n                      <LegendLabel align={\"left\"} margin={0}>\n                        {label.text}\n                      </LegendLabel>\n                    </LegendItem>\n                  );\n                })}\n              </div>\n            );\n          }}\n        </Legend>\n      </LegendDemo>\n      ;\n    </div>\n  );\n};\n\ninterface ILegendDemoProps {\n  children: any;\n  title: string;\n}\n\nfunction LegendDemo(props: ILegendDemoProps) {\n  const { children, title } = props;\n  return (\n    <div className=\"legend\">\n      <div className=\"title\">{title}</div>\n      {children}\n    </div>\n  );\n}\n\nexport { LegendDemos };\n","import { curveMonotoneX } from \"@vx/curve\";\nimport { GridRows } from \"@vx/grid\";\nimport { Group } from \"@vx/group\";\nimport { DateValueDatum, genDateValue } from \"@vx/mock-data\";\nimport { withParentSize, WithParentSizeProps } from \"@vx/responsive\";\nimport { Accessor, scaleLinear, scaleTime } from \"@vx/scale\";\nimport { LinePath } from \"@vx/shape\";\nimport { extent, max } from \"d3-array\";\nimport React from \"react\";\nimport { IMargin } from \"../../interfaces\";\n\nfunction genLines(num: number) {\n  return new Array(num).fill(1).map(() => {\n    return genDateValue(25);\n  });\n}\n\nconst series = genLines(12);\nconst data = series.reduce((rec, d) => {\n  return rec.concat(d);\n}, []);\n\nconst x: Accessor<DateValueDatum, Date> = (d: DateValueDatum) => d.date;\nconst y: Accessor<DateValueDatum, number> = (d: DateValueDatum) => d.value;\n\ninterface IProps {\n  width: number;\n  height: number;\n  margin: IMargin;\n}\n\nconst LinesDemo = (props: IProps) => {\n  const { height, width, margin } = props;\n  const xMax = width;\n  const yMax = height / 8;\n\n  const [minDate, maxDate] = extent(data, x) as [Date, Date];\n  const scaleTimeOptions = {\n    domain: [minDate, maxDate],\n    range: [0, xMax],\n  };\n  const xScale = scaleTime(scaleTimeOptions);\n\n  const maxValue = max(data, y) as number;\n  const scaleLinearOptions = {\n    domain: [0, maxValue],\n    range: [yMax, 0],\n    rangeRound: [1, 2],\n  };\n  const yScale = scaleLinear(scaleLinearOptions);\n\n  return (\n    <svg width={width} height={height}>\n      <rect x={0} y={0} width={width} height={height} fill=\"#242424\" rx={14} />\n      <GridRows\n        top={margin.top}\n        left={margin.left}\n        scale={xScale}\n        stroke=\"rgba(142, 32, 95, 0.9)\"\n        width={xMax}\n      />\n      {xMax > 8 &&\n        series.map((d, i) => {\n          return (\n            <Group key={`lines-${i}`} top={(i * yMax) / 2}>\n              <LinePath\n                data={d}\n                x={(dd: any) => xScale(x(dd))}\n                y={(dd: any) => yScale(y(dd))}\n                stroke={\"#ffffff\"}\n                strokeWidth={1}\n                curve={i % 2 === 0 ? curveMonotoneX : undefined}\n              />\n            </Group>\n          );\n        })}\n    </svg>\n  );\n};\n\ninterface ILinesDemoResponsiveProps extends WithParentSizeProps {\n  margin: IMargin;\n}\n\nconst LinesDemoResponsive = withParentSize(\n  (props: ILinesDemoResponsiveProps) => {\n    const { margin, parentWidth } = props;\n    // TODO: parentHeight causes a resize every time\n    return <LinesDemo height={400} width={parentWidth} margin={margin} />;\n  }\n);\n\nexport { LinesDemo, LinesDemoResponsive };\n\nexport default LinesDemo;\n","import { PatternCircles, PatternLines, PatternWaves } from \"@vx/pattern\";\nimport { Bar } from \"@vx/shape\";\nimport React from \"react\";\n\ninterface IProps {\n  height: number;\n  width: number;\n}\n\nconst PatternsDemo = (props: IProps) => {\n  const { height, width } = props;\n  const xMax = width;\n  const yMax = height - 80;\n  const pWidth = xMax / 4;\n  const pHeight = yMax / 2;\n  return (\n    <svg width={width} height={height}>\n      <PatternLines\n        id=\"vLines\"\n        height={6}\n        width={6}\n        stroke=\"black\"\n        strokeWidth={1}\n      />\n      <PatternLines\n        id=\"hLines\"\n        height={6}\n        width={6}\n        stroke=\"black\"\n        strokeWidth={1}\n        orientation={[\"horizontal\"]}\n      />\n      <PatternLines\n        id=\"dLines\"\n        height={6}\n        width={6}\n        stroke=\"black\"\n        strokeWidth={1}\n        orientation={[\"diagonal\"]}\n      />\n      <PatternLines\n        id=\"dhLines\"\n        height={6}\n        width={6}\n        stroke=\"black\"\n        strokeWidth={1}\n        orientation={[\"vertical\", \"horizontal\"]}\n      />\n      <PatternCircles id=\"Circles\" height={6} width={6} fill=\"black\" />\n      <PatternCircles\n        id=\"cCircles\"\n        height={10}\n        width={10}\n        fill=\"black\"\n        complement\n      />\n      <PatternWaves\n        id=\"Waves\"\n        height={6}\n        width={6}\n        fill=\"transparent\"\n        stroke=\"black\"\n        strokeWidth={1}\n        complement\n      />\n      <PatternWaves\n        id=\"bWaves\"\n        height={12}\n        width={12}\n        fill=\"transparent\"\n        stroke=\"black\"\n        strokeWidth={1}\n        complement\n      />\n      <Bar\n        fill={`url(#vLines)`}\n        height={pHeight}\n        width={pWidth}\n        x={0}\n        y={0}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#hLines)`}\n        height={pHeight}\n        width={pWidth}\n        x={pWidth}\n        y={0}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#dLines)`}\n        height={pHeight}\n        width={pWidth}\n        x={pWidth * 2}\n        y={0}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#dhLines)`}\n        height={pHeight}\n        width={pWidth}\n        x={pWidth * 3}\n        y={0}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#Circles)`}\n        height={pHeight}\n        width={pWidth}\n        x={0}\n        y={pHeight}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#cCircles)`}\n        height={pHeight}\n        width={pWidth}\n        x={pWidth}\n        y={pHeight}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#Waves)`}\n        height={pHeight}\n        width={pWidth}\n        x={pWidth * 2}\n        y={pHeight}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#bWaves)`}\n        height={pHeight}\n        width={pWidth}\n        x={pWidth * 3}\n        y={pHeight}\n        rx={14}\n      />\n    </svg>\n  );\n};\n\nexport default PatternsDemo;\n","import { GradientPinkRed } from \"@vx/gradient\";\nimport { Group } from \"@vx/group\";\nimport { scaleBand } from \"@vx/scale\";\nimport { Polygon } from \"@vx/shape\";\nimport React from \"react\";\n\ninterface IProps {\n  height: number;\n  width: number;\n}\n\ninterface IPolygon {\n  fill: string;\n  rotate: number;\n  sides: number;\n}\n\nconst polygons: IPolygon[] = [\n  {\n    fill: \"rgb(174, 238, 248)\",\n    rotate: 90,\n    sides: 3,\n  },\n  {\n    fill: \"rgb(229, 253, 61)\",\n    rotate: 45,\n    sides: 4,\n  },\n  {\n    fill: \"rgb(229, 130, 255)\",\n    rotate: 0,\n    sides: 6,\n  },\n  {\n    fill: \"url(#polygon-pink)\",\n    rotate: 0,\n    sides: 8,\n  },\n];\n\nconst yScale = scaleBand({\n  domain: polygons.map((p: IPolygon, i: number) => i),\n  padding: 20,\n});\n\nconst PolygonsDemo = (props: IProps) => {\n  const { height, width } = props;\n  return (\n    <svg width={width} height={height}>\n      <rect width={width} height={height} fill=\"#7f82e3\" rx={14} />\n      <GradientPinkRed id=\"polygon-pink\" />\n      {polygons.map((polygon, i) => (\n        <Group key={`polygon-${i}`} top={yScale(i)} left={width / 2}>\n          <Polygon\n            sides={polygon.sides}\n            size={30}\n            fill={polygon.fill}\n            rotate={polygon.rotate}\n          />\n        </Group>\n      ))}\n    </svg>\n  );\n};\n\nexport default PolygonsDemo;\n","import { Text } from \"@vx/text\";\nimport React from \"react\";\n\ninterface IProps {\n  height: number;\n  text: string;\n  width: number;\n}\n\nconst TextDemo = (props: IProps) => {\n  const { height, text, width } = props;\n  return (\n    <svg width={width} height={height}>\n      <Text\n        angle={10}\n        style={{ fill: \"black\", fontSize: \"4.5rem\", stroke: \"white\" }}\n        textAnchor=\"middle\"\n        verticalAnchor=\"middle\"\n        width={width}\n        x={width / 2}\n        y={height / 2}\n      >\n        {text}\n      </Text>\n    </svg>\n  );\n};\n\nexport default TextDemo;\n","import { appleStock } from \"@vx/mock-data\";\nimport { ParentProps, ParentSize } from \"@vx/responsive\";\nimport React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nimport { AreaDemo, AreaDemoWithTooltip } from \"../AreaDemo\";\nimport { AxisDemoResponsive } from \"../AxisDemo\";\nimport { GlyphDemo } from \"../GlyphDemo\";\nimport GradientsDemo from \"../GradientsDemo\";\nimport HeatmapsDemo from \"../HeatmapsDemo\";\nimport { LegendDemos } from \"../LegendDemo\";\nimport { LinesDemoResponsive } from \"../LinesDemo\";\nimport PatternsDemo from \"../PatternsDemo\";\nimport PolygonsDemo from \"../PolygonsDemo\";\nimport TextDemo from \"../TextDemo\";\nimport logo from \"./logo.svg\";\n\nconst Div = styled.div`\n  text-align: center;\n`;\n\nconst rotate = () => keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst RotatingLogo = styled.img`\n  animation: ${rotate()} infinite 20s linear;\n  height: 40vmin;\n`;\n\nconst Header = styled.header`\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n`;\n\n/*\n  CSS Grid auto-fit for responsiveness: https://gridbyexample.com/examples/example37/\n  Common CSS breakpoints:\n  https://stackoverflow.com/questions/6370690/media-queries-how-to-target-desktop-tablet-and-mobile#7354648\n*/\ninterface IGridProps {\n  gridGap: number;\n}\nconst Grid = styled.div`\n  background-color: #282c34;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(600px, 1fr));\n  grid-gap: ${(props: IGridProps) => `${props.gridGap}` + \"rem\"};\n`;\n\ninterface IMargin {\n  bottom: number;\n  left: number;\n  right: number;\n  top: number;\n}\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n}\n\nconst stock = appleStock.slice(800);\n\nclass App extends React.Component<IProps> {\n  public static defaultProps: Partial<IProps> = {\n    height: 400,\n    margin: {\n      bottom: 10,\n      left: 10,\n      right: 10,\n      top: 10,\n    },\n  };\n  public render() {\n    const { height, margin } = this.props;\n    return (\n      <Div>\n        <Header>\n          <h1>vx-kitchensink</h1>\n          <RotatingLogo src={logo} alt=\"logo\" />\n        </Header>\n        <Grid gridGap={2}>\n          <AxisDemoResponsive margin={margin} />\n          <LinesDemoResponsive margin={margin} />\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <GradientsDemo height={height} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <PatternsDemo height={height} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <PolygonsDemo height={height} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <HeatmapsDemo\n                  height={height}\n                  margin={margin}\n                  separation={20}\n                  width={width}\n                />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <AreaDemo\n                  height={height}\n                  ruler={{ left: width / 2, top: height / 2 }}\n                  margin={margin}\n                  onMouseMove={(event: Event) => console.warn(\"Move\", event)}\n                  width={width}\n                />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <AreaDemoWithTooltip\n                  height={height}\n                  margin={margin}\n                  width={width}\n                />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <TextDemo\n                  height={height}\n                  text={\"This is a test\"}\n                  width={width}\n                />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <LegendDemos height={height} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <GlyphDemo height={height} margin={margin} width={width} />\n              );\n            }}\n          </ParentSize>\n        </Grid>\n      </Div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}