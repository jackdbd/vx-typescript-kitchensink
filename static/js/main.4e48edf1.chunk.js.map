{"version":3,"sources":["components/App/logo.svg","components/AxisDemo/index.tsx","components/LinesDemo/index.tsx","components/App/index.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","data","genDateValue","x","d","date","y","value","numTicksForHeight","height","numTicksForWidth","width","AxisDemo","props","margin","xMax","left","right","yMax","top","bottom","scaleTimeOptions","domain","extent","range","xScale","scaleTime","linearScaleOptions","Math","max","apply","Object","toConsumableArray","map","nice","yScale","scaleLinear","react_default","a","createElement","vx_gradient_es","id","vertical","fromOpacity","toOpacity","fill","rx","vx_grid_es","stroke","numTicksRows","numTicksColumns","vx_group_es","vx_shape_es","y0","y1","strokeWidth","curve","curveBasis","vx_axis_es","scale","hideZero","numTicks","label","labelProps","fontFamily","fontSize","textAnchor","tickStroke","tickLabelProps","index","dx","dy","tickComponent","_ref","formattedValue","tickProps","objectWithoutProperties","axis","axisCenter","axisToPoint","axisFromPoint","className","ticks","tick","i","tickX","to","tickY","tickLength","key","concat","from","transform","AxisDemoResponsive","withParentSize","parentWidth","AxisDemo_AxisDemo","series","Array","reduce","rec","LinesDemo","_ref2","slicedToArray","scaleLinearOptions","rangeRound","dd","curveMonotoneX","undefined","LinesDemoResponsive","LinesDemo_LinesDemo","Div","styled","div","_templateObject","RotatingLogo","img","_templateObject3","keyframes","_templateObject2","Header","header","_templateObject4","Grid","_templateObject5","gridGap","App","this","src","logo","alt","vx_responsive_es","components_AxisDemo","components_LinesDemo","React","Component","defaultProps","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.4e48edf1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { AxisBottom, AxisLeft, AxisRight, RenderProps } from \"@vx/axis\";\nimport { curveBasis } from \"@vx/curve\";\nimport { GradientOrangeRed } from \"@vx/gradient\";\nimport { Grid } from \"@vx/grid\";\nimport { Group } from \"@vx/group\";\nimport { DateValueDatum, genDateValue } from \"@vx/mock-data\";\nimport { withParentSize, WithParentSizeProps } from \"@vx/responsive\";\nimport { Accessor, scaleLinear, scaleTime } from \"@vx/scale\";\nimport { Area, Line, LinePath } from \"@vx/shape\";\nimport { extent, Numeric } from \"d3-array\";\nimport React from \"react\";\n// import { Text } from \"@vx/text\";\nimport { IMargin } from \"../../interfaces\";\n\nconst data = genDateValue(20);\nconst x: Accessor<DateValueDatum, Date> = (d: DateValueDatum) => d.date;\nconst y: Accessor<DateValueDatum, number> = (d: DateValueDatum) => d.value;\n\nfunction numTicksForHeight(height: number) {\n  if (height <= 300) {\n    return 3;\n  }\n  if (300 < height && height <= 600) {\n    return 5;\n  }\n  return 10;\n}\n\nfunction numTicksForWidth(width: number) {\n  if (width <= 300) {\n    return 2;\n  }\n  if (300 < width && width <= 400) {\n    return 5;\n  }\n  return 10;\n}\n\nexport interface IProps {\n  width: number;\n  height: number;\n  margin: IMargin;\n}\n\nconst AxisDemo = (props: IProps) => {\n  const { width, height, margin } = props;\n\n  const xMax = width - margin.left - margin.right;\n  const yMax = height - margin.top - margin.bottom;\n\n  const scaleTimeOptions = {\n    domain: extent(data, x) as [Date, Date],\n    range: [0, xMax],\n  };\n  const xScale = scaleTime(scaleTimeOptions);\n\n  const linearScaleOptions = {\n    domain: [0, Math.max(...data.map(y))],\n    nice: true,\n    range: [yMax, 0],\n  };\n  const yScale = scaleLinear(linearScaleOptions);\n\n  // const tickComponent = (props: TickOptions) => {\n  //   console.log(\"tickComponent\", tickComponent, \"props\", props)\n  //   const {formattedValue, ...tickProps} = props\n  //   return (<span>{formattedValue}</span>)\n  //   // return (<text x={tickProps.x} y={tickProps.y}>{formattedValue}</text>)\n  // }\n\n  return (\n    <svg width={width} height={height}>\n      <GradientOrangeRed\n        id=\"linear\"\n        vertical={false}\n        fromOpacity={0.8}\n        toOpacity={0.3}\n      />\n      <rect x={0} y={0} width={width} height={height} fill=\"#f4419f\" rx={14} />\n      <Grid\n        top={margin.top}\n        left={margin.left}\n        xScale={xScale}\n        yScale={yScale}\n        stroke=\"rgba(142, 32, 95, 0.9)\"\n        width={xMax}\n        height={yMax}\n        numTicksRows={numTicksForHeight(height)}\n        numTicksColumns={numTicksForWidth(width)}\n      />\n      <Group top={margin.top} left={margin.left}>\n        <Area\n          data={data}\n          x={(d: DateValueDatum) => xScale(x(d))}\n          y0={(d: DateValueDatum) => yScale.range()[0]}\n          y1={(d: DateValueDatum) => yScale(y(d))}\n          strokeWidth={2}\n          stroke={\"transparent\"}\n          fill={\"url(#linear)\"}\n          curve={curveBasis}\n        />\n        <LinePath\n          data={data}\n          x={(d: DateValueDatum) => xScale(x(d))}\n          y={(d: DateValueDatum) => yScale(y(d))}\n          stroke={\"url('#linear')\"}\n          strokeWidth={2}\n          curve={curveBasis}\n        />\n      </Group>\n      <Group left={margin.left}>\n        <AxisLeft\n          top={margin.top}\n          left={0}\n          scale={yScale}\n          hideZero\n          numTicks={numTicksForHeight(height)}\n          label=\"Axis Left Label\"\n          labelProps={{\n            fill: \"#8e205f\",\n            fontFamily: \"Arial\",\n            fontSize: 12,\n            textAnchor: \"middle\",\n          }}\n          stroke=\"#1b1a1e\"\n          tickStroke=\"#8e205f\"\n          tickLabelProps={(value: any, index: number) => ({\n            dx: \"-0.25em\",\n            dy: \"0.25em\",\n            fill: \"#8e205f\",\n            fontFamily: \"Arial\",\n            fontSize: 10,\n            textAnchor: \"end\",\n          })}\n          tickComponent={({ formattedValue, ...tickProps }) => (\n            <text {...tickProps}>{formattedValue}</text>\n          )}\n        />\n        <AxisRight\n          top={margin.top}\n          left={xMax}\n          scale={yScale}\n          hideZero\n          numTicks={numTicksForHeight(height)}\n          label=\"Axis Right Label\"\n          labelProps={{\n            fill: \"#8e205f\",\n            fontFamily: \"Arial\",\n            fontSize: 12,\n            textAnchor: \"middle\",\n          }}\n          stroke=\"#1b1a1e\"\n          tickStroke=\"#8e205f\"\n          tickLabelProps={(value, index) => ({\n            dx: \"0.25em\",\n            dy: \"0.25em\",\n            fill: \"#8e205f\",\n            fontFamily: \"Arial\",\n            fontSize: 10,\n            textAnchor: \"start\",\n          })}\n        />\n        <AxisBottom\n          top={height - margin.bottom}\n          left={0}\n          scale={xScale}\n          numTicks={numTicksForWidth(width)}\n          label=\"Time\"\n        >\n          {(axis: RenderProps) => {\n            const tickLabelSize = 10;\n            const tickRotate = 45;\n            const tickColor = \"#8e205f\";\n            const axisCenter = (axis.axisToPoint.x - axis.axisFromPoint.x) / 2;\n            return (\n              <g className=\"my-custom-bottom-axis\">\n                {axis.ticks.map((tick: any, i: number) => {\n                  const tickX = tick.to.x;\n                  const tickY = tick.to.y + tickLabelSize + axis.tickLength;\n                  return (\n                    <Group\n                      key={`vx-tick-${tick.value}-${i}`}\n                      className={\"vx-axis-tick\"}\n                    >\n                      <Line from={tick.from} to={tick.to} stroke={tickColor} />\n                      <text\n                        transform={`translate(${tickX}, ${tickY}) rotate(${tickRotate})`}\n                        fontSize={tickLabelSize}\n                        textAnchor=\"middle\"\n                        fill={tickColor}\n                      >\n                        {tick.formattedValue}\n                      </text>\n                    </Group>\n                  );\n                })}\n                <text\n                  textAnchor=\"middle\"\n                  transform={`translate(${axisCenter}, 50)`}\n                  fontSize=\"8\"\n                >\n                  {axis.label}\n                </text>\n              </g>\n            );\n          }}\n        </AxisBottom>\n      </Group>\n    </svg>\n  );\n};\n\ninterface IAxisDemoResponsiveProps extends WithParentSizeProps {\n  margin: IMargin;\n}\n\nconst AxisDemoResponsive = withParentSize((props: IAxisDemoResponsiveProps) => {\n  const { margin, parentWidth } = props;\n  // TODO: parentHeight causes a resize every time\n  return <AxisDemo height={400} width={parentWidth} margin={margin} />;\n});\n\nexport { AxisDemo, AxisDemoResponsive };\n\nexport default AxisDemo;\n","import { curveMonotoneX } from \"@vx/curve\";\nimport { GridRows } from \"@vx/grid\";\nimport { Group } from \"@vx/group\";\nimport { DateValueDatum, genDateValue } from \"@vx/mock-data\";\nimport { withParentSize, WithParentSizeProps } from \"@vx/responsive\";\nimport { Accessor, scaleLinear, scaleTime } from \"@vx/scale\";\nimport { LinePath } from \"@vx/shape\";\nimport { extent, max } from \"d3-array\";\nimport React from \"react\";\nimport { IMargin } from \"../../interfaces\";\n\nfunction genLines(num: number) {\n  return new Array(num).fill(1).map(() => {\n    return genDateValue(25);\n  });\n}\n\nconst series = genLines(12);\nconst data = series.reduce((rec, d) => {\n  return rec.concat(d);\n}, []);\n\nconst x: Accessor<DateValueDatum, Date> = (d: DateValueDatum) => d.date;\nconst y: Accessor<DateValueDatum, number> = (d: DateValueDatum) => d.value;\n\ninterface IProps {\n  width: number;\n  height: number;\n  margin: IMargin;\n}\n\nconst LinesDemo = (props: IProps) => {\n  const { height, width, margin } = props;\n  const xMax = width;\n  const yMax = height / 8;\n\n  const [minDate, maxDate] = extent(data, x) as [Date, Date];\n  const scaleTimeOptions = {\n    domain: [minDate, maxDate],\n    range: [0, xMax],\n  };\n  const xScale = scaleTime(scaleTimeOptions);\n\n  const maxValue = max(data, y) as number;\n  const scaleLinearOptions = {\n    domain: [0, maxValue],\n    range: [yMax, 0],\n    rangeRound: [1, 2],\n  };\n  const yScale = scaleLinear(scaleLinearOptions);\n\n  return (\n    <svg width={width} height={height}>\n      <rect x={0} y={0} width={width} height={height} fill=\"#242424\" rx={14} />\n      <GridRows\n        top={margin.top}\n        left={margin.left}\n        scale={xScale}\n        stroke=\"rgba(142, 32, 95, 0.9)\"\n        width={xMax}\n      />\n      {xMax > 8 &&\n        series.map((d, i) => {\n          return (\n            <Group key={`lines-${i}`} top={(i * yMax) / 2}>\n              <LinePath\n                data={d}\n                x={(dd: any) => xScale(x(dd))}\n                y={(dd: any) => yScale(y(dd))}\n                stroke={\"#ffffff\"}\n                strokeWidth={1}\n                curve={i % 2 === 0 ? curveMonotoneX : undefined}\n              />\n            </Group>\n          );\n        })}\n    </svg>\n  );\n};\n\ninterface ILinesDemoResponsiveProps extends WithParentSizeProps {\n  margin: IMargin;\n}\n\nconst LinesDemoResponsive = withParentSize(\n  (props: ILinesDemoResponsiveProps) => {\n    const { margin, parentWidth } = props;\n    // TODO: parentHeight causes a resize every time\n    return <LinesDemo height={400} width={parentWidth} margin={margin} />;\n  }\n);\n\nexport { LinesDemo, LinesDemoResponsive };\n\nexport default LinesDemo;\n","import { ParentProps, ParentSize } from \"@vx/responsive\";\nimport React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport AxisDemo, { AxisDemoResponsive } from \"../AxisDemo\";\nimport LinesDemo, { LinesDemoResponsive } from \"../LinesDemo\";\nimport logo from \"./logo.svg\";\n\nconst Div = styled.div`\n  text-align: center;\n`;\n\nconst rotate = () => keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst RotatingLogo = styled.img`\n  animation: ${rotate()} infinite 20s linear;\n  height: 40vmin;\n`;\n\nconst Header = styled.header`\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n`;\n\n/*\n  CSS Grid auto-fit for responsiveness: https://gridbyexample.com/examples/example37/\n  Common CSS breakpoints:\n  https://stackoverflow.com/questions/6370690/media-queries-how-to-target-desktop-tablet-and-mobile#7354648\n*/\ninterface IGridProps {\n  gridGap: number;\n}\nconst Grid = styled.div`\n  background-color: #282c34;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(600px, 1fr));\n  grid-gap: ${(props: IGridProps) => `${props.gridGap}` + \"rem\"};\n`;\n\ninterface IMargin {\n  bottom: number;\n  left: number;\n  right: number;\n  top: number;\n}\n\ninterface IProps {\n  margin: IMargin;\n}\n\nclass App extends React.Component<IProps> {\n  public static defaultProps: Partial<IProps> = {\n    margin: {\n      bottom: 10,\n      left: 10,\n      right: 10,\n      top: 10,\n    },\n  };\n  public render() {\n    const { margin } = this.props;\n    return (\n      <Div>\n        <Header>\n          <h1>vx-kitchensink</h1>\n          <RotatingLogo src={logo} alt=\"logo\" />\n        </Header>\n        <Grid gridGap={2}>\n          <AxisDemoResponsive margin={margin} />\n          <LinesDemoResponsive margin={margin} />\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <AxisDemo width={width} height={400} margin={margin} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <LinesDemo width={width} height={400} margin={margin} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <AxisDemo width={width} height={200} margin={margin} />;\n            }}\n          </ParentSize>\n        </Grid>\n      </Div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}