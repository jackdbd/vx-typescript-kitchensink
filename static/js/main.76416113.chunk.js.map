{"version":3,"sources":["components/App/logo.svg","components/AreaDemo/index.tsx","components/AxisDemo/index.tsx","components/BarGroupDemo/index.tsx","components/BarGroupHorizontalDemo/index.tsx","components/CurveDemo/index.tsx","components/DragDemo/index.tsx","components/GeoDemo/index.tsx","components/GlyphDemo/index.tsx","components/GradientsDemo/index.tsx","components/HeatmapsDemo/index.tsx","components/LegendDemo/index.tsx","components/LineRadialDemo/index.tsx","components/LinesDemo/index.tsx","components/PatternsDemo/index.tsx","components/PieDemo/index.tsx","components/PolygonsDemo/index.tsx","components/TextDemo/index.tsx","components/ThresholdDemo/index.tsx","components/VoronoiDemo/index.tsx","components/ZoomDemo/index.tsx","components/App/index.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","stock","appleStock","slice","formatDate","timeFormat","min","arr","fn","Math","apply","Object","toConsumableArray","map","max","extent","xStock","d","Date","date","yStock","close","bisectDate","bisector","left","AreaDemo","_React$Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","arguments","inherits","createClass","key","value","_this$props","props","width","height","margin","ruler","xMax","right","yMax","top","bottom","xScale","scaleTime","domain","range","yScale","scaleLinear","nice","react_default","a","createElement","x","y","fill","rx","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","vx_grid_es","lineStyle","pointerEvents","scale","strokeDasharray","stroke","vx_shape_es","curve","curveMonotoneX","data","strokeWidth","onMouseLeave","onMouseMove","onTouchMove","onTouchStart","from","to","style","cx","cy","r","fillOpacity","strokeOpacity","React","Component","AreaDemoWithTooltip","withTooltip","showTooltip","tooltipData","tooltipLeft","tooltipTop","AreaDemo_AreaDemo","assign","event","options","xAccessor","localPoint","x0","invert","index","d0","d1","handleTooltip","vx_tooltip_es","backgroundColor","color","concat","transform","genDateValue","numTicksForHeight","numTicksForWidth","AxisDemo","scaleTimeOptions","linearScaleOptions","vx_gradient_es","vertical","fromOpacity","toOpacity","numTicksRows","numTicksColumns","vx_group_es","y0","curveBasis","vx_axis_es","hideZero","numTicks","label","labelProps","fontFamily","fontSize","textAnchor","tickStroke","tickLabelProps","dx","dy","tickComponent","_ref","formattedValue","tickProps","objectWithoutProperties","axis","axisCenter","axisToPoint","axisFromPoint","className","ticks","tick","i","tickX","tickY","tickLength","AxisDemoResponsive","withParentSize","parentWidth","AxisDemo_AxisDemo","green","cityTemperature","keys","filter","parseDate","timeParse","format","dateString","x0Accessor","x0Scale","scaleBand","padding","x1Scale","yDomain","colorScale","scaleOrdinal","BarGroupDemo","_this","call","handleClick","bind","assertThisInitialized","renderBar","renderBarGroup","_this2","rangeRound","bandwidth","barGroups","tickFormat","hideAxisLine","tickLabelPropsFunction","dataset","target","alert","JSON","stringify","bar","data-value","data-key","onClick","barGroup","bars","keyGroup","y0Accessor","y0Scale","y1Scale","BarGroupHorizontalDemo","dateAccessor","valueAccessor","scaleLinearOptions","yAccessor","curves","func","curveBundle","curveLinear","curveMonotoneY","curveNatural","curveStep","CurveDemo","c","colors","genItems","num","Array","radius","random","round","genCircles","DragDemo","genItemsOptions","state","items","nextProps","setState","touchAction","vx_drag_es","onDragStart","raise","dragStart","dragEnd","dragMove","isDragging","onMouseDown","onMouseUp","onTouchEnd","topology","world","topojson","objects","units","points","features","f","geometry","coordinates","length","scaleQuantize","GeoDemo","centerX","centerY","vx_geo_es","translate","mercator","graticule","g","path","feature","properties","name","GlyphDemo","vx_glyph_es","GradientsDemo","h","w","genBins","dataBins","undefined","bins","count","colorMax","bucketSizeMax","circleColorScale","rectColorScale","opacityScale","HeatmapsDemo","separation","size","binWidth","values","vx_heatmap_es","gap","heatmap","heatmapColumn","cell","row","column","opacity","objectSpread","bin","binHeight","oneDecimalFormat","sizeScale","sizeColorScale","quantileScale","linearScale","thresholdScale","scaleThreshold","ordinalColorScale","ordinalColor2Scale","shapeScale","LegendDemos","LegendDemo","title","vx_legend_es","labels","datum","text","align","labelFormat","reverse","toUpperCase","display","flexDirection","shape","shapeProps","isValidElement","cloneElement","children","closeAccessor","xDomain","PI","scaleLog","angle","firstPoint","lastPoint","LineRadialDemo","curveBasisOpen","strokeLinecap","isNaN","series","reduce","rec","LinesDemo","_ref2","slicedToArray","dd","LinesDemoResponsive","LinesDemo_LinesDemo","PatternsDemo","pWidth","pHeight","vx_pattern_es","orientation","complement","letters","letterFrequency","browsers","browserUsage","k","usage","usageAccessor","frequencyAccessor","frequency","PieDemo","pieValue","outerRadius","innerRadius","cornerRadius","padAngle","pie","console","warn","arcs","arc","_pie$path$centroid","centroid","_pie$path$centroid2","centroidX","centroidY","startAngle","hasSpaceForLabel","endAngle","pieSortValues","b","_pie$path$centroid3","_pie$path$centroid4","letter","polygons","rotate","sides","PolygonsDemo","polygon","TextDemo","vx_text_es","verticalAnchor","nyAccessor","sfAccessor","minima","maxima","tempMin","tempMax","ThresholdDemo","vx_threshold_es","aboveAreaProps","belowAreaProps","clipAboveTo","clipBelowTo","accessor","toString","VoronoiDemo","_React$PureComponent","svg","handleMouseLeave","handleMouseMove","getUpdatedState","innerWidth","innerHeight","voronoiOptions","voronoiDiagram","voronoi","neighbors","Map","selected","_this$state","ref","vx_clip_path_es","clipPath","hasNeighbors","get","vx_voronoi_es","_getCoordsFromEvent","getCoordsFromEvent","closest","find","cells","halfedges","forEach","edge","edges","set","PureComponent","initialTransform","scaleX","scaleY","skewX","skewY","translateX","translateY","ZoomDemo","showMiniMap","toggleMiniMap","gen","genPhyllotaxis","phyllotaxis","vx_zoom_es","scaleXMax","scaleXMin","scaleYMax","scaleYMin","transformMatrix","zoom","position","cursor","point","Fragment","interpolateRainbow","onWheel","handleWheel","onDoubleClick","toStringInvert","center","reset","clear","prevState","Div","styled","div","_templateObject","RotatingLogo","img","_templateObject3","keyframes","_templateObject2","Header","header","_templateObject4","Grid","_templateObject5","gridGap","App","src","logo","alt","vx_responsive_es","GradientsDemo_GradientsDemo","PatternsDemo_PatternsDemo","PolygonsDemo_PolygonsDemo","HeatmapsDemo_HeatmapsDemo","TextDemo_TextDemo","LegendDemo_LegendDemos","GlyphDemo_GlyphDemo","GeoDemo_GeoDemo","ThresholdDemo_ThresholdDemo","DragDemo_DragDemo","VoronoiDemo_VoronoiDemo","CurveDemo_CurveDemo","ZoomDemo_ZoomDemo","LineRadialDemo_LineRadialDemo","PieDemo_PieDemo","BarGroupDemo_BarGroupDemo","BarGroupHorizontalDemo_BarGroupHorizontalDemo","defaultProps","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.76416113.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { curveMonotoneX } from \"@vx/curve\";\nimport { localPoint } from \"@vx/event\";\nimport { GridColumns, GridRows } from \"@vx/grid\";\nimport { appleStock, AppleStockDatum } from \"@vx/mock-data\";\nimport { scaleLinear, scaleTime } from \"@vx/scale\";\nimport { AreaClosed, Bar, Line } from \"@vx/shape\";\nimport { IWithTooltipProps, Tooltip, withTooltip } from \"@vx/tooltip\";\nimport { bisector } from \"d3-array\";\nimport { timeFormat } from \"d3-time-format\";\nimport React from \"react\";\n\nimport { IMargin } from \"../../interfaces\";\n\nconst stock = appleStock.slice(800);\nconst formatDate = timeFormat(\"%b %d, '%y\");\n\nconst min = (arr: any, fn: any) => Math.min(...arr.map(fn));\nconst max = (arr: any, fn: any) => Math.max(...arr.map(fn));\nconst extent = (arr: any, fn: any) => [min(arr, fn), max(arr, fn)];\nconst xStock = (d: AppleStockDatum) => new Date(d.date);\nconst yStock = (d: AppleStockDatum) => d.close;\nconst bisectDate = bisector((d: AppleStockDatum) => new Date(d.date)).left;\n\ninterface IRuler {\n  left: number;\n  top: number;\n}\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  onMouseLeave?: (event: MouseEvent) => void;\n  onMouseMove?: (event: MouseEvent) => void;\n  onTouchMove?: EventListener;\n  onTouchStart?: EventListener;\n  ruler?: IRuler;\n  width: number;\n}\n\nexport class AreaDemo extends React.Component<IProps> {\n  public render() {\n    const { width, height, margin, ruler } = this.props;\n    if (width < 10) {\n      return null;\n    }\n\n    const xMax = width - margin.left - margin.right;\n    const yMax = height - margin.top - margin.bottom;\n\n    const xScale = scaleTime({\n      domain: extent(stock, xStock),\n      range: [0, xMax],\n    });\n    const yScale = scaleLinear({\n      domain: [0, max(stock, yStock) + yMax / 3],\n      nice: true,\n      range: [yMax, 0],\n    });\n\n    return (\n      <svg width={width} height={height}>\n        <rect\n          x={0}\n          y={0}\n          width={width}\n          height={height}\n          fill=\"#32deaa\"\n          rx={14}\n        />\n        <defs>\n          <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n            <stop offset=\"0%\" stopColor=\"#FFFFFF\" stopOpacity={1} />\n            <stop offset=\"100%\" stopColor=\"#FFFFFF\" stopOpacity={0.2} />\n          </linearGradient>\n        </defs>\n        <GridRows\n          lineStyle={{ pointerEvents: \"none\" }}\n          scale={yScale}\n          width={xMax}\n          strokeDasharray=\"2,2\"\n          stroke=\"rgba(255,255,255,0.3)\"\n        />\n        <GridColumns\n          lineStyle={{ pointerEvents: \"none\" }}\n          scale={xScale}\n          height={yMax}\n          strokeDasharray=\"2,2\"\n          stroke=\"rgba(255,255,255,0.3)\"\n        />\n        <AreaClosed\n          curve={curveMonotoneX}\n          data={stock}\n          fill={\"url(#gradient)\"}\n          stroke={\"url(#gradient)\"}\n          strokeWidth={1}\n          x={(d: AppleStockDatum) => xScale(xStock(d))}\n          y={(d: AppleStockDatum) => yScale(yStock(d))}\n          yScale={yScale}\n        />\n        <Bar\n          x={0}\n          y={0}\n          width={width}\n          height={height}\n          fill=\"transparent\"\n          rx={14}\n          data={stock}\n          onMouseLeave={this.props.onMouseLeave}\n          onMouseMove={this.props.onMouseMove}\n          onTouchMove={this.props.onTouchMove}\n          onTouchStart={this.props.onTouchStart}\n        />\n        {ruler && (\n          <g>\n            <Line\n              from={{ x: ruler.left, y: 0 }}\n              to={{ x: ruler.left, y: yMax }}\n              stroke=\"rgba(92, 119, 235, 1.000)\"\n              strokeWidth={2}\n              style={{ pointerEvents: \"none\" }}\n              strokeDasharray=\"2,2\"\n            />\n            <circle\n              cx={ruler.left}\n              cy={ruler.top + 1}\n              r={4}\n              fill=\"black\"\n              fillOpacity={0.1}\n              stroke=\"black\"\n              strokeOpacity={0.1}\n              strokeWidth={2}\n              style={{ pointerEvents: \"none\" }}\n            />\n            <circle\n              cx={ruler.left}\n              cy={ruler.top}\n              r={4}\n              fill=\"rgba(92, 119, 235, 1.000)\"\n              stroke=\"white\"\n              strokeWidth={2}\n              style={{ pointerEvents: \"none\" }}\n            />\n          </g>\n        )}\n      </svg>\n    );\n  }\n}\n\ntype IAreaDemoWithTooltipProps = IProps & IWithTooltipProps;\n\n// TODO: improve types\nfunction handleTooltip(options: any) {\n  const { data, event, xAccessor, xScale, yScale, showTooltip } = options;\n  const { x } = localPoint(event);\n  const x0 = xScale.invert(x);\n  const index = bisectDate(data, x0, 1);\n  const d0 = data[index - 1];\n  const d1 = data[index];\n  let d = d0;\n  if (d1 && d1.date) {\n    d = x0 - xAccessor(d0) > xAccessor(d1) - x0 ? d1 : d0;\n  }\n  showTooltip({\n    tooltipData: d,\n    tooltipLeft: x,\n    tooltipTop: yScale(d.close),\n  });\n}\n\nexport const AreaDemoWithTooltip = withTooltip(\n  (props: IAreaDemoWithTooltipProps) => {\n    const { margin, height, showTooltip, tooltipData, width } = props;\n    // at first tooltipLeft and tooltipTop are undefined\n    const tooltipLeft = props.tooltipLeft || 0;\n    const tooltipTop = props.tooltipTop || 0;\n\n    const xMax = width - margin.left - margin.right;\n    const yMax = height - margin.top - margin.bottom;\n\n    const xScale = scaleTime({\n      domain: extent(stock, xStock),\n      range: [0, xMax],\n    });\n    const yScale = scaleLinear({\n      domain: [0, max(stock, yStock) + yMax / 3],\n      nice: true,\n      range: [yMax, 0],\n    });\n\n    const onMouseMove = (event: MouseEvent) => {\n      handleTooltip({\n        data: stock,\n        event,\n        showTooltip,\n        xAccessor: xStock,\n        xScale,\n        yScale,\n      });\n    };\n\n    return (\n      <div>\n        <AreaDemo\n          {...props}\n          onMouseMove={onMouseMove}\n          ruler={{ left: tooltipLeft, top: tooltipTop }}\n        />\n        {tooltipData && (\n          <div>\n            <Tooltip\n              top={tooltipTop - 12}\n              left={tooltipLeft + 12}\n              style={{\n                backgroundColor: \"rgba(92, 119, 235, 1.000)\",\n                color: \"white\",\n              }}\n            >\n              {`$${yStock(tooltipData)}`}\n            </Tooltip>\n            <Tooltip\n              top={yMax - 14}\n              left={tooltipLeft}\n              style={{\n                transform: \"translateX(-50%)\",\n              }}\n            >\n              {formatDate(xStock(tooltipData))}\n            </Tooltip>\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n","import { AxisBottom, AxisLeft, AxisRight, RenderProps } from \"@vx/axis\";\nimport { curveBasis } from \"@vx/curve\";\nimport { GradientOrangeRed } from \"@vx/gradient\";\nimport { Grid } from \"@vx/grid\";\nimport { Group } from \"@vx/group\";\nimport { DateValueDatum, genDateValue } from \"@vx/mock-data\";\nimport { IWithParentSizeProps, withParentSize } from \"@vx/responsive\";\nimport { Accessor, scaleLinear, scaleTime } from \"@vx/scale\";\nimport { Area, Line, LinePath } from \"@vx/shape\";\nimport { extent } from \"d3-array\";\nimport React from \"react\";\n// import { Text } from \"@vx/text\";\nimport { IMargin } from \"../../interfaces\";\n\nconst data = genDateValue(20);\nconst x: Accessor<DateValueDatum, Date> = (d: DateValueDatum) => d.date;\nconst y: Accessor<DateValueDatum, number> = (d: DateValueDatum) => d.value;\n\nfunction numTicksForHeight(height: number) {\n  if (height <= 300) {\n    return 3;\n  }\n  if (300 < height && height <= 600) {\n    return 5;\n  }\n  return 10;\n}\n\nfunction numTicksForWidth(width: number) {\n  if (width <= 300) {\n    return 2;\n  }\n  if (300 < width && width <= 400) {\n    return 5;\n  }\n  return 10;\n}\n\nexport interface IProps {\n  width: number;\n  height: number;\n  margin: IMargin;\n}\n\nexport const AxisDemo = (props: IProps) => {\n  const { width, height, margin } = props;\n\n  const xMax = width - margin.left - margin.right;\n  const yMax = height - margin.top - margin.bottom;\n\n  const scaleTimeOptions = {\n    domain: extent(data, x) as [Date, Date],\n    range: [0, xMax],\n  };\n  const xScale = scaleTime(scaleTimeOptions);\n\n  const linearScaleOptions = {\n    domain: [0, Math.max(...data.map(y))],\n    nice: true,\n    range: [yMax, 0],\n  };\n  const yScale = scaleLinear(linearScaleOptions);\n\n  // const tickComponent = (props: TickOptions) => {\n  //   console.log(\"tickComponent\", tickComponent, \"props\", props)\n  //   const {formattedValue, ...tickProps} = props\n  //   return (<span>{formattedValue}</span>)\n  //   // return (<text x={tickProps.x} y={tickProps.y}>{formattedValue}</text>)\n  // }\n\n  return (\n    <svg width={width} height={height}>\n      <GradientOrangeRed\n        id=\"linear\"\n        vertical={false}\n        fromOpacity={0.8}\n        toOpacity={0.3}\n      />\n      <rect x={0} y={0} width={width} height={height} fill=\"#f4419f\" rx={14} />\n      <Grid\n        top={margin.top}\n        left={margin.left}\n        xScale={xScale}\n        yScale={yScale}\n        stroke=\"rgba(142, 32, 95, 0.9)\"\n        width={xMax}\n        height={yMax}\n        numTicksRows={numTicksForHeight(height)}\n        numTicksColumns={numTicksForWidth(width)}\n      />\n      <Group top={margin.top} left={margin.left}>\n        <Area\n          data={data}\n          x={(d: DateValueDatum) => xScale(x(d))}\n          y0={(d: DateValueDatum) => yScale.range()[0]}\n          y1={(d: DateValueDatum) => yScale(y(d))}\n          stroke={\"transparent\"}\n          strokeWidth={2}\n          fill={\"url(#linear)\"}\n          curve={curveBasis}\n        />\n        <LinePath\n          data={data}\n          x={(d: DateValueDatum) => xScale(x(d))}\n          y={(d: DateValueDatum) => yScale(y(d))}\n          stroke={\"url('#linear')\"}\n          strokeWidth={2}\n          curve={curveBasis}\n        />\n      </Group>\n      <Group left={margin.left}>\n        <AxisLeft\n          top={margin.top}\n          left={0}\n          scale={yScale}\n          hideZero\n          numTicks={numTicksForHeight(height)}\n          label=\"Axis Left Label\"\n          labelProps={{\n            fill: \"#8e205f\",\n            fontFamily: \"Arial\",\n            fontSize: 12,\n            textAnchor: \"middle\",\n          }}\n          stroke=\"#1b1a1e\"\n          tickStroke=\"#8e205f\"\n          tickLabelProps={(value: any, index: number) => ({\n            dx: \"-0.25em\",\n            dy: \"0.25em\",\n            fill: \"#8e205f\",\n            fontFamily: \"Arial\",\n            fontSize: 10,\n            textAnchor: \"end\",\n          })}\n          tickComponent={({ formattedValue, ...tickProps }) => (\n            <text {...tickProps}>{formattedValue}</text>\n          )}\n        />\n        <AxisRight\n          top={margin.top}\n          left={xMax}\n          scale={yScale}\n          hideZero\n          numTicks={numTicksForHeight(height)}\n          label=\"Axis Right Label\"\n          labelProps={{\n            fill: \"#8e205f\",\n            fontFamily: \"Arial\",\n            fontSize: 12,\n            textAnchor: \"middle\",\n          }}\n          stroke=\"#1b1a1e\"\n          tickStroke=\"#8e205f\"\n          tickLabelProps={(value, index) => ({\n            dx: \"0.25em\",\n            dy: \"0.25em\",\n            fill: \"#8e205f\",\n            fontFamily: \"Arial\",\n            fontSize: 10,\n            textAnchor: \"start\",\n          })}\n        />\n        <AxisBottom\n          top={height - margin.bottom}\n          left={0}\n          scale={xScale}\n          numTicks={numTicksForWidth(width)}\n          label=\"Time\"\n        >\n          {(axis: RenderProps) => {\n            const tickLabelSize = 10;\n            const tickRotate = 45;\n            const tickColor = \"#8e205f\";\n            const axisCenter = (axis.axisToPoint.x - axis.axisFromPoint.x) / 2;\n            return (\n              <g className=\"my-custom-bottom-axis\">\n                {axis.ticks.map((tick: any, i: number) => {\n                  const tickX = tick.to.x;\n                  const tickY = tick.to.y + tickLabelSize + axis.tickLength;\n                  return (\n                    <Group\n                      key={`vx-tick-${tick.value}-${i}`}\n                      className={\"vx-axis-tick\"}\n                    >\n                      <Line from={tick.from} to={tick.to} stroke={tickColor} />\n                      <text\n                        transform={`translate(${tickX}, ${tickY}) rotate(${tickRotate})`}\n                        fontSize={tickLabelSize}\n                        textAnchor=\"middle\"\n                        fill={tickColor}\n                      >\n                        {tick.formattedValue}\n                      </text>\n                    </Group>\n                  );\n                })}\n                <text\n                  textAnchor=\"middle\"\n                  transform={`translate(${axisCenter}, 50)`}\n                  fontSize=\"8\"\n                >\n                  {axis.label}\n                </text>\n              </g>\n            );\n          }}\n        </AxisBottom>\n      </Group>\n    </svg>\n  );\n};\n\ninterface IAxisDemoResponsiveProps extends IWithParentSizeProps {\n  margin: IMargin;\n}\n\nexport const AxisDemoResponsive = withParentSize(\n  (props: IAxisDemoResponsiveProps) => {\n    const { margin, parentWidth } = props;\n    // TODO: parentHeight causes a resize every time\n    return <AxisDemo height={400} width={parentWidth} margin={margin} />;\n  }\n);\n","import { AxisBottom, TextAnchor } from \"@vx/axis\";\nimport { Group } from \"@vx/group\";\nimport { cityTemperature, CityTemperatureDatum } from \"@vx/mock-data\";\nimport { scaleBand, scaleLinear, scaleOrdinal } from \"@vx/scale\";\nimport { BarGroup } from \"@vx/shape\";\nimport { timeFormat, timeParse } from \"d3-time-format\";\nimport React from \"react\";\n\nimport { IMargin } from \"../../interfaces\";\n\nconst blue = \"#aeeef8\";\nconst green = \"#e5fd3d\";\nconst purple = \"#9caff6\";\nconst bg = \"#612efb\";\n\nconst data = cityTemperature.slice(0, 8);\nconst keys = Object.keys(data[0]).filter((d: string) => d !== \"date\");\n\nconst parseDate = timeParse(\"%Y%m%d\");\nconst format = timeFormat(\"%b %d\");\nconst formatDate = (dateString: string) => {\n  const date = parseDate(dateString);\n  return format(date!);\n};\n\nconst x0Accessor = (d: CityTemperatureDatum) => d.date;\n\nconst x0Scale = scaleBand({\n  domain: data.map(x0Accessor),\n  padding: 0.2,\n});\n\nconst x1Scale = scaleBand({\n  domain: keys,\n  padding: 0.1,\n});\n\nconst yDomain = [\n  0,\n  Math.max(\n    ...data.map((d: any) => Math.max(...keys.map((key: any) => d[key])))\n  ),\n];\nconst yScale = scaleLinear({\n  domain: yDomain,\n});\n\nconst colorScale = scaleOrdinal({\n  domain: keys,\n  range: [blue, green, purple],\n});\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n}\n\nexport class BarGroupDemo extends React.Component<IProps> {\n  public constructor(props: IProps) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.renderBar = this.renderBar.bind(this);\n    this.renderBarGroup = this.renderBarGroup.bind(this);\n  }\n\n  public render() {\n    const { height, margin, width } = this.props;\n\n    const xMax = width;\n    const yMax = height - margin.top - 100;\n\n    x0Scale.rangeRound([0, xMax]);\n    x1Scale.rangeRound([0, x0Scale.bandwidth()]);\n    yScale.range([yMax, 0]);\n\n    return (\n      <svg width={width} height={height}>\n        <rect x={0} y={0} width={width} height={height} fill={bg} rx={14} />\n        <Group top={margin.top}>\n          <BarGroup\n            data={data}\n            keys={keys}\n            height={yMax}\n            x0={x0Accessor}\n            x0Scale={x0Scale}\n            x1Scale={x1Scale}\n            yScale={yScale}\n            color={colorScale}\n          >\n            {(barGroups: any) => {\n              return barGroups.map(this.renderBarGroup);\n            }}\n          </BarGroup>\n        </Group>\n        <AxisBottom\n          top={yMax + margin.top}\n          tickFormat={formatDate}\n          scale={x0Scale}\n          stroke={green}\n          tickStroke={green}\n          hideAxisLine={true}\n          tickLabelProps={tickLabelPropsFunction}\n        />\n      </svg>\n    );\n  }\n\n  private handleClick(event: React.MouseEvent) {\n    const dataset = (event.target as any).dataset;\n    const { key, value } = dataset;\n    alert(JSON.stringify({ key, value }));\n  }\n\n  private renderBar(bar: any, i: number) {\n    return (\n      <rect\n        data-value={bar.value}\n        data-key={bar.key}\n        fill={bar.color}\n        height={bar.height}\n        key={bar.key}\n        onClick={this.handleClick}\n        rx={4}\n        x={bar.x}\n        y={bar.y}\n        width={bar.width}\n      />\n    );\n  }\n\n  private renderBarGroup(barGroup: any, i: number) {\n    const { x0, bars } = barGroup;\n    const date = x0Scale(x0);\n    const keyGroup = `group-${i}-x0-${x0}-date-${date}`;\n    return (\n      <Group key={keyGroup} left={x0}>\n        {bars.map(this.renderBar)}\n      </Group>\n    );\n  }\n}\n\nfunction tickLabelPropsFunction(value: any, index: number) {\n  const textAnchor = \"middle\" as TextAnchor;\n  return { fill: green, fontSize: 11, textAnchor };\n}\n","import { AxisLeft, TextAnchor } from \"@vx/axis\";\nimport { Group } from \"@vx/group\";\nimport { cityTemperature } from \"@vx/mock-data\";\nimport { scaleBand, scaleLinear, scaleOrdinal } from \"@vx/scale\";\nimport { Bar, BarGroupHorizontal } from \"@vx/shape\";\nimport { timeFormat, timeParse } from \"d3-time-format\";\nimport React from \"react\";\n\nimport { IMargin } from \"../../interfaces\";\n\nconst parseDate = timeParse(\"%Y%m%d\");\nconst format = timeFormat(\"%b %d\");\nconst formatDate = (dateString: string) => {\n  const date = parseDate(dateString);\n  return format(date!);\n};\nconst max = (arr: any, fn: any) => Math.max(...arr.map(fn));\n\nconst data = cityTemperature.slice(0, 4);\nconst keys = Object.keys(data[0]).filter(d => d !== \"date\");\n\nconst y0Accessor = (d: any) => d.date;\n\nconst y0Scale = scaleBand({\n  domain: data.map(y0Accessor),\n  padding: 0.2,\n});\nconst y1Scale = scaleBand({\n  domain: keys,\n  padding: 0.1,\n});\nconst xScale = scaleLinear({\n  domain: [0, max(data, (d: any) => max(keys, (key: any) => d[key]))],\n});\nconst color = scaleOrdinal({\n  domain: keys,\n  range: [\"#aeeef8\", \"#e5fd3d\", \"#9caff6\"],\n});\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n}\n\nexport class BarGroupHorizontalDemo extends React.Component<IProps> {\n  public constructor(props: IProps) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.renderBar = this.renderBar.bind(this);\n    this.renderBarGroup = this.renderBarGroup.bind(this);\n  }\n\n  public render() {\n    const { height, margin, width } = this.props;\n\n    const xMax = width - margin.left - margin.right;\n    const yMax = height - 100;\n\n    y0Scale.rangeRound([0, yMax]);\n    y1Scale.rangeRound([0, y0Scale.bandwidth()]);\n    xScale.rangeRound([xMax, 0]);\n\n    return (\n      <svg width={width} height={height}>\n        <rect\n          x={0}\n          y={0}\n          width={width}\n          height={height}\n          fill=\"#612efb\"\n          rx={14}\n        />\n        <Group top={margin.top} left={margin.left}>\n          <BarGroupHorizontal\n            data={data}\n            keys={keys}\n            width={xMax}\n            y0={y0Accessor}\n            y0Scale={y0Scale}\n            y1Scale={y1Scale}\n            xScale={xScale}\n            color={color}\n          >\n            {(barGroups: any) => {\n              return barGroups.map(this.renderBarGroup);\n            }}\n          </BarGroupHorizontal>\n          <AxisLeft\n            scale={y0Scale}\n            stroke=\"#e5fd3d\"\n            tickStroke=\"#e5fd3d\"\n            tickFormat={formatDate}\n            hideAxisLine\n            tickLabelProps={tickLabelPropsFunction}\n          />\n        </Group>\n      </svg>\n    );\n  }\n\n  private handleClick(event: React.MouseEvent) {\n    const dataset = (event.target as any).dataset;\n    const { key, value } = dataset;\n    alert(JSON.stringify({ key, value }));\n  }\n\n  private renderBar(bar: any, i: number) {\n    return (\n      <rect\n        data-value={bar.value}\n        data-key={bar.key}\n        fill={bar.color}\n        height={bar.height}\n        key={bar.key}\n        onClick={this.handleClick}\n        rx={4}\n        x={bar.x}\n        y={bar.y}\n        width={bar.width}\n      />\n    );\n  }\n\n  private renderBarGroup(barGroup: any, i: number) {\n    const { y0, bars } = barGroup;\n    const key = `group-${i}-y0-${y0}`;\n    return (\n      <Group key={y0} top={y0}>\n        {bars.map(this.renderBar)}\n      </Group>\n    );\n  }\n}\n\nfunction tickLabelPropsFunction(value: any, i: number) {\n  const textAnchor = \"end\" as TextAnchor;\n  return {\n    dy: \"0.33em\",\n    fill: \"#e5fd3d\",\n    fontSize: 11,\n    textAnchor,\n  };\n}\n","import {\n  curveBasis,\n  curveBundle,\n  curveLinear,\n  curveMonotoneX,\n  curveMonotoneY,\n  curveNatural,\n  curveStep,\n} from \"@vx/curve\";\nimport { GridColumns, GridRows } from \"@vx/grid\";\nimport { Group } from \"@vx/group\";\nimport { DateValueDatum, genDateValue } from \"@vx/mock-data\";\nimport {\n  scaleLinear,\n  ScaleLinearOptions,\n  scaleTime,\n  ScaleTimeOptions,\n} from \"@vx/scale\";\nimport { LinePath } from \"@vx/shape\";\nimport { extent } from \"d3-array\";\nimport React from \"react\";\n\nimport { IMargin } from \"../../interfaces\";\n\nconst data = genDateValue(15);\n\nconst dateAccessor = (d: DateValueDatum) => d.date;\nconst valueAccessor = (d: DateValueDatum) => d.value;\n\nconst timeDomain = extent(data.map(dateAccessor)) as [Date, Date];\nconst scaleTimeOptions: ScaleTimeOptions = {\n  domain: timeDomain,\n};\nconst xScale = scaleTime(scaleTimeOptions);\n\nconst scaleLinearOptions: ScaleLinearOptions = {\n  domain: [0, Math.max(...data.map(valueAccessor))],\n};\nconst yScale = scaleLinear(scaleLinearOptions);\n\nconst xAccessor = (d: DateValueDatum) => xScale(dateAccessor(d));\nconst yAccessor = (d: DateValueDatum) => yScale(valueAccessor(d));\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n}\n\nconst curves = [\n  { func: curveBasis, stroke: \"#ffffe5\", strokeDasharray: \"2,2\" },\n  { func: curveBundle, stroke: \"#f7fcb9\", strokeDasharray: \"4,1\" },\n  { func: curveLinear, stroke: \"#d9f0a3\", strokeDasharray: \"4\" },\n  { func: curveMonotoneX, stroke: \"#addd8e\", strokeDasharray: \"4,1,2\" },\n  { func: curveMonotoneY, stroke: \"#78c679\", strokeDasharray: \"2,2\" },\n  { func: curveNatural, stroke: \"#41ab5d\", strokeDasharray: \"5,5\" },\n  { func: curveStep, stroke: \"#238443\", strokeDasharray: \"none\" },\n];\n\nexport class CurveDemo extends React.Component<IProps> {\n  public render() {\n    const { height, margin, width } = this.props;\n    const xMax = width - margin.left - margin.right;\n    const yMax = height - margin.top - margin.bottom;\n\n    xScale.range([0, xMax]);\n    yScale.range([yMax, 0]);\n\n    return (\n      <svg width={width} height={height}>\n        <rect\n          fill=\"#f3f3f3\"\n          height={height}\n          rx={14}\n          width={width}\n          x={0}\n          y={0}\n        />\n        <Group left={margin.left} top={margin.top}>\n          <GridRows\n            height={yMax}\n            scale={yScale}\n            stroke=\"#e0e0e0\"\n            width={xMax}\n          />\n          <GridColumns\n            height={yMax}\n            scale={xScale}\n            stroke=\"#e0e0e0\"\n            width={xMax}\n          />\n          {curves.map((c, i) => {\n            return (\n              <LinePath\n                data={data}\n                key={i}\n                x={xAccessor}\n                y={yAccessor}\n                stroke={c.stroke}\n                strokeWidth={2}\n                strokeDasharray={c.strokeDasharray}\n                curve={c.func}\n              />\n            );\n          })}\n        </Group>\n      </svg>\n    );\n  }\n}\n","import { Drag, IDragProps, IItem, raise } from \"@vx/drag\";\nimport { LinearGradient } from \"@vx/gradient\";\nimport { scaleOrdinal, ScaleOrdinal } from \"@vx/scale\";\nimport React, { ReactText } from \"react\";\n\nimport { IMargin } from \"../../interfaces\";\n\ninterface IGenItemsOptions {\n  height: number;\n  width: number;\n}\n\ninterface IGenCirclesOptions {\n  height: number;\n  num: number;\n  width: number;\n}\n\nconst colors = [\n  \"#025aac\",\n  \"#02cff9\",\n  \"#02efff\",\n  \"#03aeed\",\n  \"#0384d7\",\n  \"#edfdff\",\n  \"#ab31ff\",\n  \"#5924d7\",\n  \"#d145ff\",\n  \"#1a02b1\",\n  \"#e582ff\",\n  \"#ff00d4\",\n  \"#270eff\",\n  \"#827ce2\",\n];\n\nfunction genCircles(options: IGenCirclesOptions) {\n  const { num, width, height } = options;\n  const circles = Array(num)\n    .fill(1)\n    .map((d: number, i: number) => {\n      const radius = 25 - Math.random() * 20;\n      const item: IItem = {\n        id: i,\n        radius,\n        x: Math.round(Math.random() * (width - radius * 2) + radius),\n        y: Math.round(Math.random() * (height - radius * 2) + radius),\n      };\n      return item;\n    });\n  return circles;\n}\n\nconst genItems = (options: IGenItemsOptions) => {\n  const { width, height } = options;\n  const genCirclesOptions = {\n    height,\n    num: width < 360 ? 40 : 185,\n    width,\n  };\n  const items = genCircles(genCirclesOptions);\n  return items;\n};\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n}\n\ninterface IState {\n  items: IItem[];\n}\n\nexport class DragDemo extends React.Component<IProps, IState> {\n  private colorScale: ScaleOrdinal<ReactText, string>;\n\n  constructor(props: IProps) {\n    super(props);\n    const genItemsOptions = { height: props.height, width: props.width };\n    this.state = {\n      items: genItems(genItemsOptions),\n    };\n    this.colorScale = scaleOrdinal({\n      domain: this.state.items.map((d: IItem) => d.id),\n      range: colors,\n    });\n  }\n\n  public componentWillReceiveProps(nextProps: IProps) {\n    if (nextProps.width !== this.props.width) {\n      const genItemsOptions = {\n        height: nextProps.height,\n        width: nextProps.width,\n      };\n      this.setState(() => {\n        return {\n          items: genItems(genItemsOptions),\n        };\n      });\n    }\n  }\n\n  public render() {\n    const { width, height } = this.props;\n    return (\n      <div className=\"Drag\" style={{ touchAction: \"none\" }}>\n        <svg width={width} height={height}>\n          <LinearGradient id=\"stroke\" from=\"#ff00a5\" to=\"#ffc500\" />\n          <rect fill=\"#c4c3cb\" width={width} height={height} rx={14} />\n          {this.state.items.map((d: IItem, i: number) => (\n            <Drag\n              key={`${d.id}`}\n              height={height}\n              width={width}\n              onDragStart={() => {\n                // svg follows the painter model\n                // so we need to move the data item\n                // to end of the array for it to be drawn\n                // \"on top of\" the other data items\n                this.setState(state => {\n                  return {\n                    items: raise(state.items, i),\n                  };\n                });\n              }}\n            >\n              {(props: IDragProps) => {\n                const {\n                  dragStart,\n                  dragEnd,\n                  dragMove,\n                  isDragging,\n                  dx,\n                  dy,\n                } = props;\n                return (\n                  <circle\n                    cx={d.x}\n                    cy={d.y}\n                    fill={isDragging ? \"url(#stroke)\" : this.colorScale(d.id)}\n                    fillOpacity={0.9}\n                    key={`dot-${d.id}`}\n                    onMouseDown={dragStart}\n                    onMouseMove={dragMove}\n                    onMouseUp={dragEnd}\n                    onTouchEnd={dragEnd}\n                    onTouchMove={dragMove}\n                    onTouchStart={dragStart}\n                    r={isDragging ? d.radius + 4 : d.radius}\n                    stroke={isDragging ? \"white\" : \"transparent\"}\n                    strokeWidth={2}\n                    transform={`translate(${dx}, ${dy})`}\n                  />\n                );\n              }}\n            </Drag>\n          ))}\n        </svg>\n      </div>\n    );\n  }\n}\n","import { Graticule, Mercator } from \"@vx/geo\";\nimport { scaleQuantize } from \"@vx/scale\";\nimport { extent } from \"d3-array\";\nimport { Feature, FeatureCollection, Geometry, Polygon } from \"geojson\";\nimport React from \"react\";\nimport * as topojson from \"topojson-client\";\n// tslint:disable-next-line no-implicit-dependencies\nimport { Topology } from \"topojson-specification\";\n\nimport worldTopoJson from \"../../static/world-topo.json\";\n\nconst topology = (worldTopoJson as unknown) as Topology;\n\nconst featureOrFeatureCollection = topojson.feature(\n  topology,\n  topology.objects.units\n);\nconst world = featureOrFeatureCollection as FeatureCollection;\n\nconst backgroundColor = \"#f9f7e8\";\nconst countryBordersColor = \"#f9f7e8\";\n\nconst points = world.features.map((f: Feature) => {\n  const polygon = f.geometry as Polygon;\n  return polygon.coordinates.length;\n});\nconst domain = extent(points);\n\nconst colorScale = scaleQuantize({\n  domain,\n  range: [\n    \"#ffb01d\",\n    \"#ffa020\",\n    \"#ff9221\",\n    \"#ff8424\",\n    \"#ff7425\",\n    \"#fc5e2f\",\n    \"#f94b3a\",\n    \"#f63a48\",\n  ],\n});\n\ninterface IProps {\n  height: number;\n  width: number;\n}\n\ninterface IMercator {\n  features: Feature[];\n  path: (g: Geometry) => string; // SVG <path> string\n}\n\nexport class GeoDemo extends React.Component<IProps> {\n  public render() {\n    const { height, width } = this.props;\n    const centerX = width / 2;\n    const centerY = height / 2;\n    const scale = (width / 630) * 100;\n\n    return (\n      <svg width={width} height={height}>\n        <rect\n          x={0}\n          y={0}\n          width={width}\n          height={height}\n          fill={backgroundColor}\n          rx={14}\n        />\n        <Mercator\n          data={world.features}\n          scale={scale}\n          translate={[centerX, centerY + 50]}\n        >\n          {(mercator: IMercator) => {\n            return (\n              <g>\n                <Graticule\n                  graticule={(g: Geometry) => {\n                    return mercator.path(g);\n                  }}\n                  stroke={\"rgba(33,33,33,0.05)\"}\n                />\n                {mercator.features.map((feature: any, i: number) => {\n                  // console.warn(\"feature\", feature);\n                  const { feature: f } = feature;\n                  return (\n                    <path\n                      key={`map-feature-${i}`}\n                      d={mercator.path(f)}\n                      fill={colorScale(f.geometry.coordinates.length)}\n                      stroke={countryBordersColor}\n                      strokeWidth={0.5}\n                      onClick={(event: React.MouseEvent) => {\n                        alert(`clicked: ${f.properties.name} (${f.id})`);\n                      }}\n                    />\n                  );\n                })}\n              </g>\n            );\n          }}\n        </Mercator>\n      </svg>\n    );\n  }\n}\n","import { curveBasis, curveMonotoneX } from \"@vx/curve\";\nimport { GlyphDot } from \"@vx/glyph\";\nimport { Group } from \"@vx/group\";\nimport { DateValueDatum, genDateValue } from \"@vx/mock-data\";\nimport {\n  scaleLinear,\n  ScaleLinearOptions,\n  scaleTime,\n  ScaleTimeOptions,\n} from \"@vx/scale\";\nimport { LinePath } from \"@vx/shape\";\nimport { extent } from \"d3-array\";\nimport React from \"react\";\nimport { IMargin } from \"../../interfaces\";\n\nconst data = genDateValue(15);\n\nconst dateAccessor = (d: DateValueDatum) => d.date;\nconst valueAccessor = (d: DateValueDatum) => d.value;\n\nconst timeDomain = extent(data.map(dateAccessor)) as [Date, Date];\nconst scaleTimeOptions: ScaleTimeOptions = {\n  domain: timeDomain,\n};\nconst xScale = scaleTime(scaleTimeOptions);\n\nconst scaleLinearOptions: ScaleLinearOptions = {\n  domain: [0, Math.max(...data.map(valueAccessor))],\n};\nconst yScale = scaleLinear(scaleLinearOptions);\n\nconst x = (d: DateValueDatum) => xScale(dateAccessor(d));\nconst y = (d: DateValueDatum) => yScale(valueAccessor(d));\n\nconst primary = \"#8921e0\";\nconst secondary = \"#00f2ff\";\nconst contrast = \"#ffffff\";\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n}\n\nexport class GlyphDemo extends React.Component<IProps> {\n  public render() {\n    const { height, margin, width } = this.props;\n    const xMax = width - margin.left - margin.right;\n    const yMax = height - margin.top - margin.bottom;\n\n    xScale.range([0, xMax]);\n    yScale.range([yMax, 0]);\n\n    return (\n      <svg width={width} height={height}>\n        <rect\n          x={0}\n          y={0}\n          width={width}\n          height={height}\n          fill={secondary}\n          rx={14}\n        />\n        <Group top={margin.top}>\n          <LinePath\n            data={data}\n            x={x}\n            y={y}\n            stroke={primary}\n            strokeWidth={2}\n            strokeDasharray=\"2,2\"\n            curve={curveBasis}\n          />\n          <LinePath\n            data={data}\n            x={x}\n            y={y}\n            stroke={primary}\n            strokeWidth={3}\n            curve={curveMonotoneX}\n          />\n          {data.map((d, i) => {\n            const cx = x(d);\n            const cy = y(d);\n            return (\n              <g key={`line-point-${i}`}>\n                <GlyphDot\n                  cx={cx}\n                  cy={cy}\n                  r={6}\n                  fill={contrast}\n                  stroke={secondary}\n                  strokeWidth={10}\n                />\n                <GlyphDot\n                  cx={cx}\n                  cy={cy}\n                  r={6}\n                  fill={secondary}\n                  stroke={primary}\n                  strokeWidth={3}\n                />\n                <GlyphDot cx={cx} cy={cy} r={4} fill={contrast} />\n              </g>\n            );\n          })}\n        </Group>\n      </svg>\n    );\n  }\n}\n","import {\n  GradientDarkgreenGreen,\n  GradientLightgreenGreen,\n  GradientOrangeRed,\n  GradientPinkBlue,\n  GradientPinkRed,\n  GradientPurpleOrange,\n  GradientPurpleRed,\n  GradientSteelPurple,\n  GradientTealBlue,\n  RadialGradient,\n} from \"@vx/gradient\";\nimport { Bar } from \"@vx/shape\";\nimport React from \"react\";\n\ninterface IProps {\n  height: number;\n  width: number;\n}\n\nexport const GradientsDemo = (props: IProps) => {\n  const { height, width } = props;\n  const h = (height - 50) / 2;\n  const w = width / 4;\n  return (\n    <svg height={height} width={width}>\n      <GradientDarkgreenGreen id=\"DarkgreenGreen\" />\n      <GradientLightgreenGreen id=\"LightgreenGreen\" />\n      <GradientOrangeRed id=\"OrangeRed\" />\n      <GradientPinkBlue id=\"PinkBlue\" />\n      <GradientPinkRed id=\"PinkRed\" vertical={false} />\n      <GradientPurpleOrange id=\"PurpleOrange\" vertical={false} />\n      <GradientPurpleRed id=\"PurpleRed\" vertical={false} />\n      <RadialGradient from=\"#55bdd5\" to=\"#4f3681\" id=\"Radial\" r={\"80%\"} />\n      <GradientSteelPurple id=\"SteelPurple\" vertical={false} />\n      <GradientTealBlue id=\"TealBlue\" vertical={false} />\n      <Bar\n        x={0}\n        y={0}\n        width={w}\n        height={h}\n        fill={`url(#LightgreenGreen)`}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n        rx={14}\n      />\n      <Bar\n        x={w}\n        y={0}\n        width={w}\n        height={h}\n        fill={`url(#OrangeRed)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n      <Bar\n        x={w * 2}\n        y={0}\n        width={w}\n        height={h}\n        fill={`url(#PinkBlue)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n      <Bar\n        x={w * 3}\n        y={0}\n        width={w}\n        height={h}\n        fill={`url(#DarkgreenGreen)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n      <Bar\n        x={0}\n        y={h}\n        width={w}\n        height={h}\n        fill={`url(#PinkRed)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n      <Bar\n        x={w}\n        y={h}\n        width={w}\n        height={h}\n        fill={`url(#TealBlue)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n      <Bar\n        x={w * 2}\n        y={h}\n        width={w}\n        height={h}\n        fill={`url(#PurpleOrange)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n      <Bar\n        x={w * 3}\n        y={h}\n        width={w}\n        height={h}\n        fill={`url(#Radial)`}\n        rx={14}\n        stroke=\"#ffffff\"\n        strokeWidth={8}\n      />\n    </svg>\n  );\n};\n","import { Group } from \"@vx/group\";\nimport { HeatmapCircle, HeatmapRect } from \"@vx/heatmap\";\nimport { Bin, genBins } from \"@vx/mock-data\";\nimport { scaleLinear } from \"@vx/scale\";\nimport React from \"react\";\n\nimport { IMargin } from \"../../interfaces\";\n\nconst hot1 = \"#77312f\";\nconst hot2 = \"#f33d15\";\nconst cool1 = \"#122549\";\nconst cool2 = \"#b4fbde\";\nconst bg = \"#28272c\";\n\nconst data = genBins(16, 16);\n\ninterface IHeatmapBinDatum {\n  bin: number;\n  bins: number[];\n}\n\ninterface IHeatmapCell {\n  bin: Bin;\n  color: string;\n  column: number;\n  count: number;\n  cx: number;\n  cy: number;\n  datum: IHeatmapBinDatum;\n  gap: number;\n  height: number;\n  opacity: number;\n  r: number;\n  radius: number;\n  row: number;\n  width: number;\n  x: number;\n  y: number;\n}\n\ntype IHeatmapColumn = IHeatmapCell[];\n\n// utils\nconst max = (dataBins: Bin[], value = (d: any) => d) =>\n  Math.max(...dataBins.map(value));\nconst min = (values: number[], value = (d: any) => d) =>\n  Math.min(...values.map(value));\n\n// accessors\nconst bins = (d: any) => d.bins;\nconst count = (d: any) => d.count;\n\nconst colorMax = max(data, (d: any) => max(bins(d), count));\nconst bucketSizeMax = max(data, (d: any) => bins(d).length);\n\n// scales\nconst xScale = scaleLinear({\n  domain: [0, data.length],\n});\nconst yScale = scaleLinear({\n  domain: [0, bucketSizeMax],\n});\nconst circleColorScale = scaleLinear({\n  domain: [0, colorMax],\n  range: [hot1, hot2],\n});\nconst rectColorScale = scaleLinear({\n  domain: [0, colorMax],\n  range: [cool1, cool2],\n});\nconst opacityScale = scaleLinear({\n  domain: [0, colorMax],\n  range: [0.1, 1],\n});\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  separation: number;\n  width: number;\n}\n\nexport const HeatmapsDemo = (props: IProps) => {\n  const { height, margin, separation, width } = props;\n  // bounds\n  let size = width;\n  if (size > margin.left + margin.right) {\n    size = width - margin.left - margin.right - separation;\n  }\n\n  const xMax = size / 2;\n  const yMax = height - margin.bottom - margin.top;\n\n  const binWidth = xMax / data.length;\n  const binHeight = yMax / bucketSizeMax;\n  const radius = min([binWidth, binHeight]) / 2;\n\n  xScale.range([0, xMax]);\n  yScale.range([yMax, 0]);\n\n  return (\n    <svg width={width} height={height}>\n      <rect x={0} y={0} width={width} height={height} rx={14} fill={bg} />\n      <Group top={margin.top} left={margin.left}>\n        <HeatmapCircle\n          data={data}\n          xScale={xScale}\n          yScale={yScale}\n          colorScale={circleColorScale}\n          opacityScale={opacityScale}\n          radius={radius}\n          gap={2}\n        >\n          {(heatmap: IHeatmapCell[][]) => {\n            return heatmap.map((heatmapColumn: IHeatmapColumn) => {\n              return heatmapColumn.map((cell: IHeatmapCell) => {\n                return (\n                  <circle\n                    key={`heatmap-circle-${cell.row}-${cell.column}`}\n                    className=\"vx-heatmap-circle\"\n                    cx={cell.cx}\n                    cy={cell.cy}\n                    r={cell.r > 0 ? cell.r : 0}\n                    fill={cell.color}\n                    fillOpacity={cell.opacity}\n                    onClick={(event: React.MouseEvent) => {\n                      const { row, column } = cell;\n                      alert(JSON.stringify({ row, column, ...cell.bin }));\n                    }}\n                  />\n                );\n              });\n            });\n          }}\n        </HeatmapCircle>\n      </Group>\n      <Group top={margin.top} left={xMax + margin.left + separation}>\n        <HeatmapRect\n          data={data}\n          xScale={xScale}\n          yScale={yScale}\n          colorScale={rectColorScale}\n          opacityScale={opacityScale}\n          binWidth={binWidth}\n          binHeight={binWidth}\n          gap={2}\n        >\n          {(heatmap: IHeatmapCell[][]) => {\n            return heatmap.map((heatmapColumn: IHeatmapColumn) => {\n              return heatmapColumn.map((cell: IHeatmapCell) => {\n                return (\n                  <rect\n                    key={`heatmap-rect-${cell.row}-${cell.column}`}\n                    className=\"vx-heatmap-rect\"\n                    width={cell.width > 0 ? cell.width : 0}\n                    height={cell.height > 0 ? cell.height : 0}\n                    x={cell.x}\n                    y={cell.y}\n                    fill={cell.color}\n                    fillOpacity={cell.opacity}\n                    onClick={(event: React.MouseEvent) => {\n                      const { row, column } = cell;\n                      alert(JSON.stringify({ row, column, ...cell.bin }));\n                    }}\n                  />\n                );\n              });\n            });\n          }}\n        </HeatmapRect>\n      </Group>\n    </svg>\n  );\n};\n","import { GlyphDiamond, GlyphStar, GlyphTriangle, GlyphWye } from \"@vx/glyph\";\nimport {\n  Legend,\n  LegendItem,\n  LegendLabel,\n  LegendLinear,\n  LegendOrdinal,\n  LegendQuantile,\n  LegendSize,\n  LegendThreshold,\n} from \"@vx/legend\";\nimport {\n  scaleLinear,\n  scaleOrdinal,\n  scaleQuantize,\n  scaleThreshold,\n} from \"@vx/scale\";\nimport { format } from \"d3-format\";\nimport React from \"react\";\n\nconst oneDecimalFormat = format(\".1f\");\n\nconst sizeScale = scaleLinear({\n  domain: [0, 10],\n  range: [10, 30],\n});\n\nconst sizeColorScale = scaleLinear({\n  domain: [0, 10],\n  range: [\"#75fcfc\", \"#3236b8\"],\n});\n\nconst quantileScale = scaleQuantize({\n  domain: [0, 0.15],\n  range: [\"#eb4d70\", \"#f19938\", \"#6ce18b\", \"#78f6ef\", \"#9096f8\"],\n});\n\nconst linearScale = scaleLinear({\n  domain: [0, 10],\n  range: [\"#ed4fbb\", \"#e9a039\"],\n});\n\nconst thresholdScale = scaleThreshold({\n  domain: [0.01, 0.02, 0.04, 0.06, 0.08, 0.1],\n  range: [\"#f2f0f7\", \"#dadaeb\", \"#bcbddc\", \"#9e9ac8\", \"#756bb1\", \"#54278f\"],\n});\n\nconst ordinalColorScale = scaleOrdinal({\n  domain: [\"a\", \"b\", \"c\", \"d\"],\n  range: [\"#66d981\", \"#71f5ef\", \"#4899f1\", \"#7d81f6\"],\n});\n\nconst ordinalColor2Scale = scaleOrdinal({\n  domain: [\"a\", \"b\", \"c\", \"d\"],\n  range: [\"#fae856\", \"#f29b38\", \"#e64357\", \"#8386f7\"],\n});\n\nconst shapeScale = scaleOrdinal({\n  domain: [\"a\", \"b\", \"c\", \"d\", \"e\"],\n  range: [\n    <GlyphStar size={50} top={50 / 6} left={50 / 6} fill=\"#dd59b8\" />,\n    <GlyphWye size={50} top={50 / 6} left={50 / 6} fill=\"#de6a9a\" />,\n    <GlyphTriangle size={50} top={50 / 6} left={50 / 6} fill=\"#de7d7b\" />,\n    <GlyphDiamond size={50} top={50 / 6} left={50 / 6} fill=\"#df905f\" />,\n    (props: any) => (\n      <text fontSize=\"12\" dy=\"1em\" dx=\".33em\" fill=\"#e0a346\">\n        $\n      </text>\n    ),\n  ],\n});\n\ninterface IProps {\n  height: number;\n  width: number;\n}\n\nexport const LegendDemos = (props: IProps) => {\n  return (\n    <div className=\"chart\">\n      <LegendDemo title=\"Size\">\n        <LegendSize scale={sizeScale}>\n          {(labels: any) => {\n            return labels.map((label: any) => {\n              const size = sizeScale(label.datum);\n              const color = sizeColorScale(label.datum);\n              return (\n                <LegendItem\n                  key={`legend-${label.text}-${label.index}`}\n                  onClick={(event: React.MouseEvent) => {\n                    alert(`clicked: ${JSON.stringify(label)}`);\n                  }}\n                >\n                  <svg width={size} height={size} style={{ margin: \"5px 0\" }}>\n                    <circle\n                      cx={size / 2}\n                      cy={size / 2}\n                      fill={color}\n                      r={size / 2}\n                    />\n                  </svg>\n                  <LegendLabel align={\"left\"} margin={\"0 4px\"}>\n                    {label.text}\n                  </LegendLabel>\n                </LegendItem>\n              );\n            });\n          }}\n        </LegendSize>\n      </LegendDemo>\n      <LegendDemo title=\"Quantile\">\n        <LegendQuantile scale={quantileScale}>\n          {(labels: any) => {\n            return labels.map((label: any, i: number) => {\n              const size = 15;\n              return (\n                <LegendItem\n                  key={`legend-${i}`}\n                  onClick={(event: React.MouseEvent) => {\n                    alert(`clicked: ${JSON.stringify(label)}`);\n                  }}\n                >\n                  <svg width={size} height={size} style={{ margin: \"2px 0\" }}>\n                    <circle\n                      fill={label.value}\n                      r={size / 2}\n                      cx={size / 2}\n                      cy={size / 2}\n                    />\n                  </svg>\n                  <LegendLabel align={\"left\"} margin={\"0 4px\"}>\n                    {label.text}\n                  </LegendLabel>\n                </LegendItem>\n              );\n            });\n          }}\n        </LegendQuantile>\n        ;\n      </LegendDemo>\n      <LegendDemo title=\"Linear\">\n        <LegendLinear\n          scale={linearScale}\n          labelFormat={(d: any, i: number) => {\n            if (i % 2 === 0) {\n              return oneDecimalFormat(d);\n            }\n            return \"\";\n          }}\n        >\n          {(labels: any) => {\n            return labels.map((label: any, i: number) => {\n              const size = 15;\n              return (\n                <LegendItem\n                  key={`legend-quantile-${i}`}\n                  onClick={(event: React.MouseEvent) => {\n                    alert(`clicked: ${JSON.stringify(label)}`);\n                  }}\n                >\n                  <svg width={size} height={size} style={{ margin: \"2px 0\" }}>\n                    <circle\n                      fill={label.value}\n                      r={size / 2}\n                      cx={size / 2}\n                      cy={size / 2}\n                    />\n                  </svg>\n                  <LegendLabel align={\"left\"} margin={\"0 4px\"}>\n                    {label.text}\n                  </LegendLabel>\n                </LegendItem>\n              );\n            });\n          }}\n        </LegendLinear>\n      </LegendDemo>\n      <LegendDemo title=\"Threshold\">\n        <LegendThreshold scale={thresholdScale}>\n          {(labels: any) => {\n            return labels.reverse().map((label: any, i: number) => {\n              const size = 15;\n              return (\n                <LegendItem\n                  key={`legend-quantile-${i}`}\n                  margin=\"1px 0\"\n                  onClick={(event: React.MouseEvent) => {\n                    alert(`clicked: ${JSON.stringify(label)}`);\n                  }}\n                >\n                  <svg width={size} height={size}>\n                    <rect fill={label.value} width={size} height={size} />\n                  </svg>\n                  <LegendLabel align={\"left\"} margin={\"2px 0 0 10px\"}>\n                    {label.text}\n                  </LegendLabel>\n                </LegendItem>\n              );\n            });\n          }}\n        </LegendThreshold>\n      </LegendDemo>\n      <LegendDemo title=\"Ordinal\">\n        <LegendOrdinal\n          scale={ordinalColorScale}\n          labelFormat={(label: any) => `${label.toUpperCase()}`}\n        >\n          {(labels: any) => {\n            return (\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                {labels.map((label: any, i: number) => {\n                  const size = 15;\n                  return (\n                    <LegendItem\n                      key={`legend-quantile-${i}`}\n                      margin={\"0 5px\"}\n                      onClick={(event: React.MouseEvent) => {\n                        alert(`clicked: ${JSON.stringify(label)}`);\n                      }}\n                    >\n                      <svg width={size} height={size}>\n                        <rect fill={label.value} width={size} height={size} />\n                      </svg>\n                      <LegendLabel align={\"left\"} margin={\"0 0 0 4px\"}>\n                        {label.text}\n                      </LegendLabel>\n                    </LegendItem>\n                  );\n                })}\n              </div>\n            );\n          }}\n        </LegendOrdinal>\n      </LegendDemo>\n      <LegendDemo title=\"Custom Legend\">\n        <Legend scale={shapeScale}>\n          {(labels: any) => {\n            return (\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                {labels.map((label: any, i: number) => {\n                  const size = 15;\n                  const color = ordinalColor2Scale(label.datum);\n                  const shape = shapeScale(label.datum);\n                  const shapeProps = { fill: color };\n                  const isValidElement = React.isValidElement(shape);\n                  return (\n                    <LegendItem\n                      key={`legend-quantile-${i}`}\n                      margin={\"0 4px 0 0\"}\n                      flexDirection=\"column\"\n                      onClick={(event: React.MouseEvent) => {\n                        const { datum, index } = label;\n                        alert(\n                          `clicked: ${JSON.stringify({ datum, color, index })}`\n                        );\n                      }}\n                    >\n                      <svg\n                        width={size}\n                        height={size}\n                        style={{ margin: \"0 0 8px 0\" }}\n                      >\n                        {!isValidElement &&\n                          React.createElement(shape, shapeProps)}\n                        {isValidElement && React.cloneElement(shape)}\n                      </svg>\n                      <LegendLabel align={\"left\"} margin={0}>\n                        {label.text}\n                      </LegendLabel>\n                    </LegendItem>\n                  );\n                })}\n              </div>\n            );\n          }}\n        </Legend>\n      </LegendDemo>\n      ;\n    </div>\n  );\n};\n\ninterface ILegendDemoProps {\n  children: any;\n  title: string;\n}\n\nfunction LegendDemo(props: ILegendDemoProps) {\n  const { children, title } = props;\n  return (\n    <div className=\"legend\">\n      <div className=\"title\">{title}</div>\n      {children}\n    </div>\n  );\n}\n","import { curveBasisOpen } from \"@vx/curve\";\nimport { LinearGradient } from \"@vx/gradient\";\nimport { Group } from \"@vx/group\";\nimport { appleStock, AppleStockDatum } from \"@vx/mock-data\";\nimport { Accessor, scaleLog, scaleTime } from \"@vx/scale\";\nimport { LineRadial } from \"@vx/shape\";\nimport { extent } from \"d3-array\";\nimport React from \"react\";\n\nconst green = \"#e5fd3d\";\nconst blue = \"#aeeef8\";\nconst darkgreen = \"#dff84d\";\nconst bg = \"#744cca\";\n\nconst dateAccessor: Accessor<AppleStockDatum, Date> = d => new Date(d.date);\nconst closeAccessor: Accessor<AppleStockDatum, number> = d => +d.close;\n\nconst xDomain = extent(appleStock.map(dateAccessor)) as [Date, Date];\nconst xScale = scaleTime({\n  domain: xDomain,\n  range: [0, Math.PI * 2],\n});\n\nconst yDomain = extent(appleStock.map(closeAccessor)) as [number, number];\nconst yScale = scaleLog({\n  domain: yDomain,\n});\n\nconst angle: Accessor<AppleStockDatum, number> = (d: AppleStockDatum) =>\n  xScale(dateAccessor(d));\nconst radius: Accessor<AppleStockDatum, number> = (d: AppleStockDatum) =>\n  yScale(closeAccessor(d));\n\nconst firstPoint = appleStock[0];\nconst lastPoint = appleStock[appleStock.length - 1];\n\ninterface IProps {\n  height: number;\n  width: number;\n}\n\nexport const LineRadialDemo = (props: IProps) => {\n  const { height, width } = props;\n  return (\n    <svg width={width} height={height}>\n      <LinearGradient from={green} to={blue} id=\"line-gradient\" />\n      <rect width={width} height={height} fill={bg} rx={14} />\n      <Group top={height / 2} left={width / 2}>\n        {yScale.ticks().map((tick, i) => {\n          const y = yScale(tick);\n          const opacity = 1 / (i + 1) - (1 / i) * 0.2;\n          return (\n            <g key={`radial-grid-${i}`} transform={\"scale(30)\"}>\n              <circle\n                fill={blue}\n                fillOpacity={opacity}\n                r={y}\n                stroke={blue}\n                strokeOpacity={0.2}\n                strokeWidth={1}\n              />\n              <text\n                dy={\"-.33em\"}\n                fill={blue}\n                fillOpacity={0.6}\n                fontSize={8}\n                textAnchor=\"middle\"\n                y={-y}\n              >\n                {tick}\n              </text>\n            </g>\n          );\n        })}\n        <LineRadial\n          angle={angle}\n          curve={curveBasisOpen}\n          data={appleStock}\n          fill=\"none\"\n          radius={radius}\n          stroke=\"url('#line-gradient')\"\n          strokeWidth={2}\n          strokeOpacity={0.8}\n          strokeLinecap=\"round\"\n          transform={\"scale(100)\"}\n        />\n        {[firstPoint, lastPoint].map((d, i) => {\n          const cx = (xScale(dateAccessor(d)) * Math.PI) / 180;\n          const cy = -yScale(closeAccessor(d));\n          return (\n            <circle\n              //   cx={Math.random() * 100}\n              //   cy={Math.random() * 100}\n              cx={!isNaN(cx) ? cx : 0}\n              cy={!isNaN(cy) ? cy : 0}\n              fill={darkgreen}\n              key={`line-cap-${i}`}\n              r={10}\n            />\n          );\n        })}\n      </Group>\n    </svg>\n  );\n};\n","import { curveMonotoneX } from \"@vx/curve\";\nimport { GridRows } from \"@vx/grid\";\nimport { Group } from \"@vx/group\";\nimport { DateValueDatum, genDateValue } from \"@vx/mock-data\";\nimport { IWithParentSizeProps, withParentSize } from \"@vx/responsive\";\nimport { Accessor, scaleLinear, scaleTime } from \"@vx/scale\";\nimport { LinePath } from \"@vx/shape\";\nimport { extent, max } from \"d3-array\";\nimport React from \"react\";\nimport { IMargin } from \"../../interfaces\";\n\nfunction genLines(num: number) {\n  return new Array(num).fill(1).map(() => {\n    return genDateValue(25);\n  });\n}\n\nconst series = genLines(12);\nconst data = series.reduce((rec, d) => {\n  return rec.concat(d);\n}, []);\n\nconst x: Accessor<DateValueDatum, Date> = (d: DateValueDatum) => d.date;\nconst y: Accessor<DateValueDatum, number> = (d: DateValueDatum) => d.value;\n\ninterface IProps {\n  width: number;\n  height: number;\n  margin: IMargin;\n}\n\nexport const LinesDemo = (props: IProps) => {\n  const { height, width, margin } = props;\n  const xMax = width;\n  const yMax = height / 8;\n\n  const [minDate, maxDate] = extent(data, x) as [Date, Date];\n  const scaleTimeOptions = {\n    domain: [minDate, maxDate],\n    range: [0, xMax],\n  };\n  const xScale = scaleTime(scaleTimeOptions);\n\n  const maxValue = max(data, y) as number;\n  const scaleLinearOptions = {\n    domain: [0, maxValue],\n    range: [yMax, 0],\n    rangeRound: [1, 2],\n  };\n  const yScale = scaleLinear(scaleLinearOptions);\n\n  return (\n    <svg width={width} height={height}>\n      <rect x={0} y={0} width={width} height={height} fill=\"#242424\" rx={14} />\n      <GridRows\n        top={margin.top}\n        left={margin.left}\n        scale={xScale}\n        stroke=\"rgba(142, 32, 95, 0.9)\"\n        width={xMax}\n      />\n      {xMax > 8 &&\n        series.map((d, i) => {\n          return (\n            <Group key={`lines-${i}`} top={(i * yMax) / 2}>\n              <LinePath\n                data={d}\n                x={(dd: any) => xScale(x(dd))}\n                y={(dd: any) => yScale(y(dd))}\n                stroke={\"#ffffff\"}\n                strokeWidth={1}\n                curve={i % 2 === 0 ? curveMonotoneX : undefined}\n              />\n            </Group>\n          );\n        })}\n    </svg>\n  );\n};\n\ninterface ILinesDemoResponsiveProps extends IWithParentSizeProps {\n  margin: IMargin;\n}\n\nexport const LinesDemoResponsive = withParentSize(\n  (props: ILinesDemoResponsiveProps) => {\n    const { margin, parentWidth } = props;\n    // TODO: parentHeight causes a resize every time\n    return <LinesDemo height={400} width={parentWidth} margin={margin} />;\n  }\n);\n","import { PatternCircles, PatternLines, PatternWaves } from \"@vx/pattern\";\nimport { Bar } from \"@vx/shape\";\nimport React from \"react\";\n\ninterface IProps {\n  height: number;\n  width: number;\n}\n\nexport const PatternsDemo = (props: IProps) => {\n  const { height, width } = props;\n  const xMax = width;\n  const yMax = height - 80;\n  const pWidth = xMax / 4;\n  const pHeight = yMax / 2;\n  return (\n    <svg width={width} height={height}>\n      <PatternLines\n        id=\"vLines\"\n        height={6}\n        width={6}\n        stroke=\"black\"\n        strokeWidth={1}\n      />\n      <PatternLines\n        id=\"hLines\"\n        height={6}\n        width={6}\n        stroke=\"black\"\n        strokeWidth={1}\n        orientation={[\"horizontal\"]}\n      />\n      <PatternLines\n        id=\"dLines\"\n        height={6}\n        width={6}\n        stroke=\"black\"\n        strokeWidth={1}\n        orientation={[\"diagonal\"]}\n      />\n      <PatternLines\n        id=\"dhLines\"\n        height={6}\n        width={6}\n        stroke=\"black\"\n        strokeWidth={1}\n        orientation={[\"vertical\", \"horizontal\"]}\n      />\n      <PatternCircles id=\"Circles\" height={6} width={6} fill=\"black\" />\n      <PatternCircles\n        id=\"cCircles\"\n        height={10}\n        width={10}\n        fill=\"black\"\n        complement\n      />\n      <PatternWaves\n        id=\"Waves\"\n        height={6}\n        width={6}\n        fill=\"transparent\"\n        stroke=\"black\"\n        strokeWidth={1}\n        complement\n      />\n      <PatternWaves\n        id=\"bWaves\"\n        height={12}\n        width={12}\n        fill=\"transparent\"\n        stroke=\"black\"\n        strokeWidth={1}\n        complement\n      />\n      <Bar\n        fill={`url(#vLines)`}\n        height={pHeight}\n        width={pWidth}\n        x={0}\n        y={0}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#hLines)`}\n        height={pHeight}\n        width={pWidth}\n        x={pWidth}\n        y={0}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#dLines)`}\n        height={pHeight}\n        width={pWidth}\n        x={pWidth * 2}\n        y={0}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#dhLines)`}\n        height={pHeight}\n        width={pWidth}\n        x={pWidth * 3}\n        y={0}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#Circles)`}\n        height={pHeight}\n        width={pWidth}\n        x={0}\n        y={pHeight}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#cCircles)`}\n        height={pHeight}\n        width={pWidth}\n        x={pWidth}\n        y={pHeight}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#Waves)`}\n        height={pHeight}\n        width={pWidth}\n        x={pWidth * 2}\n        y={pHeight}\n        rx={14}\n      />\n      <Bar\n        fill={`url(#bWaves)`}\n        height={pHeight}\n        width={pWidth}\n        x={pWidth * 3}\n        y={pHeight}\n        rx={14}\n      />\n    </svg>\n  );\n};\n","import { GradientPinkBlue } from \"@vx/gradient\";\nimport { Group } from \"@vx/group\";\nimport {\n  Browser,\n  browserUsage,\n  Letter,\n  letterFrequency,\n  LetterFrequencyDatum,\n} from \"@vx/mock-data\";\nimport { Pie, PieInner } from \"@vx/shape\";\nimport React from \"react\";\n\nimport { Accessor } from \"@vx/scale\";\nimport { IMargin } from \"../../interfaces\";\n\nconst white = \"#ffffff\";\nconst black = \"#000000\";\n\nconst letters = letterFrequency.slice(0, 4);\nconst browserNames = Object.keys(browserUsage[0]).filter(\n  (k: string) => k !== \"date\"\n);\n\nconst browsers = browserNames.map((k: string) => {\n  const d: any = browserUsage[0];\n  const usageString = d[k] as string;\n  const usageNumber = +usageString;\n  const browser: Browser = {\n    label: k,\n    usage: usageNumber,\n  };\n  return browser;\n});\n\nconst usageAccessor: Accessor<Browser, number> = d => d.usage;\nconst frequencyAccessor: Accessor<LetterFrequencyDatum, number> = (\n  d: LetterFrequencyDatum\n) => d.frequency;\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n}\n\nexport class PieDemo extends React.Component<IProps> {\n  public render() {\n    const { height, margin, width } = this.props;\n\n    const radius = Math.min(width, height) / 2;\n    const centerY = height / 2;\n    const centerX = width / 2;\n\n    return (\n      <svg width={width} height={height}>\n        <GradientPinkBlue id=\"pie-gradients\" />\n        <rect\n          rx={14}\n          width={width}\n          height={height}\n          fill=\"url('#pie-gradients')\"\n        />\n        <Group top={centerY - margin.top} left={centerX}>\n          <Pie\n            data={browsers}\n            pieValue={usageAccessor}\n            outerRadius={radius - 80}\n            innerRadius={radius - 120}\n            cornerRadius={3}\n            padAngle={0}\n          >\n            {(pie: PieInner<Browser>) => {\n              console.warn(\"pie browser usage\", pie);\n              return pie.arcs.map((arc, i) => {\n                const opacity = 1 / (i + 2);\n                const [centroidX, centroidY] = pie.path.centroid(arc);\n                const { startAngle, endAngle } = arc;\n                const hasSpaceForLabel = endAngle - startAngle >= 0.1;\n                // TODO: pie.path(arc) returns string | null\n                const d = pie.path(arc) as string | undefined;\n                return (\n                  <g key={`browser-${arc.data.label}-${i}`}>\n                    <path fill={white} fillOpacity={opacity} d={d} />\n                    {hasSpaceForLabel && (\n                      <text\n                        dy=\".33em\"\n                        fontSize={9}\n                        fill={white}\n                        textAnchor=\"middle\"\n                        x={centroidX}\n                        y={centroidY}\n                      >\n                        {arc.data.label}\n                      </text>\n                    )}\n                  </g>\n                );\n              });\n            }}\n          </Pie>\n          <Pie\n            data={letters}\n            pieValue={frequencyAccessor}\n            pieSortValues={(a, b) => -1}\n            outerRadius={radius - 135}\n          >\n            {(pie: PieInner<Letter>) => {\n              console.warn(\"pie letters frequency\", pie);\n              return pie.arcs.map((arc, i) => {\n                const opacity = 1 / (i + 2);\n                const [centroidX, centroidY] = pie.path.centroid(arc);\n                const d = pie.path(arc) as string | undefined;\n                return (\n                  <g key={`letters-${arc.data.label}-${i}`}>\n                    <path d={d} fill={black} fillOpacity={opacity} />\n                    <text\n                      dy=\".33em\"\n                      fill=\"white\"\n                      fontSize={9}\n                      textAnchor=\"middle\"\n                      x={centroidX}\n                      y={centroidY}\n                    >\n                      {arc.data.letter}\n                    </text>\n                  </g>\n                );\n              });\n            }}\n          </Pie>\n        </Group>\n      </svg>\n    );\n  }\n}\n","import { GradientPinkRed } from \"@vx/gradient\";\nimport { Group } from \"@vx/group\";\nimport { scaleBand } from \"@vx/scale\";\nimport { Polygon } from \"@vx/shape\";\nimport React from \"react\";\n\ninterface IProps {\n  height: number;\n  width: number;\n}\n\ninterface IPolygon {\n  fill: string;\n  rotate: number;\n  sides: number;\n}\n\nconst polygons: IPolygon[] = [\n  {\n    fill: \"rgb(174, 238, 248)\",\n    rotate: 90,\n    sides: 3,\n  },\n  {\n    fill: \"rgb(229, 253, 61)\",\n    rotate: 45,\n    sides: 4,\n  },\n  {\n    fill: \"rgb(229, 130, 255)\",\n    rotate: 0,\n    sides: 6,\n  },\n  {\n    fill: \"url(#polygon-pink)\",\n    rotate: 0,\n    sides: 8,\n  },\n];\n\nconst yScale = scaleBand({\n  domain: polygons.map((p: IPolygon, i: number) => i),\n  padding: 20,\n});\n\nexport const PolygonsDemo = (props: IProps) => {\n  const { height, width } = props;\n  return (\n    <svg width={width} height={height}>\n      <rect width={width} height={height} fill=\"#7f82e3\" rx={14} />\n      <GradientPinkRed id=\"polygon-pink\" />\n      {polygons.map((polygon, i) => (\n        <Group key={`polygon-${i}`} top={yScale(i)} left={width / 2}>\n          <Polygon\n            sides={polygon.sides}\n            size={30}\n            fill={polygon.fill}\n            rotate={polygon.rotate}\n          />\n        </Group>\n      ))}\n    </svg>\n  );\n};\n","import { Text } from \"@vx/text\";\nimport React from \"react\";\n\ninterface IProps {\n  height: number;\n  text: string;\n  width: number;\n}\n\nexport const TextDemo = (props: IProps) => {\n  const { height, text, width } = props;\n  return (\n    <svg width={width} height={height}>\n      <Text\n        angle={10}\n        style={{ fill: \"black\", fontSize: \"4.5rem\", stroke: \"white\" }}\n        textAnchor=\"middle\"\n        verticalAnchor=\"middle\"\n        width={width}\n        x={width / 2}\n        y={height / 2}\n      >\n        {text}\n      </Text>\n    </svg>\n  );\n};\n","import { AxisBottom, AxisLeft } from \"@vx/axis\";\nimport { curveBasis } from \"@vx/curve\";\nimport { GridColumns, GridRows } from \"@vx/grid\";\nimport { Group } from \"@vx/group\";\nimport { cityTemperature, CityTemperatureDatum } from \"@vx/mock-data\";\nimport { scaleLinear, scaleTime } from \"@vx/scale\";\nimport { LinePath } from \"@vx/shape\";\nimport { Threshold } from \"@vx/threshold\";\nimport { extent, max, min } from \"d3-array\";\nimport { timeParse } from \"d3-time-format\";\nimport React from \"react\";\n\nimport { IMargin } from \"../../interfaces\";\n\nconst parseDate = timeParse(\"%Y%m%d\");\n\nconst dateAccessor = (d: CityTemperatureDatum) => parseDate(d.date) as Date;\nconst nyAccessor = (d: CityTemperatureDatum) => +d[\"New York\"];\nconst sfAccessor = (d: CityTemperatureDatum) => +d[\"San Francisco\"];\n\nconst xScale = scaleTime({\n  domain: extent(cityTemperature.map(dateAccessor)) as [Date, Date],\n});\n\nconst minima = cityTemperature.map(d => min([nyAccessor(d), sfAccessor(d)]));\nconst maxima = cityTemperature.map(d => max([nyAccessor(d), sfAccessor(d)]));\nconst tempMin = min(minima as [number, number]) as number;\nconst tempMax = max(maxima as [number, number]) as number;\nconst yScale = scaleLinear({\n  domain: [tempMin, tempMax],\n  nice: true,\n});\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n}\n\nexport class ThresholdDemo extends React.Component<IProps> {\n  public render() {\n    const { height, margin, width } = this.props;\n    const xMax = width - margin.left - margin.right;\n    const yMax = height - margin.top - margin.bottom;\n\n    xScale.range([0, xMax]);\n    yScale.range([yMax, 0]);\n\n    return (\n      <div>\n        <svg width={width} height={height}>\n          <rect\n            fill=\"#f3f3f3\"\n            height={height}\n            rx={14}\n            width={width}\n            x={0}\n            y={0}\n          />\n          <Group left={margin.left} top={margin.top}>\n            <GridRows\n              height={yMax}\n              scale={yScale}\n              stroke=\"#e0e0e0\"\n              width={xMax}\n            />\n            <GridColumns\n              height={yMax}\n              scale={xScale}\n              stroke=\"#e0e0e0\"\n              width={xMax}\n            />\n            <line stroke=\"#e0e0e0\" x1={xMax} x2={xMax} y1={0} y2={yMax} />\n            <AxisBottom\n              numTicks={width > 520 ? 10 : 5}\n              scale={xScale}\n              top={yMax}\n            />\n            <AxisLeft scale={yScale} />\n            <text x=\"-70\" y=\"15\" transform=\"rotate(-90)\" fontSize={10}>\n              Temperature (°F)\n            </text>\n            <Threshold\n              aboveAreaProps={{\n                fill: \"green\",\n                fillOpacity: 0.4,\n              }}\n              belowAreaProps={{\n                fill: \"red\",\n                fillOpacity: 0.4,\n              }}\n              clipAboveTo={0}\n              clipBelowTo={yMax}\n              curve={curveBasis}\n              data={cityTemperature}\n              x={(d: CityTemperatureDatum) => xScale(dateAccessor(d))}\n              y0={(d: CityTemperatureDatum) => yScale(nyAccessor(d))}\n              y1={(d: CityTemperatureDatum) => yScale(sfAccessor(d))}\n            />\n            <LinePath\n              curve={curveBasis}\n              data={cityTemperature}\n              stroke=\"#000\"\n              strokeDasharray=\"1,2\"\n              strokeOpacity={0.8}\n              strokeWidth={1.5}\n              x={(d: CityTemperatureDatum) => xScale(dateAccessor(d))}\n              y={(d: CityTemperatureDatum) => yScale(sfAccessor(d))}\n            />\n            <LinePath\n              curve={curveBasis}\n              data={cityTemperature}\n              stroke=\"#000\"\n              strokeWidth={1.5}\n              x={(d: CityTemperatureDatum) => xScale(dateAccessor(d))}\n              y={(d: CityTemperatureDatum) => yScale(nyAccessor(d))}\n            />\n          </Group>\n        </svg>\n      </div>\n    );\n  }\n}\n","import { getCoordsFromEvent } from \"@vx/brush\";\nimport { RectClipPath } from \"@vx/clip-path\";\nimport { GradientOrangeRed, GradientPinkRed } from \"@vx/gradient\";\nimport { Group } from \"@vx/group\";\nimport { Accessor, scaleLinear, ScaleLinear } from \"@vx/scale\";\nimport {\n  Polygon,\n  Site,\n  voronoi,\n  VoronoiDiagram,\n  VoronoiPolygon,\n} from \"@vx/voronoi\";\nimport React from \"react\";\n\nimport { IMargin } from \"../../interfaces\";\n\nconst neighborRadius = 75;\n\ninterface IDatum {\n  id: string;\n  x: number;\n  y: number;\n}\n\nconst xAccessor = (d: IDatum) => d.x;\nconst yAccessor = (d: IDatum) => d.y;\n\nconst extent = (arr: IDatum[], accessor: Accessor<IDatum, number>) => {\n  return [Math.min(...arr.map(accessor)), Math.max(...arr.map(accessor))];\n};\n\nconst data: IDatum[] = Array(200)\n  .fill(null)\n  .map(() => {\n    const datum: IDatum = {\n      id: Math.random()\n        .toString(36)\n        .slice(2),\n      x: Math.random(),\n      y: Math.random(),\n    };\n    return datum;\n  });\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n}\n\ninterface IState {\n  innerHeight: number;\n  innerWidth: number;\n  neighbors: Map<string, boolean>;\n  selected: Site | null;\n  // selectedNeighbors?: null;\n  voronoiDiagram: VoronoiDiagram;\n  xScale: ScaleLinear<number, number>;\n  yScale: ScaleLinear<number, number>;\n}\n\nexport class VoronoiDemo extends React.PureComponent<IProps, IState> {\n  public static getUpdatedState(props: IProps) {\n    const { width, height, margin } = props;\n    const innerWidth = width - margin.left - margin.right;\n    const innerHeight = height - margin.top - margin.bottom;\n\n    const xScale = scaleLinear({\n      domain: extent(data, xAccessor),\n      range: [0, innerWidth],\n    });\n\n    const yScale = scaleLinear({\n      domain: extent(data, yAccessor),\n      range: [innerHeight, 0],\n    });\n\n    const voronoiOptions = {\n      height: innerHeight,\n      width: innerWidth,\n      x: (d: IDatum) => xScale(d.x),\n      y: (d: IDatum) => yScale(d.y),\n    };\n    const voronoiDiagram = voronoi(voronoiOptions)(data);\n\n    return {\n      innerHeight,\n      innerWidth,\n      neighbors: new Map(),\n      selected: null,\n      // selectedNeighbors: null,\n      voronoiDiagram,\n      xScale,\n      yScale,\n    };\n  }\n  private svg: any;\n\n  constructor(props: IProps) {\n    super(props);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.state = VoronoiDemo.getUpdatedState(props);\n  }\n\n  public componentWillReceiveProps(nextProps: IProps) {\n    if (\n      nextProps.width !== this.props.width ||\n      nextProps.height !== this.props.height\n    ) {\n      this.setState(VoronoiDemo.getUpdatedState(nextProps));\n    }\n  }\n\n  public render() {\n    const { width, height, margin } = this.props;\n\n    const {\n      voronoiDiagram,\n      innerWidth,\n      innerHeight,\n      xScale,\n      yScale,\n      selected,\n      neighbors,\n    } = this.state;\n\n    const polygons = voronoiDiagram.polygons();\n\n    return (\n      <svg\n        width={width}\n        height={height}\n        ref={(ref: any) => {\n          this.svg = ref;\n        }}\n      >\n        <GradientOrangeRed id=\"voronoi_orange_red\" />\n        <GradientPinkRed id=\"voronoi_pink_red\" />\n        <rect\n          fill=\"url(#voronoi_pink_red)\"\n          height={innerHeight}\n          rx={14}\n          width={innerWidth}\n        />\n        <RectClipPath\n          id=\"voronoi_clip\"\n          height={innerHeight}\n          rx={14}\n          width={innerWidth}\n        />\n        <Group\n          clipPath=\"url(#voronoi_clip)\"\n          left={margin.left}\n          onMouseLeave={this.handleMouseLeave}\n          onMouseMove={this.handleMouseMove}\n          top={margin.top}\n        >\n          {polygons.map((polygon: Polygon) => {\n            const hasNeighbors = neighbors.get(polygon.data.id);\n            return (\n              <VoronoiPolygon\n                fill={\n                  selected &&\n                  (polygon.data.id === selected.data.id || hasNeighbors)\n                    ? \"url(#voronoi_orange_red)\"\n                    : \"url(#voronoi_pink_red)\"\n                }\n                fillOpacity={neighbors && hasNeighbors ? 0.4 : 1}\n                key={`polygon-${polygon.data.id}`}\n                polygon={polygon}\n                stroke=\"#ffffff\"\n                strokeWidth={1}\n              />\n            );\n          })}\n          {data.map((d: IDatum) => (\n            <circle\n              cx={xScale(d.x)}\n              cy={yScale(d.y)}\n              fill=\"#ffffff\"\n              fillOpacity={0.5}\n              key={`circle-${d.id}`}\n              r={2}\n            />\n          ))}\n        </Group>\n      </svg>\n    );\n  }\n\n  private handleMouseMove(event: React.MouseEvent) {\n    const { voronoiDiagram } = this.state;\n    const { x, y } = getCoordsFromEvent(this.svg, event);\n    const closest = voronoiDiagram.find(x, y, neighborRadius);\n\n    if (closest) {\n      const neighbors = new Map();\n      const cell = voronoiDiagram.cells[closest.index];\n      cell.halfedges.forEach((index: number) => {\n        const edge = voronoiDiagram.edges[index];\n        const { left, right } = edge;\n        if (left && left !== closest) {\n          neighbors.set(left.data.id, true);\n        } else if (right && right !== closest) {\n          neighbors.set(right.data.id, true);\n        }\n      });\n      this.setState({ selected: closest, neighbors });\n    }\n  }\n\n  private handleMouseLeave(event: React.MouseEvent) {\n    this.setState({ selected: null, neighbors: new Map() });\n  }\n}\n","import { RectClipPath } from \"@vx/clip-path\";\nimport { localPoint } from \"@vx/event\";\nimport { genPhyllotaxis } from \"@vx/mock-data\";\nimport { scaleLinear } from \"@vx/scale\";\nimport { Zoom, ZoomState } from \"@vx/zoom\";\nimport { interpolateRainbow } from \"d3-scale-chromatic\";\nimport React from \"react\";\n\nimport { IMargin } from \"../../interfaces\";\n\nconst bg = \"#0a0a0a\";\nconst points = [...new Array(1000)];\n\nconst colorScale = scaleLinear({ range: [0, 1], domain: [0, 1000] });\nconst sizeScale = scaleLinear({ domain: [0, 600], range: [0.5, 8] });\n\nconst initialTransform = {\n  scaleX: 1.27,\n  scaleY: 1.27,\n  skewX: 0,\n  skewY: 0,\n  translateX: -211.62,\n  translateY: 162.59,\n};\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n  width: number;\n}\n\ninterface IState {\n  showMiniMap: boolean;\n}\n\nexport class ZoomDemo extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = { showMiniMap: true };\n    this.toggleMiniMap = this.toggleMiniMap.bind(this);\n  }\n\n  public render() {\n    const { width, height } = this.props;\n    const { showMiniMap } = this.state;\n\n    const gen = genPhyllotaxis({ radius: 10, width, height });\n    const phyllotaxis = points.map((d: any, i) => gen(i));\n\n    return (\n      <Zoom\n        height={height}\n        scaleXMax={4}\n        scaleXMin={1 / 2}\n        scaleYMax={4}\n        scaleYMin={1 / 2}\n        transformMatrix={initialTransform}\n        width={width}\n      >\n        {(zoom: ZoomState) => {\n          // console.warn(\"ZOOM\", zoom);\n          return (\n            <div style={{ position: \"relative\" }}>\n              <svg\n                width={width}\n                height={height}\n                style={{ cursor: zoom.isDragging ? \"grabbing\" : \"grab\" }}\n              >\n                <RectClipPath id=\"zoom-clip\" width={width} height={height} />\n                <rect width={width} height={height} rx={14} fill={bg} />\n                <g transform={zoom.toString()}>\n                  {phyllotaxis.map((point, i) => {\n                    return (\n                      <React.Fragment key={`dot-${i}`}>\n                        <circle\n                          cx={point.x}\n                          cy={point.y}\n                          fill={interpolateRainbow(colorScale(i))}\n                          r={i > 500 ? sizeScale(1000 - i) : sizeScale(i)}\n                        />\n                      </React.Fragment>\n                    );\n                  })}\n                </g>\n                <rect\n                  fill=\"transparent\"\n                  height={height}\n                  onWheel={zoom.handleWheel}\n                  onDoubleClick={(event: React.MouseEvent) => {\n                    const point = localPoint(event);\n                    zoom.scale({ scaleX: 1.1, scaleY: 1.1, point });\n                  }}\n                  onMouseDown={zoom.dragStart}\n                  onMouseLeave={() => {\n                    if (!zoom.isDragging) {\n                      return;\n                    }\n                    zoom.dragEnd();\n                  }}\n                  onMouseMove={zoom.dragMove}\n                  onMouseUp={zoom.dragEnd}\n                  rx={14}\n                  width={width}\n                />\n                {showMiniMap && (\n                  <g\n                    clipPath=\"url(#zoom-clip)\"\n                    transform={`\n                      scale(0.25)\n                      translate(${width * 4 - width - 60}, ${height * 4 -\n                      height -\n                      60})\n                    `}\n                  >\n                    <rect width={width} height={height} fill=\"#1a1a1a\" />\n                    {phyllotaxis.map((d, i) => {\n                      const { x, y } = d;\n                      return (\n                        <React.Fragment key={`dot-sm-${i}`}>\n                          <circle\n                            cx={x}\n                            cy={y}\n                            r={i > 500 ? sizeScale(1000 - i) : sizeScale(i)}\n                            fill={interpolateRainbow(colorScale(i))}\n                          />\n                        </React.Fragment>\n                      );\n                    })}\n                    <rect\n                      width={width}\n                      height={height}\n                      fill=\"white\"\n                      fillOpacity={0.2}\n                      stroke=\"white\"\n                      strokeWidth={4}\n                      transform={zoom.toStringInvert()}\n                    />\n                  </g>\n                )}\n              </svg>\n              <div className=\"controls\">\n                <button\n                  className=\"btn btn-zoom\"\n                  onClick={() => zoom.scale({ scaleX: 1.2, scaleY: 1.2 })}\n                >\n                  +\n                </button>\n                <button\n                  className=\"btn btn-zoom btn-bottom\"\n                  onClick={() => zoom.scale({ scaleX: 0.8, scaleY: 0.8 })}\n                >\n                  -\n                </button>\n                <button className=\"btn btn-lg\" onClick={zoom.center}>\n                  Center\n                </button>\n                <button className=\"btn btn-lg\" onClick={zoom.reset}>\n                  Reset\n                </button>\n                <button className=\"btn btn-lg\" onClick={zoom.clear}>\n                  Clear\n                </button>\n              </div>\n              <div className=\"mini-map\">\n                <button className=\"btn btn-lg\" onClick={this.toggleMiniMap}>\n                  {showMiniMap ? \"Hide\" : \"Show\"} Mini Map\n                </button>\n              </div>\n            </div>\n          );\n        }}\n      </Zoom>\n    );\n  }\n\n  private toggleMiniMap() {\n    this.setState(prevState => {\n      return {\n        showMiniMap: !prevState.showMiniMap,\n      };\n    });\n  }\n}\n","import { appleStock } from \"@vx/mock-data\";\nimport { ParentProps, ParentSize } from \"@vx/responsive\";\nimport React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nimport { AreaDemo, AreaDemoWithTooltip } from \"../AreaDemo\";\nimport { AxisDemoResponsive } from \"../AxisDemo\";\nimport { BarGroupDemo } from \"../BarGroupDemo\";\nimport { BarGroupHorizontalDemo } from \"../BarGroupHorizontalDemo\";\nimport { CurveDemo } from \"../CurveDemo\";\nimport { DragDemo } from \"../DragDemo\";\nimport { GeoDemo } from \"../GeoDemo\";\nimport { GlyphDemo } from \"../GlyphDemo\";\nimport { GradientsDemo } from \"../GradientsDemo\";\nimport { HeatmapsDemo } from \"../HeatmapsDemo\";\nimport { LegendDemos } from \"../LegendDemo\";\nimport { LineRadialDemo } from \"../LineRadialDemo\";\nimport { LinesDemoResponsive } from \"../LinesDemo\";\nimport { PatternsDemo } from \"../PatternsDemo\";\nimport { PieDemo } from \"../PieDemo\";\nimport { PolygonsDemo } from \"../PolygonsDemo\";\nimport { TextDemo } from \"../TextDemo\";\nimport { ThresholdDemo } from \"../ThresholdDemo\";\nimport { VoronoiDemo } from \"../VoronoiDemo\";\nimport { ZoomDemo } from \"../ZoomDemo\";\nimport logo from \"./logo.svg\";\n\nconst Div = styled.div`\n  text-align: center;\n`;\n\nconst rotate = () => keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst RotatingLogo = styled.img`\n  animation: ${rotate()} infinite 20s linear;\n  height: 40vmin;\n`;\n\nconst Header = styled.header`\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n`;\n\n/*\n  CSS Grid auto-fit for responsiveness: https://gridbyexample.com/examples/example37/\n  Common CSS breakpoints:\n  https://stackoverflow.com/questions/6370690/media-queries-how-to-target-desktop-tablet-and-mobile#7354648\n*/\ninterface IGridProps {\n  gridGap: number;\n}\nconst Grid = styled.div`\n  background-color: #282c34;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(600px, 1fr));\n  grid-gap: ${(props: IGridProps) => `${props.gridGap}` + \"rem\"};\n`;\n\ninterface IMargin {\n  bottom: number;\n  left: number;\n  right: number;\n  top: number;\n}\n\ninterface IProps {\n  height: number;\n  margin: IMargin;\n}\n\nconst stock = appleStock.slice(800);\n\nclass App extends React.Component<IProps> {\n  public static defaultProps: Partial<IProps> = {\n    height: 400,\n    margin: {\n      bottom: 30,\n      left: 50,\n      right: 10,\n      top: 10,\n    },\n  };\n  public render() {\n    const { height, margin } = this.props;\n    return (\n      <Div>\n        <Header>\n          <h1>vx-kitchensink</h1>\n          <RotatingLogo src={logo} alt=\"logo\" />\n        </Header>\n        <Grid gridGap={2}>\n          <AxisDemoResponsive margin={margin} />\n          <LinesDemoResponsive margin={margin} />\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <GradientsDemo height={height} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <PatternsDemo height={height} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <PolygonsDemo height={height} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <HeatmapsDemo\n                  height={height}\n                  margin={margin}\n                  separation={20}\n                  width={width}\n                />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <AreaDemo\n                  height={height}\n                  ruler={{ left: width / 2, top: height / 2 }}\n                  margin={margin}\n                  // onMouseMove={(event: Event) => console.warn(\"Move\", event)}\n                  width={width}\n                />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <AreaDemoWithTooltip\n                  height={height}\n                  margin={margin}\n                  width={width}\n                />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <TextDemo\n                  height={height}\n                  text={\"This is a test\"}\n                  width={width}\n                />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <LegendDemos height={height} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <GlyphDemo height={height} margin={margin} width={width} />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <GeoDemo height={height} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <ThresholdDemo height={height} margin={margin} width={width} />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <DragDemo height={height} margin={margin} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <VoronoiDemo height={height} margin={margin} width={width} />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <CurveDemo height={height} margin={margin} width={width} />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <ZoomDemo height={height} margin={margin} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <LineRadialDemo height={height} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return <PieDemo height={height} margin={margin} width={width} />;\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <BarGroupDemo height={height} margin={margin} width={width} />\n              );\n            }}\n          </ParentSize>\n          <ParentSize>\n            {(props: ParentProps) => {\n              const { width } = props;\n              return (\n                <BarGroupHorizontalDemo\n                  height={height}\n                  margin={margin}\n                  width={width}\n                />\n              );\n            }}\n          </ParentSize>\n        </Grid>\n      </Div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}